"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import abc
import bdc_logger_pb2
import collections.abc
import grpc
import grpc.aio
import typing

_T = typing.TypeVar("_T")

class _MaybeAsyncIterator(collections.abc.AsyncIterator[_T], collections.abc.Iterator[_T], metaclass=abc.ABCMeta): ...

class _ServicerContext(grpc.ServicerContext, grpc.aio.ServicerContext):  # type: ignore[misc, type-arg]
    ...

class LogMeasurementStub:
    def __init__(self, channel: typing.Union[grpc.Channel, grpc.aio.Channel]) -> None: ...
    LogMeasurement: grpc.UnaryUnaryMultiCallable[
        bdc_logger_pb2.LogMeasurementRequest,
        bdc_logger_pb2.LogMeasurementResponse,
    ]

class LogMeasurementAsyncStub:
    LogMeasurement: grpc.aio.UnaryUnaryMultiCallable[
        bdc_logger_pb2.LogMeasurementRequest,
        bdc_logger_pb2.LogMeasurementResponse,
    ]

class LogMeasurementServicer(metaclass=abc.ABCMeta):
    @abc.abstractmethod
    def LogMeasurement(
        self,
        request: bdc_logger_pb2.LogMeasurementRequest,
        context: _ServicerContext,
    ) -> typing.Union[bdc_logger_pb2.LogMeasurementResponse, collections.abc.Awaitable[bdc_logger_pb2.LogMeasurementResponse]]: ...

def add_LogMeasurementServicer_to_server(servicer: LogMeasurementServicer, server: typing.Union[grpc.Server, grpc.aio.Server]) -> None: ...
