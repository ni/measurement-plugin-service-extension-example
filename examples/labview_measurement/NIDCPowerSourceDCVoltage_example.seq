<?xml version="1.0" encoding="UTF-8"?>
<teststandfileheader type='SequenceFile' fileversion='962' productname='TestStand' productversion='2021 SP1 (21.1.0.49154)' compatibleversion='21.0.0.0' buildversion='21.0.0.49156' xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.ni.com/TestStand/21.0.0/SequenceFile">
	<typelist>
		<typedef alwayssavetype='false' additionaltypeflags='0' typelistordernum='1'>
			<Expression classname='ExprValue' isroottypedef='true' typecategory='3' timestamp='1650060499' typeversion='21.0.0.49156' typelastmodversion='21.1.0.49154' typeminprodversion='21.0.0.0' typeflags='33554436'>
				<value/>
			</Expression>
		</typedef>
		<typedef alwayssavetype='false' additionaltypeflags='0' typelistordernum='2'>
			<StepTypeMenu classname='Obj' isroottypedef='true' typecategory='3' timestamp='1650060499' typeversion='21.0.0.49156' typelastmodversion='21.1.0.49154' typeminprodversion='21.0.0.0' typeflags='33554436' flagsforinstances='4718616' instanceoverrideflags='4718616' valueflags='24'>
				<subprops>
					<CanBeSubstepType classname='Bool'>
						<value>false</value>
					</CanBeSubstepType>
					<CanOnlyBeSubstepType classname='Bool'>
						<value>false</value>
					</CanOnlyBeSubstepType>
					<Category classname='Str'>
						<value>""</value>
					</Category>
					<ItemName typename='Expression' xsi:type='Expression' classname='ExprValue'>
						<value>""</value>
					</ItemName>
					<SingularItemName classname='Str'>
						<value>""</value>
					</SingularItemName>
					<SeparatorBeforeCategory classname='Bool'>
						<value>false</value>
					</SeparatorBeforeCategory>
					<SeparatorBeforeItemName classname='Bool'>
						<value>false</value>
					</SeparatorBeforeItemName>
					<Group classname='Str'>
						<value/>
					</Group>
				</subprops>
			</StepTypeMenu>
		</typedef>
		<typedef alwayssavetype='false' additionaltypeflags='0' typelistordernum='3'>
			<StepTypeSubstepsArray classname='Objs' isroottypedef='true' typecategory='3' timestamp='1650060499' typeversion='21.0.0.49156' typelastmodversion='21.1.0.49154' typeminprodversion='21.0.0.0' typeflags='33554436' flagsforinstances='4718616' instanceoverrideflags='4849688' valueflags='24'>
				<value lbound='[0]' ubound='[]'/>
			</StepTypeSubstepsArray>
		</typedef>
		<typedef alwayssavetype='false' additionaltypeflags='0' typelistordernum='4'>
			<NI_ArrayDimensions classname='ArrayDimensions' isroottypedef='true' typecategory='3' timestamp='1650060499' typeversion='21.0.0.49156' typelastmodversion='21.1.0.49154' typeminprodversion='21.0.0.0' typeflags='33554436' valueflags='24'>
				<subprops>
					<LowerBounds classname='Nums'>
						<value lbound='[0]' ubound='[]'/>
					</LowerBounds>
					<UpperBounds classname='Nums'>
						<value lbound='[0]' ubound='[]'/>
					</UpperBounds>
				</subprops>
			</NI_ArrayDimensions>
		</typedef>
		<typedef alwayssavetype='false' additionaltypeflags='0' typelistordernum='5'>
			<NI_PropertyObjectType classname='PropertyObjectType' isroottypedef='true' typecategory='3' timestamp='1650060499' typeversion='21.0.0.49156' typelastmodversion='21.1.0.49154' typeminprodversion='21.0.0.0' typeflags='33554436' valueflags='24'>
				<subprops>
					<ValueType classname='Num'>
						<value>3</value>
					</ValueType>
					<IsObject classname='Bool'>
						<value>true</value>
					</IsObject>
					<TypeName classname='Str'>
						<value/>
					</TypeName>
					<ElementType classname='Objs'>
						<value lbound='[0]' ubound='[]'/>
					</ElementType>
					<ArrayDimensions typename='NI_ArrayDimensions' xsi:type='NI_ArrayDimensions' classname='ArrayDimensions'>
						<subprops>
							<LowerBounds classname='Nums'>
								<value lbound='[0]' ubound='[]'/>
							</LowerBounds>
							<UpperBounds classname='Nums'>
								<value lbound='[0]' ubound='[]'/>
							</UpperBounds>
						</subprops>
					</ArrayDimensions>
					<Representation classname='Num'>
						<value>1</value>
					</Representation>
					<ClassName classname='Str'>
						<value/>
					</ClassName>
				</subprops>
			</NI_PropertyObjectType>
		</typedef>
		<typedef alwayssavetype='false' additionaltypeflags='0' typelistordernum='6'>
			<NI_CustomResult classname='CustomResult' isroottypedef='true' typecategory='3' timestamp='1650060499' typeversion='21.0.0.49156' typelastmodversion='21.1.0.49154' typeminprodversion='21.0.0.0' typeflags='33554436' valueflags='24'>
				<subprops>
					<Name typename='Expression' xsi:type='Expression' classname='ExprValue'>
						<value/>
					</Name>
					<ValueToLog typename='Expression' xsi:type='Expression' classname='ExprValue'>
						<value/>
					</ValueToLog>
					<Condition typename='Expression' xsi:type='Expression' classname='ExprValue'>
						<value/>
					</Condition>
					<Flags classname='Num'>
						<value>8192</value>
						<numericfmt>%#x</numericfmt>
					</Flags>
					<CheckedState classname='Num'>
						<value>2</value>
					</CheckedState>
					<Type typename='NI_PropertyObjectType' xsi:type='NI_PropertyObjectType' classname='PropertyObjectType'>
						<subprops>
							<ValueType classname='Num'>
								<value>3</value>
							</ValueType>
							<IsObject classname='Bool'>
								<value>true</value>
							</IsObject>
							<TypeName classname='Str'>
								<value/>
							</TypeName>
							<ElementType classname='Objs'>
								<value lbound='[0]' ubound='[]'/>
							</ElementType>
							<ArrayDimensions classname='ArrayDimensions'>
								<subprops>
									<LowerBounds classname='Nums'>
										<value lbound='[0]' ubound='[]'/>
									</LowerBounds>
									<UpperBounds classname='Nums'>
										<value lbound='[0]' ubound='[]'/>
									</UpperBounds>
								</subprops>
							</ArrayDimensions>
							<Representation classname='Num'>
								<value>1</value>
							</Representation>
							<ClassName classname='Str'>
								<value/>
							</ClassName>
						</subprops>
					</Type>
					<Elements classname='Objs'>
						<value lbound='[0]' ubound='[]'/>
					</Elements>
					<IsAnyType classname='Bool'>
						<value>true</value>
					</IsAnyType>
				</subprops>
			</NI_CustomResult>
		</typedef>
		<typedef alwayssavetype='false' additionaltypeflags='0' typelistordernum='7'>
			<TEInf classname='Obj' isroottypedef='true' typecategory='3' timestamp='1650060499' typeversion='21.0.0.49156' typelastmodversion='21.1.0.49154' typeminprodversion='21.0.0.0' typeflags='33554436' flagsforinstances='4456472' instanceoverrideflags='4456472' valueflags='24'>
				<subprops>
					<Id classname='Str' flagsforinstances='1' instanceoverrideflags='5046297'>
						<value/>
					</Id>
					<Icon classname='Str' instanceoverrideflags='5046296'>
						<value/>
					</Icon>
					<SData classname='Obj' flagsforinstances='2097152' instanceoverrideflags='7143448' structureflags='2097152'/>
					<PreCond typename='Expression' xsi:type='Expression' classname='ExprValue' instanceoverrideflags='5046296'>
						<value/>
					</PreCond>
					<LoadOpt classname='Str' instanceoverrideflags='5046296'>
						<value>PreloadWhenExecuted</value>
					</LoadOpt>
					<UnloadOpt classname='Str' instanceoverrideflags='5046296'>
						<value>UnloadWithFile</value>
					</UnloadOpt>
					<Mode classname='Str' instanceoverrideflags='5046296'>
						<value>Normal</value>
					</Mode>
					<WindowActivation classname='Str' instanceoverrideflags='5046296'>
						<value>None</value>
					</WindowActivation>
					<ResultOption classname='Num' instanceoverrideflags='5046296'>
						<value>1</value>
					</ResultOption>
					<StepFCSeqF classname='Bool' instanceoverrideflags='5046296'>
						<value>true</value>
					</StepFCSeqF>
					<IgnoreRTE classname='Bool' instanceoverrideflags='5046296'>
						<value>false</value>
					</IgnoreRTE>
					<UseMutex classname='Bool' instanceoverrideflags='5046296'>
						<value>false</value>
					</UseMutex>
					<MutexNameOrRef typename='Expression' xsi:type='Expression' classname='ExprValue' instanceoverrideflags='5046296'>
						<value/>
					</MutexNameOrRef>
					<BatchSyncOpt classname='Num' instanceoverrideflags='5046296'>
						<value>0</value>
					</BatchSyncOpt>
					<SwitchEnabled classname='Bool' instanceoverrideflags='5046296'>
						<value>false</value>
					</SwitchEnabled>
					<VirtualDeviceName typename='Expression' xsi:type='Expression' classname='ExprValue' instanceoverrideflags='5046296'>
						<value/>
					</VirtualDeviceName>
					<SwitchOperation classname='Num' instanceoverrideflags='5046296'>
						<value>1</value>
					</SwitchOperation>
					<RouteGroupConnect typename='Expression' xsi:type='Expression' classname='ExprValue' instanceoverrideflags='5046296'>
						<value/>
					</RouteGroupConnect>
					<RouteGroupDisconnect typename='Expression' xsi:type='Expression' classname='ExprValue' instanceoverrideflags='5046296'>
						<value/>
					</RouteGroupDisconnect>
					<MulticonnectMode classname='Num' instanceoverrideflags='5046296'>
						<value>1</value>
					</MulticonnectMode>
					<OperationOrder classname='Num' instanceoverrideflags='5046296'>
						<value>2</value>
					</OperationOrder>
					<ConnectionLifetime classname='Num' instanceoverrideflags='5046296'>
						<value>4</value>
					</ConnectionLifetime>
					<WaitForDebounce classname='Bool' instanceoverrideflags='5046296'>
						<value>true</value>
					</WaitForDebounce>
					<PassAct classname='Str' instanceoverrideflags='5046296'>
						<value>Next</value>
					</PassAct>
					<FailAct classname='Str' instanceoverrideflags='5046296'>
						<value>Next</value>
					</FailAct>
					<PassActTarget typename='Expression' xsi:type='Expression' classname='ExprValue' instanceoverrideflags='5046296'>
						<value/>
					</PassActTarget>
					<FailActTarget typename='Expression' xsi:type='Expression' classname='ExprValue' instanceoverrideflags='5046296'>
						<value/>
					</FailActTarget>
					<CustExpr typename='Expression' xsi:type='Expression' classname='ExprValue' instanceoverrideflags='5046296'>
						<value/>
					</CustExpr>
					<CustTrueAct classname='Str' instanceoverrideflags='5046296'>
						<value>Next</value>
					</CustTrueAct>
					<CustFalseAct classname='Str' instanceoverrideflags='5046296'>
						<value>Next</value>
					</CustFalseAct>
					<CustTrueActTarget typename='Expression' xsi:type='Expression' classname='ExprValue' instanceoverrideflags='5046296'>
						<value/>
					</CustTrueActTarget>
					<CustFalseActTarget typename='Expression' xsi:type='Expression' classname='ExprValue' instanceoverrideflags='5046296'>
						<value/>
					</CustFalseActTarget>
					<LoopType classname='Str' instanceoverrideflags='5046296'>
						<value>NoLooping</value>
					</LoopType>
					<LoopWhile typename='Expression' xsi:type='Expression' classname='ExprValue' instanceoverrideflags='5046296'>
						<value/>
					</LoopWhile>
					<LoopStatus typename='Expression' xsi:type='Expression' classname='ExprValue' instanceoverrideflags='5046296'>
						<value/>
					</LoopStatus>
					<LoopIncrement typename='Expression' xsi:type='Expression' classname='ExprValue' instanceoverrideflags='5046296'>
						<value>RunState.LoopIndex += 1</value>
					</LoopIncrement>
					<LoopInitialize typename='Expression' xsi:type='Expression' classname='ExprValue' instanceoverrideflags='5046296'>
						<value>RunState.LoopIndex = 0</value>
					</LoopInitialize>
					<LoopOpt classname='Num' instanceoverrideflags='5046296'>
						<value>0</value>
					</LoopOpt>
					<PreExpr typename='Expression' xsi:type='Expression' classname='ExprValue' instanceoverrideflags='5046296'>
						<value/>
					</PreExpr>
					<PostExpr typename='Expression' xsi:type='Expression' classname='ExprValue' instanceoverrideflags='5046296'>
						<value/>
					</PostExpr>
					<StatusExpr typename='Expression' xsi:type='Expression' classname='ExprValue' instanceoverrideflags='5046296'>
						<value/>
					</StatusExpr>
					<CanSpecifyModule classname='Bool' instanceoverrideflags='5046296'>
						<value>true</value>
					</CanSpecifyModule>
					<CanEditCode classname='Bool' instanceoverrideflags='5046296'>
						<value>true</value>
					</CanEditCode>
					<CanEditModulePrototype classname='Bool' instanceoverrideflags='5046296'>
						<value>true</value>
					</CanEditModulePrototype>
					<CanEditParameterAdditionalResults classname='Bool' instanceoverrideflags='5046296'>
						<value>true</value>
					</CanEditParameterAdditionalResults>
					<PrecondIntExe classname='Num' instanceoverrideflags='5046296'>
						<value>0</value>
					</PrecondIntExe>
					<Requirements classname='Obj' flagsforinstances='2097153' instanceoverrideflags='7143449' valueflags='1' structureflags='2097152'>
						<subprops>
							<Links classname='Strs' flagsforinstances='71303168' instanceoverrideflags='72286233' valueflags='71303168'>
								<value lbound='[0]' ubound='[]'/>
							</Links>
						</subprops>
					</Requirements>
					<CustomResults classname='Objs' instanceoverrideflags='5046296'>
						<value lbound='[0]' ubound='[]'>
							<elemproto>
								<_NAME_IN_ATTRIBUTE_ typename='NI_CustomResult' xsi:type='NI_CustomResult' name='' classname='CustomResult'>
									<subprops>
										<Name classname='ExprValue'>
											<value/>
										</Name>
										<ValueToLog classname='ExprValue'>
											<value/>
										</ValueToLog>
										<Condition classname='ExprValue'>
											<value/>
										</Condition>
										<Flags classname='Num'>
											<value>8192</value>
										</Flags>
										<CheckedState classname='Num'>
											<value>2</value>
										</CheckedState>
										<Type classname='PropertyObjectType'>
											<subprops>
												<ValueType classname='Num'>
													<value>3</value>
												</ValueType>
												<IsObject classname='Bool'>
													<value>true</value>
												</IsObject>
												<TypeName classname='Str'>
													<value/>
												</TypeName>
												<ElementType classname='Objs'>
													<value lbound='[0]' ubound='[]'/>
												</ElementType>
												<ArrayDimensions classname='ArrayDimensions'>
													<subprops>
														<LowerBounds classname='Nums'>
															<value lbound='[0]' ubound='[]'/>
														</LowerBounds>
														<UpperBounds classname='Nums'>
															<value lbound='[0]' ubound='[]'/>
														</UpperBounds>
													</subprops>
												</ArrayDimensions>
												<Representation classname='Num'>
													<value>1</value>
												</Representation>
												<ClassName classname='Str'>
													<value/>
												</ClassName>
											</subprops>
										</Type>
										<Elements classname='Objs'>
											<value lbound='[0]' ubound='[]'/>
										</Elements>
										<IsAnyType classname='Bool'>
											<value>true</value>
										</IsAnyType>
									</subprops>
								</_NAME_IN_ATTRIBUTE_>
							</elemproto>
						</value>
					</CustomResults>
					<AdditionalResultsHints classname='Objs' instanceoverrideflags='5046296'>
						<value lbound='[0]' ubound='[]'>
							<elemproto>
								<_NAME_IN_ATTRIBUTE_ typename='NI_CustomResult' xsi:type='NI_CustomResult' name='' classname='CustomResult'>
									<subprops>
										<Name classname='ExprValue'>
											<value/>
										</Name>
										<ValueToLog classname='ExprValue'>
											<value/>
										</ValueToLog>
										<Condition classname='ExprValue'>
											<value/>
										</Condition>
										<Flags classname='Num'>
											<value>8192</value>
										</Flags>
										<CheckedState classname='Num'>
											<value>2</value>
										</CheckedState>
										<Type classname='PropertyObjectType'>
											<subprops>
												<ValueType classname='Num'>
													<value>3</value>
												</ValueType>
												<IsObject classname='Bool'>
													<value>true</value>
												</IsObject>
												<TypeName classname='Str'>
													<value/>
												</TypeName>
												<ElementType classname='Objs'>
													<value lbound='[0]' ubound='[]'/>
												</ElementType>
												<ArrayDimensions classname='ArrayDimensions'>
													<subprops>
														<LowerBounds classname='Nums'>
															<value lbound='[0]' ubound='[]'/>
														</LowerBounds>
														<UpperBounds classname='Nums'>
															<value lbound='[0]' ubound='[]'/>
														</UpperBounds>
													</subprops>
												</ArrayDimensions>
												<Representation classname='Num'>
													<value>1</value>
												</Representation>
												<ClassName classname='Str'>
													<value/>
												</ClassName>
											</subprops>
										</Type>
										<Elements classname='Objs'>
											<value lbound='[0]' ubound='[]'/>
										</Elements>
										<IsAnyType classname='Bool'>
											<value>true</value>
										</IsAnyType>
									</subprops>
								</_NAME_IN_ATTRIBUTE_>
							</elemproto>
						</value>
					</AdditionalResultsHints>
				</subprops>
			</TEInf>
		</typedef>
		<typedef alwayssavetype='false' additionaltypeflags='0' typelistordernum='8'>
			<StepTypeNIData classname='Obj' isroottypedef='true' typecategory='3' timestamp='1650060499' typeversion='21.0.0.49156' typelastmodversion='21.1.0.49154' typeminprodversion='21.0.0.0' typeflags='33554436' flagsforinstances='4718616' instanceoverrideflags='4718616' valueflags='24'>
				<subprops>
					<EditPanels classname='Strs'>
						<value lbound='[0]' ubound='[]'/>
					</EditPanels>
				</subprops>
			</StepTypeNIData>
		</typedef>
		<typedef alwayssavetype='false' additionaltypeflags='0' typelistordernum='9'>
			<Error classname='Obj' isroottypedef='true' typecategory='3' timestamp='1650060499' typeversion='21.0.0.49156' typelastmodversion='21.1.0.49154' typeminprodversion='21.0.0.0' typeflags='33554436'>
				<extdata controllername='STRUCT' allowstructpassing='true' packingoption='8' exclude='false' type='0' arraystorage='0' strbuffersize='256' strstorage='0'/>
				<extdata controllername='CLUST' allowclusterpassing='true' exclude='false' memberlabel=''/>
				<extdata controllername='DNSTRUCT' allowstructpassing='true' exclude='false' membername=''/>
				<extdata controllername='BLVCLUSTER' allowclusterpassing='true' exclude='false' memberlabel=''/>
				<subprops>
					<Code classname='Num' flagsforinstances='4194304' valueflags='4194304'>
						<value>0</value>
						<extdata controllername='STRUCT' allowstructpassing='false' packingoption='0' exclude='false' type='6' arraystorage='0' strbuffersize='256' strstorage='0'/>
						<extdata controllername='CLUST' allowclusterpassing='false' exclude='false' memberlabel='code'/>
						<extdata controllername='DNSTRUCT' allowstructpassing='false' exclude='false' membername='code'/>
						<extdata controllername='BLVCLUSTER' allowclusterpassing='false' exclude='false' memberlabel='code'/>
					</Code>
					<Msg classname='Str' flagsforinstances='4194304' valueflags='4194304'>
						<value/>
						<extdata controllername='STRUCT' allowstructpassing='false' packingoption='0' exclude='false' type='2' arraystorage='0' strbuffersize='1024' strstorage='1'/>
						<extdata controllername='CLUST' allowclusterpassing='false' exclude='false' memberlabel='source'/>
						<extdata controllername='DNSTRUCT' allowstructpassing='false' exclude='false' membername='msg'/>
						<extdata controllername='BLVCLUSTER' allowclusterpassing='false' exclude='false' memberlabel='source'/>
					</Msg>
					<Occurred classname='Bool' flagsforinstances='4194304' valueflags='4194304'>
						<value>false</value>
						<extdata controllername='STRUCT' allowstructpassing='false' packingoption='0' exclude='false' type='6' arraystorage='0' strbuffersize='256' strstorage='0'/>
						<extdata controllername='CLUST' allowclusterpassing='false' exclude='false' memberlabel='status'/>
						<extdata controllername='DNSTRUCT' allowstructpassing='false' exclude='false' membername='occurred'/>
						<extdata controllername='BLVCLUSTER' allowclusterpassing='false' exclude='false' memberlabel='status'/>
					</Occurred>
				</subprops>
			</Error>
		</typedef>
		<typedef alwayssavetype='false' additionaltypeflags='0' typelistordernum='10'>
			<CommonResults classname='Obj' isroottypedef='true' typecategory='3' timestamp='1465572565' typeversion='3.1.0.100' typelastmodversion='21.1.0.49154' typeminprodversion='3.1.0.0' typeflags='33554432' flagsforinstances='4194304' valueflags='4194304'/>
		</typedef>
		<typedef alwayssavetype='false' additionaltypeflags='0' typelistordernum='11'>
			<Substep classname='StepType' isroottypedef='true' typecategory='1' timestamp='1650060499' typeversion='21.0.0.49156' typelastmodversion='21.1.0.49154' typeminprodversion='21.0.0.0' typeflags='33554438' flagsforinstances='4194304' instanceoverrideflags='4194304'>
				<subprops>
					<DescriptionFormat typename='Expression' xsi:type='Expression' classname='ExprValue' flagsforinstances='4718616' instanceoverrideflags='4718616' valueflags='4194328' structureflags='524288'>
						<value>"%ModuleDescription"</value>
					</DescriptionFormat>
					<DefaultNameFormat typename='Expression' xsi:type='Expression' classname='ExprValue' flagsforinstances='4718616' instanceoverrideflags='4718616' valueflags='4194328' structureflags='524288'>
						<value>ResStr("NI_STEPTYPES", "GENERIC_DEF_SUBSTEP_NAME")</value>
					</DefaultNameFormat>
					<BlockStartTypes classname='Str' valueflags='4194328' structureflags='524288'>
						<value/>
					</BlockStartTypes>
					<BlockEndTypes classname='Str' valueflags='4194328' structureflags='524288'>
						<value/>
					</BlockEndTypes>
					<AppliesToBlockStructure classname='Bool' valueflags='4194328' structureflags='524288'>
						<value>false</value>
					</AppliesToBlockStructure>
					<Menu typename='StepTypeMenu' xsi:type='StepTypeMenu' classname='Obj'>
						<subprops>
							<CanBeSubstepType classname='Bool'>
								<value>true</value>
							</CanBeSubstepType>
							<CanOnlyBeSubstepType classname='Bool'>
								<value>true</value>
							</CanOnlyBeSubstepType>
							<Category classname='Str'>
								<value>""</value>
							</Category>
							<ItemName classname='ExprValue'>
								<value>ResStr("NI_STEPTYPES", "GENERIC_SUBSTEP_MENU_ITEM_NAME")</value>
							</ItemName>
							<SingularItemName classname='Str'>
								<value>""</value>
							</SingularItemName>
							<SeparatorBeforeCategory classname='Bool'>
								<value>false</value>
							</SeparatorBeforeCategory>
							<SeparatorBeforeItemName classname='Bool'>
								<value>false</value>
							</SeparatorBeforeItemName>
							<Group classname='Str'>
								<value>GenericSubsteps</value>
							</Group>
						</subprops>
					</Menu>
					<Substeps typename='StepTypeSubstepsArray' xsi:type='StepTypeSubstepsArray' classname='Objs'>
						<value lbound='[0]' ubound='[]'/>
					</Substeps>
					<CodeTemplates classname='Str' valueflags='4194328' structureflags='524288'>
						<value>DefaultLabVIEWNXG|DefaultLabVIEW|DefaultCVI|DefaultVB.NET|DefaultCSharp.NET|DefaultC++.NET|DefaultVC++_Template|DefaultHTB72_Template|DefaultHTB80_Template|Default_Template</value>
					</CodeTemplates>
					<AdditionalResultsHints classname='Objs' valueflags='4194328' structureflags='524288'>
						<value lbound='[0]' ubound='[]'>
							<elemproto>
								<_NAME_IN_ATTRIBUTE_ typename='NI_CustomResult' xsi:type='NI_CustomResult' name='' classname='CustomResult'>
									<subprops>
										<Name classname='ExprValue'>
											<value/>
										</Name>
										<ValueToLog classname='ExprValue'>
											<value/>
										</ValueToLog>
										<Condition classname='ExprValue'>
											<value/>
										</Condition>
										<Flags classname='Num'>
											<value>8192</value>
										</Flags>
										<CheckedState classname='Num'>
											<value>2</value>
										</CheckedState>
										<Type classname='PropertyObjectType'>
											<subprops>
												<ValueType classname='Num'>
													<value>3</value>
												</ValueType>
												<IsObject classname='Bool'>
													<value>true</value>
												</IsObject>
												<TypeName classname='Str'>
													<value/>
												</TypeName>
												<ElementType classname='Objs'>
													<value lbound='[0]' ubound='[]'/>
												</ElementType>
												<ArrayDimensions classname='ArrayDimensions'>
													<subprops>
														<LowerBounds classname='Nums'>
															<value lbound='[0]' ubound='[]'/>
														</LowerBounds>
														<UpperBounds classname='Nums'>
															<value lbound='[0]' ubound='[]'/>
														</UpperBounds>
													</subprops>
												</ArrayDimensions>
												<Representation classname='Num'>
													<value>1</value>
												</Representation>
												<ClassName classname='Str'>
													<value/>
												</ClassName>
											</subprops>
										</Type>
										<Elements classname='Objs'>
											<value lbound='[0]' ubound='[]'/>
										</Elements>
										<IsAnyType classname='Bool'>
											<value>true</value>
										</IsAnyType>
									</subprops>
								</_NAME_IN_ATTRIBUTE_>
							</elemproto>
						</value>
					</AdditionalResultsHints>
					<TS typename='TEInf' xsi:type='TEInf' classname='Obj' flagsforinstances='4456472'>
						<subprops>
							<Id classname='Str'>
								<value/>
							</Id>
							<Icon classname='Str'>
								<value/>
							</Icon>
							<SData classname='Obj' flagsforinstances='2097152' instanceoverrideflags='7274521' structureflags='2097152'/>
							<PreCond classname='ExprValue'>
								<value/>
							</PreCond>
							<LoadOpt classname='Str'>
								<value>PreloadWhenExecuted</value>
							</LoadOpt>
							<UnloadOpt classname='Str'>
								<value>UnloadWithFile</value>
							</UnloadOpt>
							<Mode classname='Str'>
								<value>Normal</value>
							</Mode>
							<WindowActivation classname='Str'>
								<value>None</value>
							</WindowActivation>
							<ResultOption classname='Num'>
								<value>1</value>
							</ResultOption>
							<StepFCSeqF classname='Bool'>
								<value>true</value>
							</StepFCSeqF>
							<IgnoreRTE classname='Bool'>
								<value>false</value>
							</IgnoreRTE>
							<UseMutex classname='Bool'>
								<value>false</value>
							</UseMutex>
							<MutexNameOrRef classname='ExprValue'>
								<value/>
							</MutexNameOrRef>
							<BatchSyncOpt classname='Num'>
								<value>0</value>
							</BatchSyncOpt>
							<SwitchEnabled classname='Bool'>
								<value>false</value>
							</SwitchEnabled>
							<VirtualDeviceName classname='ExprValue'>
								<value/>
							</VirtualDeviceName>
							<SwitchOperation classname='Num'>
								<value>1</value>
							</SwitchOperation>
							<RouteGroupConnect classname='ExprValue'>
								<value/>
							</RouteGroupConnect>
							<RouteGroupDisconnect classname='ExprValue'>
								<value/>
							</RouteGroupDisconnect>
							<MulticonnectMode classname='Num'>
								<value>1</value>
							</MulticonnectMode>
							<OperationOrder classname='Num'>
								<value>2</value>
							</OperationOrder>
							<ConnectionLifetime classname='Num'>
								<value>4</value>
							</ConnectionLifetime>
							<WaitForDebounce classname='Bool'>
								<value>true</value>
							</WaitForDebounce>
							<PassAct classname='Str'>
								<value>Next</value>
							</PassAct>
							<FailAct classname='Str'>
								<value>Next</value>
							</FailAct>
							<PassActTarget classname='ExprValue'>
								<value/>
							</PassActTarget>
							<FailActTarget classname='ExprValue'>
								<value/>
							</FailActTarget>
							<CustExpr classname='ExprValue'>
								<value/>
							</CustExpr>
							<CustTrueAct classname='Str'>
								<value>Next</value>
							</CustTrueAct>
							<CustFalseAct classname='Str'>
								<value>Next</value>
							</CustFalseAct>
							<CustTrueActTarget classname='ExprValue'>
								<value/>
							</CustTrueActTarget>
							<CustFalseActTarget classname='ExprValue'>
								<value/>
							</CustFalseActTarget>
							<LoopType classname='Str'>
								<value>NoLooping</value>
							</LoopType>
							<LoopWhile classname='ExprValue'>
								<value/>
							</LoopWhile>
							<LoopStatus classname='ExprValue'>
								<value/>
							</LoopStatus>
							<LoopIncrement classname='ExprValue'>
								<value>RunState.LoopIndex += 1</value>
							</LoopIncrement>
							<LoopInitialize classname='ExprValue'>
								<value>RunState.LoopIndex = 0</value>
							</LoopInitialize>
							<LoopOpt classname='Num'>
								<value>0</value>
							</LoopOpt>
							<PreExpr classname='ExprValue'>
								<value/>
							</PreExpr>
							<PostExpr classname='ExprValue'>
								<value/>
							</PostExpr>
							<StatusExpr classname='ExprValue'>
								<value/>
							</StatusExpr>
							<CanSpecifyModule classname='Bool'>
								<value>true</value>
							</CanSpecifyModule>
							<CanEditCode classname='Bool'>
								<value>true</value>
							</CanEditCode>
							<CanEditModulePrototype classname='Bool'>
								<value>true</value>
							</CanEditModulePrototype>
							<CanEditParameterAdditionalResults classname='Bool'>
								<value>true</value>
							</CanEditParameterAdditionalResults>
							<PrecondIntExe classname='Num'>
								<value>0</value>
							</PrecondIntExe>
							<Requirements classname='Obj' flagsforinstances='1' valueflags='1' structureflags='2097152'>
								<subprops>
									<Links classname='Strs' flagsforinstances='71303168' instanceoverrideflags='72286233' valueflags='71303168'>
										<value lbound='[0]' ubound='[]'/>
									</Links>
								</subprops>
							</Requirements>
							<CustomResults classname='Objs'>
								<value lbound='[0]' ubound='[]'>
									<elemproto>
										<_NAME_IN_ATTRIBUTE_ name='' classname='CustomResult'>
											<subprops>
												<Name classname='ExprValue'>
													<value/>
												</Name>
												<ValueToLog classname='ExprValue'>
													<value/>
												</ValueToLog>
												<Condition classname='ExprValue'>
													<value/>
												</Condition>
												<Flags classname='Num'>
													<value>8192</value>
												</Flags>
												<CheckedState classname='Num'>
													<value>2</value>
												</CheckedState>
												<Type classname='PropertyObjectType'>
													<subprops>
														<ValueType classname='Num'>
															<value>3</value>
														</ValueType>
														<IsObject classname='Bool'>
															<value>true</value>
														</IsObject>
														<TypeName classname='Str'>
															<value/>
														</TypeName>
														<ElementType classname='Objs'>
															<value lbound='[0]' ubound='[]'/>
														</ElementType>
														<ArrayDimensions classname='ArrayDimensions'>
															<subprops>
																<LowerBounds classname='Nums'>
																	<value lbound='[0]' ubound='[]'/>
																</LowerBounds>
																<UpperBounds classname='Nums'>
																	<value lbound='[0]' ubound='[]'/>
																</UpperBounds>
															</subprops>
														</ArrayDimensions>
														<Representation classname='Num'>
															<value>1</value>
														</Representation>
														<ClassName classname='Str'>
															<value/>
														</ClassName>
													</subprops>
												</Type>
												<Elements classname='Objs'>
													<value lbound='[0]' ubound='[]'/>
												</Elements>
												<IsAnyType classname='Bool'>
													<value>true</value>
												</IsAnyType>
											</subprops>
										</_NAME_IN_ATTRIBUTE_>
									</elemproto>
								</value>
							</CustomResults>
							<AdditionalResultsHints classname='Objs'>
								<value lbound='[0]' ubound='[]'>
									<elemproto>
										<_NAME_IN_ATTRIBUTE_ name='' classname='CustomResult'>
											<subprops>
												<Name classname='ExprValue'>
													<value/>
												</Name>
												<ValueToLog classname='ExprValue'>
													<value/>
												</ValueToLog>
												<Condition classname='ExprValue'>
													<value/>
												</Condition>
												<Flags classname='Num'>
													<value>8192</value>
												</Flags>
												<CheckedState classname='Num'>
													<value>2</value>
												</CheckedState>
												<Type classname='PropertyObjectType'>
													<subprops>
														<ValueType classname='Num'>
															<value>3</value>
														</ValueType>
														<IsObject classname='Bool'>
															<value>true</value>
														</IsObject>
														<TypeName classname='Str'>
															<value/>
														</TypeName>
														<ElementType classname='Objs'>
															<value lbound='[0]' ubound='[]'/>
														</ElementType>
														<ArrayDimensions classname='ArrayDimensions'>
															<subprops>
																<LowerBounds classname='Nums'>
																	<value lbound='[0]' ubound='[]'/>
																</LowerBounds>
																<UpperBounds classname='Nums'>
																	<value lbound='[0]' ubound='[]'/>
																</UpperBounds>
															</subprops>
														</ArrayDimensions>
														<Representation classname='Num'>
															<value>1</value>
														</Representation>
														<ClassName classname='Str'>
															<value/>
														</ClassName>
													</subprops>
												</Type>
												<Elements classname='Objs'>
													<value lbound='[0]' ubound='[]'/>
												</Elements>
												<IsAnyType classname='Bool'>
													<value>true</value>
												</IsAnyType>
											</subprops>
										</_NAME_IN_ATTRIBUTE_>
									</elemproto>
								</value>
							</AdditionalResultsHints>
						</subprops>
					</TS>
					<NI_Data typename='StepTypeNIData' xsi:type='StepTypeNIData' classname='Obj'>
						<subprops>
							<EditPanels classname='Strs'>
								<value lbound='[0]' ubound='[]'/>
							</EditPanels>
						</subprops>
					</NI_Data>
					<Result classname='Obj' flagsforinstances='4194304' valueflags='4194304'>
						<subprops>
							<Error typename='Error' xsi:type='Error' classname='Obj' flagsforinstances='4194304' valueflags='4194304'>
								<subprops>
									<Code classname='Num'>
										<value>0</value>
									</Code>
									<Msg classname='Str'>
										<value/>
									</Msg>
									<Occurred classname='Bool'>
										<value>false</value>
									</Occurred>
								</subprops>
							</Error>
							<Status classname='Str' flagsforinstances='4194304' valueflags='4194304'>
								<value/>
							</Status>
							<ReportText classname='Str' flagsforinstances='4194304' valueflags='4194304'>
								<value/>
							</ReportText>
							<Common typename='CommonResults' xsi:type='CommonResults' classname='Obj'/>
						</subprops>
					</Result>
					<CanEncapsulate classname='Bool' valueflags='4194328' structureflags='524288'>
						<value>false</value>
					</CanEncapsulate>
				</subprops>
			</Substep>
		</typedef>
		<typedef alwayssavetype='false' additionaltypeflags='0' typelistordernum='12'>
			<NI_DotNetParameterResult classname='DotNetParameterResult' isroottypedef='true' typecategory='3' timestamp='1650060499' typeversion='21.0.0.49156' typelastmodversion='21.1.0.49154' typeminprodversion='21.0.0.0' typeflags='33554436' valueflags='24'>
				<subprops>
					<Condition typename='Expression' xsi:type='Expression' classname='ExprValue'>
						<value/>
					</Condition>
					<Flags classname='Num'>
						<value>8192</value>
						<numericfmt>%#x</numericfmt>
					</Flags>
					<CheckedState classname='Num'>
						<value>1</value>
					</CheckedState>
				</subprops>
			</NI_DotNetParameterResult>
		</typedef>
		<typedef alwayssavetype='false' additionaltypeflags='0' typelistordernum='13'>
			<DotNetParameter classname='DotNetParameter' isroottypedef='true' typecategory='3' timestamp='1650061192' typeversion='21.0.0.49156' typelastmodversion='21.1.0.49154' typeminprodversion='21.0.0.0' typeflags='33554436' valueflags='24'>
				<subprops>
					<Name classname='Str'>
						<value>_notNamed</value>
					</Name>
					<ArgVal typename='Expression' xsi:type='Expression' classname='ExprValue'>
						<value/>
					</ArgVal>
					<ArgDisplayVal typename='Expression' xsi:type='Expression' classname='ExprValue'>
						<value/>
					</ArgDisplayVal>
					<Type classname='Num'>
						<value>0</value>
					</Type>
					<TypeName classname='Str'>
						<value/>
					</TypeName>
					<Flags classname='Num'>
						<value>0</value>
					</Flags>
					<IsOptional classname='Bool'>
						<value>false</value>
					</IsOptional>
					<CallDispose classname='Bool'>
						<value>false</value>
					</CallDispose>
					<NumDimensions classname='Nums'>
						<value lbound='[0]' ubound='[]'/>
					</NumDimensions>
					<MultiElement classname='Objs'>
						<value lbound='[0]' ubound='[]'/>
					</MultiElement>
					<AdditionalResults classname='Obj'>
						<subprops>
							<Input typename='NI_DotNetParameterResult' xsi:type='NI_DotNetParameterResult' classname='DotNetParameterResult'>
								<subprops>
									<Condition classname='ExprValue'>
										<value/>
									</Condition>
									<Flags classname='Num'>
										<value>8192</value>
									</Flags>
									<CheckedState classname='Num'>
										<value>1</value>
									</CheckedState>
								</subprops>
							</Input>
							<Output typename='NI_DotNetParameterResult' xsi:type='NI_DotNetParameterResult' classname='DotNetParameterResult'>
								<subprops>
									<Condition classname='ExprValue'>
										<value/>
									</Condition>
									<Flags classname='Num'>
										<value>8192</value>
									</Flags>
									<CheckedState classname='Num'>
										<value>1</value>
									</CheckedState>
								</subprops>
							</Output>
						</subprops>
					</AdditionalResults>
					<UserData classname='Obj' flagsforinstances='2097152' structureflags='2097152'/>
				</subprops>
			</DotNetParameter>
		</typedef>
		<typedef alwayssavetype='false' additionaltypeflags='0' typelistordernum='14'>
			<NI_DotNetCallResult classname='DotNetCallResult' isroottypedef='true' typecategory='3' timestamp='1650060499' typeversion='21.0.0.49156' typelastmodversion='21.1.0.49154' typeminprodversion='21.0.0.0' typeflags='33554436' valueflags='24'>
				<subprops>
					<Condition typename='Expression' xsi:type='Expression' classname='ExprValue'>
						<value/>
					</Condition>
					<Flags classname='Num'>
						<value>8192</value>
						<numericfmt>%#x</numericfmt>
					</Flags>
					<CheckedState classname='Num'>
						<value>1</value>
					</CheckedState>
				</subprops>
			</NI_DotNetCallResult>
		</typedef>
		<typedef alwayssavetype='false' additionaltypeflags='0' typelistordernum='15'>
			<DotNetCall classname='DotNetCall' isroottypedef='true' typecategory='3' timestamp='1650061192' typeversion='21.0.0.49156' typelastmodversion='21.1.0.49154' typeminprodversion='21.0.0.0' typeflags='33554436' valueflags='24'>
				<subprops>
					<ClassName classname='Str'>
						<value/>
					</ClassName>
					<MemberType classname='Num'>
						<value>0</value>
					</MemberType>
					<Static classname='Bool'>
						<value>false</value>
					</Static>
					<MemberName classname='Str'>
						<value/>
					</MemberName>
					<Params classname='Objs'>
						<value lbound='[0]' ubound='[]'>
							<elemproto>
								<_NAME_IN_ATTRIBUTE_ typename='DotNetParameter' xsi:type='DotNetParameter' name='' classname='DotNetParameter' structureflags='131072'>
									<subprops>
										<Name classname='Str'>
											<value>_notNamed</value>
										</Name>
										<ArgVal classname='ExprValue'>
											<value/>
										</ArgVal>
										<ArgDisplayVal classname='ExprValue'>
											<value/>
										</ArgDisplayVal>
										<Type classname='Num'>
											<value>0</value>
										</Type>
										<TypeName classname='Str'>
											<value/>
										</TypeName>
										<Flags classname='Num'>
											<value>0</value>
										</Flags>
										<IsOptional classname='Bool'>
											<value>false</value>
										</IsOptional>
										<CallDispose classname='Bool'>
											<value>false</value>
										</CallDispose>
										<NumDimensions classname='Nums'>
											<value lbound='[0]' ubound='[]'/>
										</NumDimensions>
										<MultiElement classname='Objs'>
											<value lbound='[0]' ubound='[]'/>
										</MultiElement>
										<AdditionalResults classname='Obj'>
											<subprops>
												<Input classname='DotNetParameterResult'>
													<subprops>
														<Condition classname='ExprValue'>
															<value/>
														</Condition>
														<Flags classname='Num'>
															<value>8192</value>
														</Flags>
														<CheckedState classname='Num'>
															<value>1</value>
														</CheckedState>
													</subprops>
												</Input>
												<Output classname='DotNetParameterResult'>
													<subprops>
														<Condition classname='ExprValue'>
															<value/>
														</Condition>
														<Flags classname='Num'>
															<value>8192</value>
														</Flags>
														<CheckedState classname='Num'>
															<value>1</value>
														</CheckedState>
													</subprops>
												</Output>
											</subprops>
										</AdditionalResults>
									</subprops>
								</_NAME_IN_ATTRIBUTE_>
							</elemproto>
						</value>
					</Params>
					<AdditionalResult typename='NI_DotNetCallResult' xsi:type='NI_DotNetCallResult' classname='DotNetCallResult'>
						<subprops>
							<Condition classname='ExprValue'>
								<value/>
							</Condition>
							<Flags classname='Num'>
								<value>8192</value>
							</Flags>
							<CheckedState classname='Num'>
								<value>1</value>
							</CheckedState>
						</subprops>
					</AdditionalResult>
				</subprops>
			</DotNetCall>
		</typedef>
		<typedef alwayssavetype='false' additionaltypeflags='0' typelistordernum='0'>
			<Path classname='PathValue' isroottypedef='true' typecategory='3' timestamp='1650060499' typeversion='21.0.0.49156' typelastmodversion='21.1.0.49154' typeminprodversion='21.0.0.0' typeflags='33554436'>
				<value/>
			</Path>
		</typedef>
		<typedef alwayssavetype='false' additionaltypeflags='0' typelistordernum='16'>
			<DotNetStepAdditions classname='DotNetModule' isroottypedef='true' typecategory='3' timestamp='1650061192' typeversion='21.0.0.49156' typelastmodversion='21.1.0.49154' typeminprodversion='21.0.0.0' typeflags='33554436' valueflags='24'>
				<subprops>
					<Calls classname='Objs'>
						<value lbound='[0]' ubound='[]'>
							<elemproto>
								<_NAME_IN_ATTRIBUTE_ typename='DotNetCall' xsi:type='DotNetCall' name='' classname='DotNetCall' structureflags='131072'>
									<subprops>
										<ClassName classname='Str'>
											<value/>
										</ClassName>
										<MemberType classname='Num'>
											<value>0</value>
										</MemberType>
										<Static classname='Bool'>
											<value>false</value>
										</Static>
										<MemberName classname='Str'>
											<value/>
										</MemberName>
										<Params classname='Objs'>
											<value lbound='[0]' ubound='[]'>
												<elemproto>
													<_NAME_IN_ATTRIBUTE_ name='' classname='DotNetParameter' structureflags='0'/>
												</elemproto>
											</value>
										</Params>
										<AdditionalResult classname='DotNetCallResult'>
											<subprops>
												<Condition classname='ExprValue'>
													<value/>
												</Condition>
												<Flags classname='Num'>
													<value>8192</value>
												</Flags>
												<CheckedState classname='Num'>
													<value>1</value>
												</CheckedState>
											</subprops>
										</AdditionalResult>
									</subprops>
								</_NAME_IN_ATTRIBUTE_>
							</elemproto>
						</value>
					</Calls>
					<AssemblyPath typename='Path' xsi:type='Path' classname='PathValue'>
						<value/>
					</AssemblyPath>
					<AssemblyStrongName classname='Str'>
						<value/>
					</AssemblyStrongName>
					<AssemblyLocation classname='Num'>
						<value>0</value>
					</AssemblyLocation>
					<ClassName classname='Str'>
						<value/>
					</ClassName>
					<IsStruct classname='Bool'>
						<value>false</value>
					</IsStruct>
					<StructDef typename='DotNetParameter' xsi:type='DotNetParameter' classname='DotNetParameter'>
						<subprops>
							<Name classname='Str'>
								<value>_notNamed</value>
							</Name>
							<ArgVal classname='ExprValue'>
								<value/>
							</ArgVal>
							<ArgDisplayVal classname='ExprValue'>
								<value/>
							</ArgDisplayVal>
							<Type classname='Num'>
								<value>0</value>
							</Type>
							<TypeName classname='Str'>
								<value/>
							</TypeName>
							<Flags classname='Num'>
								<value>0</value>
							</Flags>
							<IsOptional classname='Bool'>
								<value>false</value>
							</IsOptional>
							<CallDispose classname='Bool'>
								<value>false</value>
							</CallDispose>
							<NumDimensions classname='Nums'>
								<value lbound='[0]' ubound='[]'/>
							</NumDimensions>
							<MultiElement classname='Objs'>
								<value lbound='[0]' ubound='[]'/>
							</MultiElement>
							<AdditionalResults classname='Obj'>
								<subprops>
									<Input classname='DotNetParameterResult'>
										<subprops>
											<Condition classname='ExprValue'>
												<value/>
											</Condition>
											<Flags classname='Num'>
												<value>8192</value>
											</Flags>
											<CheckedState classname='Num'>
												<value>1</value>
											</CheckedState>
										</subprops>
									</Input>
									<Output classname='DotNetParameterResult'>
										<subprops>
											<Condition classname='ExprValue'>
												<value/>
											</Condition>
											<Flags classname='Num'>
												<value>8192</value>
											</Flags>
											<CheckedState classname='Num'>
												<value>1</value>
											</CheckedState>
										</subprops>
									</Output>
								</subprops>
							</AdditionalResults>
						</subprops>
					</StructDef>
					<RemoteSpecifiedByExpr classname='Bool'>
						<value>false</value>
					</RemoteSpecifiedByExpr>
					<UseLoadSpec classname='Bool'>
						<value>false</value>
					</UseLoadSpec>
					<ModuleSrcPath typename='Path' xsi:type='Path' classname='PathValue'>
						<value/>
					</ModuleSrcPath>
					<ModulePrjPath typename='Path' xsi:type='Path' classname='PathValue'>
						<value/>
					</ModulePrjPath>
					<ModuleSlnPath typename='Path' xsi:type='Path' classname='PathValue'>
						<value/>
					</ModuleSlnPath>
					<FunctionName classname='Str'>
						<value/>
					</FunctionName>
				</subprops>
			</DotNetStepAdditions>
		</typedef>
		<typedef alwayssavetype='false' additionaltypeflags='0' typelistordernum='17'>
			<PostSubstep classname='StepType' isroottypedef='true' typecategory='1' timestamp='1650060499' typeversion='21.0.0.49156' typelastmodversion='21.1.0.49154' typeminprodversion='21.0.0.0' typeflags='33554438' flagsforinstances='4194304' instanceoverrideflags='4194304'>
				<subprops>
					<DescriptionFormat typename='Expression' xsi:type='Expression' classname='ExprValue' flagsforinstances='4718616' instanceoverrideflags='4718616' valueflags='4194328' structureflags='524288'>
						<value>"%ModuleDescription"</value>
					</DescriptionFormat>
					<DefaultNameFormat typename='Expression' xsi:type='Expression' classname='ExprValue' flagsforinstances='4718616' instanceoverrideflags='4718616' valueflags='4194328' structureflags='524288'>
						<value>ResStr("NI_STEPTYPES", "POST_DEF_SUBSTEP_NAME")</value>
					</DefaultNameFormat>
					<BlockStartTypes classname='Str' valueflags='4194328' structureflags='524288'>
						<value/>
					</BlockStartTypes>
					<BlockEndTypes classname='Str' valueflags='4194328' structureflags='524288'>
						<value/>
					</BlockEndTypes>
					<AppliesToBlockStructure classname='Bool' valueflags='4194328' structureflags='524288'>
						<value>false</value>
					</AppliesToBlockStructure>
					<Menu typename='StepTypeMenu' xsi:type='StepTypeMenu' classname='Obj'>
						<subprops>
							<CanBeSubstepType classname='Bool'>
								<value>true</value>
							</CanBeSubstepType>
							<CanOnlyBeSubstepType classname='Bool'>
								<value>true</value>
							</CanOnlyBeSubstepType>
							<Category classname='Str'>
								<value>""</value>
							</Category>
							<ItemName classname='ExprValue'>
								<value>ResStr("NI_STEPTYPES", "POST_SUBSTEP_MENU_ITEM_NAME")</value>
							</ItemName>
							<SingularItemName classname='Str'>
								<value>""</value>
							</SingularItemName>
							<SeparatorBeforeCategory classname='Bool'>
								<value>false</value>
							</SeparatorBeforeCategory>
							<SeparatorBeforeItemName classname='Bool'>
								<value>false</value>
							</SeparatorBeforeItemName>
							<Group classname='Str'>
								<value>ExecSubsteps</value>
							</Group>
						</subprops>
					</Menu>
					<Substeps typename='StepTypeSubstepsArray' xsi:type='StepTypeSubstepsArray' classname='Objs'>
						<value lbound='[0]' ubound='[]'/>
					</Substeps>
					<CodeTemplates classname='Str' valueflags='4194328' structureflags='524288'>
						<value>DefaultLabVIEWNXG|DefaultLabVIEW|DefaultCVI|DefaultVB.NET|DefaultCSharp.NET|DefaultC++.NET|DefaultVC++_Template|DefaultHTB72_Template|DefaultHTB80_Template|Default_Template</value>
					</CodeTemplates>
					<AdditionalResultsHints classname='Objs' valueflags='4194328' structureflags='524288'>
						<value lbound='[0]' ubound='[]'>
							<elemproto>
								<_NAME_IN_ATTRIBUTE_ typename='NI_CustomResult' xsi:type='NI_CustomResult' name='' classname='CustomResult'>
									<subprops>
										<Name classname='ExprValue'>
											<value/>
										</Name>
										<ValueToLog classname='ExprValue'>
											<value/>
										</ValueToLog>
										<Condition classname='ExprValue'>
											<value/>
										</Condition>
										<Flags classname='Num'>
											<value>8192</value>
										</Flags>
										<CheckedState classname='Num'>
											<value>2</value>
										</CheckedState>
										<Type classname='PropertyObjectType'>
											<subprops>
												<ValueType classname='Num'>
													<value>3</value>
												</ValueType>
												<IsObject classname='Bool'>
													<value>true</value>
												</IsObject>
												<TypeName classname='Str'>
													<value/>
												</TypeName>
												<ElementType classname='Objs'>
													<value lbound='[0]' ubound='[]'/>
												</ElementType>
												<ArrayDimensions classname='ArrayDimensions'>
													<subprops>
														<LowerBounds classname='Nums'>
															<value lbound='[0]' ubound='[]'/>
														</LowerBounds>
														<UpperBounds classname='Nums'>
															<value lbound='[0]' ubound='[]'/>
														</UpperBounds>
													</subprops>
												</ArrayDimensions>
												<Representation classname='Num'>
													<value>1</value>
												</Representation>
												<ClassName classname='Str'>
													<value/>
												</ClassName>
											</subprops>
										</Type>
										<Elements classname='Objs'>
											<value lbound='[0]' ubound='[]'/>
										</Elements>
										<IsAnyType classname='Bool'>
											<value>true</value>
										</IsAnyType>
									</subprops>
								</_NAME_IN_ATTRIBUTE_>
							</elemproto>
						</value>
					</AdditionalResultsHints>
					<TS typename='TEInf' xsi:type='TEInf' classname='Obj' flagsforinstances='4456472'>
						<subprops>
							<Id classname='Str'>
								<value/>
							</Id>
							<Icon classname='Str'>
								<value/>
							</Icon>
							<SData classname='Obj' flagsforinstances='2097152' instanceoverrideflags='7274521' structureflags='2097152'/>
							<PreCond classname='ExprValue'>
								<value/>
							</PreCond>
							<LoadOpt classname='Str'>
								<value>PreloadWhenExecuted</value>
							</LoadOpt>
							<UnloadOpt classname='Str'>
								<value>UnloadWithFile</value>
							</UnloadOpt>
							<Mode classname='Str'>
								<value>Normal</value>
							</Mode>
							<WindowActivation classname='Str'>
								<value>None</value>
							</WindowActivation>
							<ResultOption classname='Num'>
								<value>1</value>
							</ResultOption>
							<StepFCSeqF classname='Bool'>
								<value>true</value>
							</StepFCSeqF>
							<IgnoreRTE classname='Bool'>
								<value>false</value>
							</IgnoreRTE>
							<UseMutex classname='Bool'>
								<value>false</value>
							</UseMutex>
							<MutexNameOrRef classname='ExprValue'>
								<value/>
							</MutexNameOrRef>
							<BatchSyncOpt classname='Num'>
								<value>0</value>
							</BatchSyncOpt>
							<SwitchEnabled classname='Bool'>
								<value>false</value>
							</SwitchEnabled>
							<VirtualDeviceName classname='ExprValue'>
								<value/>
							</VirtualDeviceName>
							<SwitchOperation classname='Num'>
								<value>1</value>
							</SwitchOperation>
							<RouteGroupConnect classname='ExprValue'>
								<value/>
							</RouteGroupConnect>
							<RouteGroupDisconnect classname='ExprValue'>
								<value/>
							</RouteGroupDisconnect>
							<MulticonnectMode classname='Num'>
								<value>1</value>
							</MulticonnectMode>
							<OperationOrder classname='Num'>
								<value>2</value>
							</OperationOrder>
							<ConnectionLifetime classname='Num'>
								<value>4</value>
							</ConnectionLifetime>
							<WaitForDebounce classname='Bool'>
								<value>true</value>
							</WaitForDebounce>
							<PassAct classname='Str'>
								<value>Next</value>
							</PassAct>
							<FailAct classname='Str'>
								<value>Next</value>
							</FailAct>
							<PassActTarget classname='ExprValue'>
								<value/>
							</PassActTarget>
							<FailActTarget classname='ExprValue'>
								<value/>
							</FailActTarget>
							<CustExpr classname='ExprValue'>
								<value/>
							</CustExpr>
							<CustTrueAct classname='Str'>
								<value>Next</value>
							</CustTrueAct>
							<CustFalseAct classname='Str'>
								<value>Next</value>
							</CustFalseAct>
							<CustTrueActTarget classname='ExprValue'>
								<value/>
							</CustTrueActTarget>
							<CustFalseActTarget classname='ExprValue'>
								<value/>
							</CustFalseActTarget>
							<LoopType classname='Str'>
								<value>NoLooping</value>
							</LoopType>
							<LoopWhile classname='ExprValue'>
								<value/>
							</LoopWhile>
							<LoopStatus classname='ExprValue'>
								<value/>
							</LoopStatus>
							<LoopIncrement classname='ExprValue'>
								<value>RunState.LoopIndex += 1</value>
							</LoopIncrement>
							<LoopInitialize classname='ExprValue'>
								<value>RunState.LoopIndex = 0</value>
							</LoopInitialize>
							<LoopOpt classname='Num'>
								<value>0</value>
							</LoopOpt>
							<PreExpr classname='ExprValue'>
								<value/>
							</PreExpr>
							<PostExpr classname='ExprValue'>
								<value/>
							</PostExpr>
							<StatusExpr classname='ExprValue'>
								<value/>
							</StatusExpr>
							<CanSpecifyModule classname='Bool'>
								<value>true</value>
							</CanSpecifyModule>
							<CanEditCode classname='Bool'>
								<value>true</value>
							</CanEditCode>
							<CanEditModulePrototype classname='Bool'>
								<value>true</value>
							</CanEditModulePrototype>
							<CanEditParameterAdditionalResults classname='Bool'>
								<value>true</value>
							</CanEditParameterAdditionalResults>
							<PrecondIntExe classname='Num'>
								<value>0</value>
							</PrecondIntExe>
							<Requirements classname='Obj' flagsforinstances='1' valueflags='1' structureflags='2097152'>
								<subprops>
									<Links classname='Strs' flagsforinstances='71303168' instanceoverrideflags='72286233' valueflags='71303168'>
										<value lbound='[0]' ubound='[]'/>
									</Links>
								</subprops>
							</Requirements>
							<CustomResults classname='Objs'>
								<value lbound='[0]' ubound='[]'>
									<elemproto>
										<_NAME_IN_ATTRIBUTE_ name='' classname='CustomResult'>
											<subprops>
												<Name classname='ExprValue'>
													<value/>
												</Name>
												<ValueToLog classname='ExprValue'>
													<value/>
												</ValueToLog>
												<Condition classname='ExprValue'>
													<value/>
												</Condition>
												<Flags classname='Num'>
													<value>8192</value>
												</Flags>
												<CheckedState classname='Num'>
													<value>2</value>
												</CheckedState>
												<Type classname='PropertyObjectType'>
													<subprops>
														<ValueType classname='Num'>
															<value>3</value>
														</ValueType>
														<IsObject classname='Bool'>
															<value>true</value>
														</IsObject>
														<TypeName classname='Str'>
															<value/>
														</TypeName>
														<ElementType classname='Objs'>
															<value lbound='[0]' ubound='[]'/>
														</ElementType>
														<ArrayDimensions classname='ArrayDimensions'>
															<subprops>
																<LowerBounds classname='Nums'>
																	<value lbound='[0]' ubound='[]'/>
																</LowerBounds>
																<UpperBounds classname='Nums'>
																	<value lbound='[0]' ubound='[]'/>
																</UpperBounds>
															</subprops>
														</ArrayDimensions>
														<Representation classname='Num'>
															<value>1</value>
														</Representation>
														<ClassName classname='Str'>
															<value/>
														</ClassName>
													</subprops>
												</Type>
												<Elements classname='Objs'>
													<value lbound='[0]' ubound='[]'/>
												</Elements>
												<IsAnyType classname='Bool'>
													<value>true</value>
												</IsAnyType>
											</subprops>
										</_NAME_IN_ATTRIBUTE_>
									</elemproto>
								</value>
							</CustomResults>
							<AdditionalResultsHints classname='Objs'>
								<value lbound='[0]' ubound='[]'>
									<elemproto>
										<_NAME_IN_ATTRIBUTE_ name='' classname='CustomResult'>
											<subprops>
												<Name classname='ExprValue'>
													<value/>
												</Name>
												<ValueToLog classname='ExprValue'>
													<value/>
												</ValueToLog>
												<Condition classname='ExprValue'>
													<value/>
												</Condition>
												<Flags classname='Num'>
													<value>8192</value>
												</Flags>
												<CheckedState classname='Num'>
													<value>2</value>
												</CheckedState>
												<Type classname='PropertyObjectType'>
													<subprops>
														<ValueType classname='Num'>
															<value>3</value>
														</ValueType>
														<IsObject classname='Bool'>
															<value>true</value>
														</IsObject>
														<TypeName classname='Str'>
															<value/>
														</TypeName>
														<ElementType classname='Objs'>
															<value lbound='[0]' ubound='[]'/>
														</ElementType>
														<ArrayDimensions classname='ArrayDimensions'>
															<subprops>
																<LowerBounds classname='Nums'>
																	<value lbound='[0]' ubound='[]'/>
																</LowerBounds>
																<UpperBounds classname='Nums'>
																	<value lbound='[0]' ubound='[]'/>
																</UpperBounds>
															</subprops>
														</ArrayDimensions>
														<Representation classname='Num'>
															<value>1</value>
														</Representation>
														<ClassName classname='Str'>
															<value/>
														</ClassName>
													</subprops>
												</Type>
												<Elements classname='Objs'>
													<value lbound='[0]' ubound='[]'/>
												</Elements>
												<IsAnyType classname='Bool'>
													<value>true</value>
												</IsAnyType>
											</subprops>
										</_NAME_IN_ATTRIBUTE_>
									</elemproto>
								</value>
							</AdditionalResultsHints>
						</subprops>
					</TS>
					<NI_Data typename='StepTypeNIData' xsi:type='StepTypeNIData' classname='Obj'>
						<subprops>
							<EditPanels classname='Strs'>
								<value lbound='[0]' ubound='[]'/>
							</EditPanels>
						</subprops>
					</NI_Data>
					<Result classname='Obj' flagsforinstances='4194304' valueflags='4194304'>
						<subprops>
							<Error typename='Error' xsi:type='Error' classname='Obj' flagsforinstances='4194304' valueflags='4194304'>
								<subprops>
									<Code classname='Num'>
										<value>0</value>
									</Code>
									<Msg classname='Str'>
										<value/>
									</Msg>
									<Occurred classname='Bool'>
										<value>false</value>
									</Occurred>
								</subprops>
							</Error>
							<Status classname='Str' flagsforinstances='4194304' valueflags='4194304'>
								<value/>
							</Status>
							<ReportText classname='Str' flagsforinstances='4194304' valueflags='4194304'>
								<value/>
							</ReportText>
							<Common typename='CommonResults' xsi:type='CommonResults' classname='Obj'/>
						</subprops>
					</Result>
					<CanEncapsulate classname='Bool' valueflags='4194328' structureflags='524288'>
						<value>false</value>
					</CanEncapsulate>
				</subprops>
			</PostSubstep>
		</typedef>
		<typedef alwayssavetype='false' additionaltypeflags='0' typelistordernum='18'>
			<NoneStepAdditions classname='NoneModule' isroottypedef='true' typecategory='3' timestamp='1650060850' typeversion='21.0.0.49156' typelastmodversion='21.1.0.49154' typeminprodversion='21.0.0.0' typeflags='33554436' valueflags='24'/>
		</typedef>
		<protected>E@=3HJL4100hYLEDF=_K@0@mKCYo_1KN2&lt;dfASB`]CF^aUXa]Y\4WmD]203VfR;kS;KgdGgF285WU]RaSJgcjNlM7MFC4LiX=a48\7dW:L403mZ4BUAT82I&gt;KQH8\T8QFE`DA2\LAVbMD5YRMT13fTiE^i&lt;boIle7[=C_LeZbKM2QXhVTH;?4hTX]A[17:2T;Dh\^Co3kY9PA5QK23^C]l262h09La1?5^k3J0BQZ@@EeDRZTO=\cKd?XKjmGb1N\X&lt;J[IS9OXJj22Qc=R\WEEn\IKCaHCAUNi97;EVjaJCX4&gt;UU36B3oib::mkjjIJFOY^^C_gK;?Ngamc6b1^HOM^Rl@oHoiaG802US0o36;lHiif[]oe&lt;FRliGlo^CMk69OeFDNDnIQUXNS=iA3JmW&lt;KbcFOCL6bWF;DdY7d2\SSH4mB7[^9gAb5EgM5G;l^DR5mXURj&lt;_=4b_aTDS965fd7ACLdkeA7kamDL&gt;;lWi[PA07_B@&gt;cR[mGK`_XMGdK4NmjkVR8?micjQcMS=oX^9@cW^5\93S[[2ZkFbBiZ=Q@AM0FkKdo:gUd&lt;lVVcfi&gt;bV3&gt;kl[1UR_FW&gt;JkW]_EREPX34oO2LYb;J&gt;k9nWLWBEg6Tk&gt;koggGTQ&gt;kL6kJL@dKQ2_E0Z</protected>
		<protected>E@=3HJo4110h]L]MGk_K3hBo3k7LAg`jl0V&gt;2mTflcNjb5VanCeQGi\\6dkh5]B5BVLe]bT:LbK\lf3OQYW5Nbh@nM^f0U:D7a9=&lt;&lt;9Q3icTU?LKb[U?Acd1cg]7loXlk6ac:1ADm3ekk7?ANj;IK&lt;l43;37?W9gRnc=??GKc[]bo;gR8T&lt;V0X:F_c3eG^kmoiOoZfff`FkOhNNQ5WN4JX62_TUj@&gt;L7`&gt;&lt;C1MUX=n6OZ^gl3h:35TWnYhN48;DAHeM4O=3Xfa`mR3Cl8I:CCWf7^ofj[kkkkKk]km\L37D5CH^&lt;[gcAoNHIgX\WA2ia0b;W@dfYW`m@mI9;i&lt;lP=NE;^d9o2\g_oRFFo&gt;&gt;fmfFfJNWe&lt;NnTF1^2&lt;V?71oM^nmdOKakCA^oLRoL=@?__kO&lt;OeL?mng`Ic_jCo^dnk^ekGVjTXPkOllTIfjQJ4lkc8mhk?hHohaGfnn^gCW_f9^?kSKE=VL9l]h3Yccho\mFK16a^&gt;JB&lt;_TYj4XfSG_&gt;j^SNZ@AQVnnT3cS_@EV9Q1CTA;FQBM&gt;3XaVTYF3Td;7OV9A:9J3]g?n5NY?Ibj@YD3PTi6EQofN:Kban&lt;?l&lt;M69L4UKdkZ_cooKI5JmOWX5h;5R_B6diI^OFPL8\LE\_eJaOCH:h9hFYlJSWkoMMOOW[m;Lg54o9m=g0Zjo[gPIE]JK8[&lt;oEbog&gt;2M?&gt;ak]njYFi26aYL6WW3_SAemEP\B`nn8M=7[GgSdoN&gt;^NlkOE;X6?&gt;cn&lt;cS\c1CHACa5=CV&gt;MkQfk^D5hA276j&lt;lZYbJEPD]JQB`Wn8:VOMNg1SB&lt;nJd?m?l5S`0G]WM:;`;L6nFbmHM&gt;:LBW0\a;2W5XH@U:K&lt;b2TIMFMj3jUgm5MKA:Bf]&gt;295W&gt;`V&lt;6;RkhWf0Ej2Z[[89Y;K;Z&gt;cUR`7OG8Q9SGjSF]M3P4AKbheb48&gt;mkL@:KVDX66U&lt;hNlPYZ46\]Dmhn6JL=O_aOkGg3maP&lt;7l^CbUPGT2:KMi1dbQkAF8039ZcTAX&gt;Xd^4&gt;2fF&gt;;ANiY@X]4=k?SP8c5DE^:iN2Jjn8m25LfIlK?dAdUCZdD]bV`0VI^?U_ELISd1h^Zb&gt;Rd8iD6=\VF0m4m7\ToCb_d25`7iLoOOkeEj[AnlXlSVZDLSJ8h;7Ii@bU7\[B4D9il[PLAmTOlA]TUJU8dZh4f&gt;;Bo?8HUK8j[5^:^`o??OO^GlllmddMOW_ZD5`ce]?omIcO&lt;Lei^58kCWhQXHiBck&lt;BZ42JAKIVKUKf^M4Q8JeO&lt;VWX6e[&gt;Lb[lQVKHVH=9^CUOZ5C5^?hE\WKnoH[\Fdi1Y1V=WW:OU?QeNRZ\WSGE=W874cRV[72&lt;TeNjo=Q9m_fX8lnJ6NO?:7giAJ9ZO&lt;4Tm[KN@WkQ`[8IGS&gt;]Z[L:=EGQ6Iof[ObDDLXAG99;mW=?:ZZHSg5BROkIDOGIl:a6jUfmid2g?Ki@llI92Vn:b4SPI\aB;&gt;P0;IJMYQ8M\e?G:c5PbK:n6EMP84fC&gt;C?EL=l2]^R5\P&gt;i2S\]I^3n7aYcQ:9@bRB_BHcMf199;0&lt;@Vf`4MVO9U7YFf4X\VVRS645j13f_8?ULo`@=SbIfbLPV54S78bEU&lt;K&gt;I&gt;OiHl&gt;:HaX&gt;MRg[4AK[XVUVUGDmb:f3e1W[`4D=a;]UE8:83GfF::kS]oPNgkRi_5ln&gt;0QZFXbB6CcG5eliKSWGPki[RdM@QCFlCBC2[NDWD&lt;&lt;I6:]f[5S0:ELFR7HO&lt;[cJ[n&gt;md&lt;&lt;Z5:PGS@RS[M6FiURUQ5\e15PY8U0D7:H:=EdZIl&lt;jNd^lBTXRk48LM6Xi0&lt;URe2lgWoBEHf::N?]l4=KhL60If@h]_=N=E2jWEG1a\]SS_mHeE;^Q6iDO6NnW;H4b`JVLUULdi&lt;A]&lt;Y3\:aVc\ijmbUF=;I]F\BDU=9W&gt;:_:WkZM3^IjXT;2YV[@dDa93bhOQ9^af&lt;UVo:ZV&gt;^@0d_M5ObRQ2PIHZ9`bbG];4Z\KEfEYI=M];D@9j1kZ@2@FIkf9:\CYe5bNVShA`?4Q[jR5kFEiK04^KQIa42&gt;nBDK3\adHB&lt;;Z=ABTh&lt;nd7?LRPd2KaJE35[[&lt;XdU?GVIaP7K:V@HPRTh28E@D?KP]BeneW:LF9EjZK;KFEQBkKXXb1Zi3h4\&lt;N_L@PRXlbTgXCbnW7ZXN?O]lH02JKm;Z4hn2A[8a:C8lM5XC=Qb^\\QNK7^G3=XAinLm&gt;PWFF3EmG15\]YC\D;I6a&lt;NiIh`2gMIG`A9\[]T00fP:UXIXSHk2jI?XFG&gt;I521bbKDA`Xb]X&gt;oA\&gt;IoldRB7j=i9_H89:U?SH1iHD_&lt;Y4og`o3KCOZ75Q\i2bLQ?W9&lt;Vjbn@TbAE_S:J&lt;gaUX=j\`2B[Ff:iY`hFd`iR6:anE]7gTSAm\F&lt;UWbSeL2GMGY5h=4I1n7[;_USkIg&lt;80AFbh\dS\^i\gH1HR2dVB`H`DBAa&gt;\T0cQ_T&gt;`BdnTRPVY=7Xg71D@^lHbg`:Lg8Z9S9?aX_D2jE1cFVCjh3NZW_83gH76Idil:S:&lt;=R91=LeOel07l^@A8&lt;5YLPIEl0^`J]G6?@IV==]K6iAXXfIe=&lt;6I];A@^`fSbGed&lt;5ME[AQ?\:lceUmHd[5_e:nXee0jfSUWOZi`=B:HTcc;gohPl[d0;CdSJSG_kg@nThAoX6:4\2QKenLIe&lt;N^6&gt;4TDKIH[:V[OKQFm6AL[^@Z9L?2Ji8gKUdKfELEbbPmMlPWUe;o8ai[W;0:UZi]\o6fCQcO1M6WJ=@GP\ZEU4fQmVj2cN4&gt;m;9]`Y4ZW`aRV9Pe34lol1=03:6ZO@kC8PgZSgI7CVCS_3OU8SFmn6;4N&gt;m0OHNDh`DLDILoLK:B^\lAD2e;7loFD]h`4K_XH4OT?`oOoPlB_YS80\8H;B]^@=G&lt;GL]8AREH1nB^@9\]R5V7BOlfdT4hNOZ3W`U4IfbCOGDkH\Q0d8S@deNjXbAk&lt;BH2\YXDaJGRSc\Y\OFh2UPl6YJC9TScm2K?hg;\=Fj3]fkgH9L]7AScPbSH8R5W0oHiKTYGaJ`nA3I^30imcAT5U]G_S8V^nbROTQhOmd1@ci7hKl=7ibRgZM&lt;HATE6nC=8W6L5gd3hLWY3PL?b31Zk7Y&lt;N[7A]3iQ]WHM&gt;];:0Ro8^`OIjWaCI_C6NUYa?5:VQnPg5EYb93\bO\AF[XaIGi3Sk\GN3mRG7GYb630^_YK1O@TF=H7;N&gt;3X[?83h_Z32VJc6a3BPcf`Q3SGDgmn?7?RZ@]VRDBKMnZhdnZHjTD0:J&lt;MJX:FLDiJ8YPR][PC?S5YaMR&gt;CHg6UL51E54m]&lt;EU5eM2@ACa2jU;l3Zh&lt;ETTEeJ5g_`TETEK&lt;E3j=mN^8?ikHbTf?Wi0:;V`SiN&gt;?5a^_D?=23fmYG[@E964\O4P?Fab0&lt;bj3R&gt;3o0U_T[CaFine?8B`e866KR2]j7W76]`YPZaBL;QU]NSkPoKeVV8&lt;a3FXl?EI]94H^1AHPCAh_Z;?@CiAV&gt;fhV:9`_P2k5k4eYFWOnAQV38W8fR6?AI4R0E[iG;C0Cc`aSBC66&gt;K2DM1&gt;fPD4Lb2T@&lt;DG@hIb@UX3ll;PUcdkES9ABPV2ia0=lG9`b0jWB[[2IS^6H&lt;d0S5caBF&gt;o[[THFAR;H;1EXj8:EJ2Ad`JJliWf`7EAFo9h8O6IfdB2ISlBG&gt;G5XZRXf&lt;_bSIQU?WM6?`H3o@K0]@\NUH_Mf8McVRn:A=;^akO?&gt;HHUC;Na=`0nDFjkZ]HkeRdDkFA6Hha]f5QlQB\@APHWP2K2k6DgI9TKadYU&lt;PO@cBQMDNC17aji3feKXl=QLRPIljNV`5:X^BNO0WnXd0Te3o0i&gt;bl8TRSRR]1`QQY\U0H[2Uk`m@elanU5]RH1X]XnW`H_;&gt;PH1ERglfRn`GlRE7E&lt;&gt;9g\aC6:?e34P2J\Z7fZe&gt;W2V:O&lt;F1=&lt;JVC&gt;2_7OIHdQ@lDlUZ^mAUU@e=dT_N;9T:&lt;&gt;G9Se1f5f4=_He1@?NIHR_dDHNL&gt;RolICaYC[e?Ikm&gt;JcRe?]7mG;^gfL^eW\7mW]7i[?^]JN9CK\feR0KPhkL6e45NeWC`=j;P:2N8n]C\b[WaQRPV@RD1lH;WO5NCe0SALKV;iCW[gQXj;XbBhJJB:]5hTI&lt;@Tk2OlaXGfj_K:_IXIL3C_Nn72C@CHUMSd9MccDF`nS]T0VZM4cDImb:Ujc[YY55lN@@Hdk47FUh`?`_`M21nh0Df_4S?&gt;DZB[BWefiLCOL1hKeEookkJiI4kna\oieIlko\joa9ia_&lt;&gt;Hg47ZE7A:dO]MRL6mVhjDM=R6OlIG7&gt;H&gt;ObUngY6]_V_g[Zg7mnN=nM3@4_8_^:VgEn&lt;nD`XZUPb_B_D5\Q;4[bf^ged[kZGKm@M;Do8NUKVe]\[FfJkGK]m;=G;Uej7?mc;];Pe_BFlEa_\_\K]2l`n1KZjbQ=[38V5mIn06c^J5cl\;4DOU`i;n&lt;IPSI9fnPbS;eRbfJ1U]U]e=6XcXR9fJUTSIldk_oUJUO1V0i@m__:CH6li\K;5U\hf=2fk61G^5\2K5=0R;=GLfkE61COO=NF&gt;O[g\OkGfjkK61E=2k6g1ZO8X@M9;e?&lt;DHW&lt;:dV?l9=^?f9=2k4?15;5nAPROX`C?DH0W:JY`d?&lt;DHW?:b5a&lt;nAHPOXKPhH3W:\0C52nbf9=2k4U16?`JW:EZmPROX`B?D\oUS26nAP&gt;I`GO4k]XEfJaK8jckGfE:KkSU]=eGNYZKA`OGJJ6[][MB=0]bf:MKiLSWgCbm5_Yde?9D\IFk&gt;G[OeWQ\mWa]i[l?E[L]]iO[?U^iFNdC\\fk41ll[egk41VJmRXP^kNOh9&lt;2Vg8^Nm7k@BA8ed^&lt;7W]?=5U^eKoYGi3mmK[M3]\]^nKo1?F&gt;gkYkoO6eI^5Gmdl_PjWld^@N=7&gt;gWo^nhSWNBl4lie=\nlIela2nHG8IS7;WJGHBNnVUoni2o_&gt;;Q;k4O7e7kMMAZnTK;]9ChfQZe;[I\YC;^C@\JN_W@E&gt;DjHeEU7oW3KUJg9GMf4IUIh\V0c:EjnUXXH99l?I3gCA&lt;E`&lt;d=lA&lt;aYVa?YdS&lt;ZVl8AgkXP&lt;g:LJ69WLX^RR2;XTfCXag6Q7g@OooCHP=4l5n]G4?JU?0W&gt;h8[cQdWULnLb;&gt;L4aHackI&lt;]JSiCNVXM&lt;eP^la7T[f&lt;L13cd_mD7c?U&gt;ZFnG25NQ=BkES`Y&gt;ZZN^7;UD;k0C\T]]&lt;YV5`0o2b&lt;aYA7TbS5h;O3^lR@7PUZEm0lH6mgdJPNW`D6W[Seh^l38;lR49EL4N?iJ]EffYj[3__&gt;l=5X&gt;9aZ?1^YN0f:KM[j\P?gZ_&lt;=?=niWfZHgQVhWQ08:4AlD:V@9?9fLK0l8UKZ]lI=XFQAFnG0ATA=:KJ^_k[gmCn]0?O9A]XT;m8Bd`S7hB00KIhP&lt;40@S]HdANV`887YB1]9T81RF4HT2OVB17HTXQLM0@5hI31`Q=Y4@\SnBS\2dPE1Bg@N84lB20?Y8ba8OCi@?PUH0@6OMD2?H@X1`mhj`ND5c0HPN61hN1Wc8@3k609M9NV3`M468M\1lBDl&gt;cJX&gt;DR78@KS25XAdC_&lt;0A&gt;7O0PnM&lt;Qia3iK003Ki6a64N;SO:F0@=96N646f@TPXd10dbQ:L\`6@a7SJ[`5hIJ38&lt;P0`0_&lt;A7a48Xdb8HB=@&lt;VlI5a@GMjD;J9d?eAY0c41J380gdh1e00LPdR;&gt;@I59Q=A1G8&lt;@[82A5@hECQX:0SA=\5KRC4&lt;QY3PR59D&lt;RV6310QXJbXC9=a3QK&gt;dQ7VROX4I1\daU4RZL\Z44@@RP:X2APXATUe@nKW[CoN[bF&gt;NNZ^m``1HCFMh9PBn?6ZY0?WAR92R8RF3@OXaFY1=X4S6TcS40U9P?o`m2X;4Q4]QH_Q3X_CFSnC28I[?Loe8^mG52VVkM\]fF_9e0k1;^en^gH[[^LLiIl=FX;b7W0GRTAME1i@&lt;hd3E[2b;U?Fn6hPXVE`:c057d`1M@fmSIM@HEUdcPPfQ6`C6fn5F&lt;6?N27aSP[hUNG9;U7Q;afi:S[SEbKCEB93E=e&gt;B:6f@d=g;:_Q13YCbcQCV73Ve&gt;4@9&gt;B:JLZA4?XY0W0S=?C5fHhbAMW5L^;DTdgFJCXc?=Z&gt;JY@&gt;lJ5Of\;T3d[8SdSfjEg16S:c=ZkS&lt;:[C&lt;VRgi;0d&gt;lSjXICRD]f`ZOFE\j^]&lt;9TQohDA[SDNhT=ALYADL49DO1842212T923@96e:\FAR=3BVO3JUF9Xa6Q9e:V\AbFVPD&lt;XP@4loJ&lt;4Ak&lt;ONbg7T89A1dbnJB&gt;&lt;j&lt;8&lt;K311O4Z75bFhL0@lnZTU[F3a?BdVUM8bZl3BK?S;XO^MiS`1cY_YX3hPNoCfTZZBZbgB^8iKn&lt;5@SAF41kmdDhEkK`PDLWl:kQY5\D[mMnPVkiF?HI&gt;@0j^Q6nD8P_=lR549fAD&lt;OLd45ChMR0Pf8a?]R@9V3T410\H;em]dC1\U0`QGEc9FQQ1:P&lt;YUAIB2nGkAJ9KT0@=IA@Q[3VjBm7g0eV:hAa]fi]5MCPT;8_Rb]9V:SID&gt;=cLJ7b;ESk9E:RUMS]decoeI7D\B2R=@@PR&gt;;E1k_oQ6CLY3e@&lt;=&lt;obH=^DP@38GMFn7&gt;Decj&lt;e&gt;:C7TD&gt;Qg9I]AKm7D=C1e^eY^FcV&lt;[TnHLn6GU7HnJ:AOBPJcH8N1S[P`5A\3BLnGchGKA=QPnLPoN6`9^N\DPM@bU3QEK^3:HQM\Inb3ZXCZ`\U;4?KgX9BY33Okh59EYCoj26AceAH9G?CZF9=CIBSYe7=F[]YBiXXBNabmo9_ETc</protected>
		<protected>E@=3NJgN100h]L]MGk_S3fBo3k7LCg8f\0V&gt;Ik8S9WK7cG9Z?T&gt;FS7lLoHI]kQj83ZbSXXEUIGBg4g5oilAj@HDik37\m^eJIQ15D&lt;BcE3b8c&gt;&lt;W5W]\KdCW:iI@g7=7loTlk7acZA`BiS]7k7?9hFVcVIh92G6&gt;h?:ODmWJ7O_]F\]bHOnG4WQd6QA`QHM_Be&gt;fO&gt;njZG==_=^emPn^4naB&gt;bd26[WnmYj&gt;3L7&gt;T&lt;BM4UTnYV?^E]ja9D69m&gt;mh8[9F;TSZbB7WMQdl^lEV&gt;5N&lt;h49c]KCO?7]3Y3mfJWoC]ek8XRH:B6IgWggXTof^PDCWTc`RlF^MWeO]AW]VBN`?aTFi\Wb^n^^nJjegZgkGfgYSA;O9Z8K@g99o_KSML_negNY_c\lMKM&gt;6?G3Q^7a7k7Y_;NofGMWJPInnTlgoD&lt;k&gt;Oih:F?NC[_V9c[?CZS7S^S3_^oKQo?m`oj=1k`dK7ZYVO&lt;R523]Ko7i_\=^i_9M8XKcIRh8SZICT5bVSlIolW?8&lt;jj`eciif_n&gt;VS=_U86NEUoel=f8Y3?O3c8;X`86^[QmMVSSkkOVSJCD5DddRF_B&lt;k6bn1SSA:Df?dffkV7KK8aMl5gI4N55[g&gt;NWh``H&gt;iJ;jdYCBKB?_BX_&gt;_^6iWmaBohh\nZ=g_7d__ka[o7m?GoL^\FLeg7W[g3QEh`cGmoM^kZofh7gPEAZ86WUP=&gt;gK^?&gt;f2?^OYOoN\SFhFP33V&lt;;_bZD&gt;?MOH69C5U\il6Ee;K]DW1F9MOPBlUN?8Voik_27Xbhg\OkN]97Q5^J&gt;[DGQ3d&lt;mdEV`fM;Ue90H1_KLWAP1VY]aIebRFNa[kULL0g?oJbB8@K;]6jc2ACbJ&lt;l4i;5YCEUKEE?HOE4BE2^g1iol6B&gt;Bi;:g\bd@EG8V`aR586mkL0[KTLT6F8&lt;l[g8dGVfLI1l5cW^\T&gt;5C5f_4@@LFm?E9`?L8LQ9LjXdOB\jMADX8]2W=Q^8c48jgJJ?POI_R`&lt;aG&gt;HO;WQJnB:^ZFFdPgaHbLmn:e2d6FGaAES;RW7IJ?K23Zk2&gt;57mVC@o8Gm1Th`[okh_gf&lt;GL?E&gt;lQY&lt;XlPD1WbK`&lt;XCL]6_AUWh\92?Ed[o`Bca8MRAD?TaEgDA&lt;&lt;kOK1niOn]nYl?Jlbo];Qn1CK^?_nk[mmhnk;^WGCBdRO]Q14NRV6R1IkVF&lt;=0n[F^&gt;&gt;Mo4Q6ael&lt;W^92:6kG\KCa9onP1eW&gt;DFoE@&gt;Fn^A?Lo&gt;&gt;AM1kE@7FH=IJd_Cdm&lt;HGX^Q?8KZeO53?\Id9?NV&lt;^;=1:V=^jlCM?]^_koSa]mPd^kLo?3e:X1aCCo^_&gt;PFh9fI4X6H;JNOFDX\T9n;h;jcDEeV230TESPO?oi[XVb[6TTofbD7\@R`QIRAP9Zg_8&gt;CCQ@Qo^^mPWO]N_@R:U&lt;Edo7Cg1nX0[BSiJB;IA56GTdf0Rba\oLN&lt;d_MHCc`]Y2R]XieHh]^ZL;0h2FW4EEc6HgIMk8i[k`lUo^T5@TN]cSCe&lt;E9SbC68?5YGcmF4ZI9WRYC44\V[j2O?]&lt;Lh:h?Z5mfBJ`W4C1GlGWUJe3IOeoB?JHHXAiOgKD27[gH&lt;]K&gt;UjfTS6G[?FQPG=2Y]]JI;8U3&gt;Fb:kS]]Qnm^5cgOin8]5XIIXJEJ\S&gt;LcC9MCIj0gbUBg=^5h2372G9IMJKM`UDLSddg=4J89[CJ&lt;RTKif9ZV724_3knL8cUXIXXJaIC1Y@PH[1MI&lt;0JFC2eA6KSSLBfFcHc?Z96;aR9C4RNLL?l8acaNOWgCY5Z\E8]_FOnReemDgB=?foE5SSiZgT[UPSLjhcdIae\E;DX`\&lt;`U=iV;4EaXVZLELD&lt;iab]&lt;3W\;fWk_jTlf7F&gt;KeUF\d8]]gV&gt;B:_C3fFA7oBDb1Edk8oJZ\X9hoPA9c::]&gt;66&gt;VYfY03l_=dL:197TIWZ9Z2fg;^TAfN6KDB]=e4]CUaU6XI2:JL\RVZ[`dbeDk6]1SMao24edJCG]ci4@JUa3`V@3miBd;_\fJ`B\Z]3ET[i&lt;&lt;iG?VmQDK9a6;f5X=mXd?DFVhHFTTDCX`@CB`kX5eQS9hdmN2ENZUlk35[lbQiFa^g2KEgaX2LKTT0Vo_L8PBLjVTgTcbYo?`ZM&lt;O]lH2SJVVCE8aU5SN@SBW@dc;&lt;VK35jID9mgko31ff8NOOn;`_FA0kmY2OK6B&gt;da]9VnUj;[9&gt;hlQ1S&gt;=Kl[A6f4P8Vn57d\RGKPO_JhFeoWl;;[8D\5PhS]Gg7Tf`Po?^MT97O&gt;f6KCRl2SHPD&gt;64Gmjccmjoof4egaQJh^hO&lt;Dc:93YRIo4GYd9Z[T6Hcl&lt;EM7LI&gt;`RjYLGUB_1EC^R?AmkXR1oNE&lt;?5jJIJ2n1GSSRb&gt;`G0ZSXGGUUmWTA4E?2`HZFTFa&lt;;VGm1n8CM@847AA6SR]FAAFlGGF4O@Z6C&gt;d&lt;XDaBbSH9mN57ASRFQa@EBWDa=;c3h&lt;TSiHiU8KK`Q;2XCRAF1a8C^^ZHI3=H@3=WANOKX`?YaDB36C3X1Gk@VKm[a5:d5VUMU;B]O@Z]A9kcnBHJBDKCUe\97cCBk4BD8HBZEOn5;OnAU2:WMoOJ_0kHf:7=DlZ545f=YJKOLbM]XI59&gt;I=9a[mjGTbje&lt;dS@]FQE8M^BgGCn;@IU`f[OS=ATD[c\PAXNb]M&lt;U8a[Y@3Rh=S?OG92]W7lf=?nFJgY&lt;LLHoa8JLVJ][jf2lMa=JE]\ZI&lt;R6VF1&gt;Sf0SfalKa`e@K&gt;A4\W6j5=7e3T3NURcC7N8mAPa?J0iL?^0[W\\FO5SnE7\\mk6_ije`lTOi@5DA@EM[X\J[Wad`PIRjN99&lt;TZ2SEnic29ihY7nWiShTK[1I5XF74BIR3\^o&lt;\N[M9PPn9eHVF`BB[QIgn@afR5oOX1g`]cVkKQ_;ZMREP8J4ASiMgL=IXEf9ZSFDD:T];a9EEmF?[dQB@VCd=;EbeEn3]_L7EFF[EUFHmcZT^lCXiI`5e\T@2c4o\UfhJQBFlebXU4o`NAlbIm;HE:X:eH_mXCIhn?iiXZiB3B]o62BihAkgc2BI5gFd[@9PW&gt;]M@d&gt;Y:K6WkF`0ZCaZkgN9TG`nD7YfGj;bT0X_2gZgVOeRVEKW@E5jR]3U`jO`g1JIbI3\bMZAF[X9Egi0CgZ;_[A`g3LIbB3@d\YKQK@D&gt;=H7;?^2XRL`7lOE7A&lt;&lt;fJS1TET]@36mGfdlnM6cdaHeDD:9\To`l@om&lt;Eb:8=?6&gt;0dU[VZl5&gt;DBANe`Y[@Bd@^AWQRKSj?RP42AOECeIi?D`aDP6=G\`BHOWZ2LRN?[H:M9LWZ[[FRHU?WK]]QdJ;NU=c9N`Q2Y^Y^7c&gt;PNMgbigG4=_bEjd3T3ABWa8H5ljX3&lt;&gt;d4Q@XhADL`Ea9iiM54Yh@TkS;aQfoS;SN=dXRZ`2\U`Bn?amHO\63CBSBhCejWZ&lt;3PaFCPdVAT07Meem0ZWRcA&gt;GPa9FEDTo[7Y&gt;mZd;&lt;jBFaQ4IlLXiV;0\`STG@Y2l`kC_3iC\S`EH&lt;ET@D&gt;5X7W&lt;2O4c&gt;6`;V62U4cob8[\lNDHADRL9`;NXY0jI4MDW&lt;E]5df=E8A17@:h3_MbTK&gt;U==]BHL89j`G5K`7B21G[UTHOjLgG4l=EQn;L2@B=9&gt;dY9iBMG[QBRHLOWbM39?Ii=QIa7QJf1QZhm`Yoj@UkV5bodG?FBe&lt;oM`VX;G=lCUN0m\bdef5`g=dVDf]AF8UbM=^RNB=\BP6@W2GK29Vd_QK8_XMC:8SmULF3imQV3YMdc[EZahO[37o@ljI^;SQ5d9lOM70W:8NEeC3S_3@?TjMUBJS0NZB2:HYefTR7fj^K?oTT8L4k\Dne9&lt;mEY0\JMBifBP&gt;jW6eYcLi7d0a@Z]TTEm2T]Zg1Z@Q[^g7CCl@R=JcRg[M&lt;lbna1R==RNi`\khA\XV1^WMSkL@&gt;Fb2iD3dE]1If=\&lt;HQ`G@EHFRYYZ9eBN5i]@WbWS=mGfHc=5mGi[`aW&gt;Ze=?mGHHc=mmGHcR=mgD^k&gt;&gt;fIZc=@1nXd=PZ5b?R?Rom[m0X:SjecZh=\[[69[j2;0`h`]Zn:Wbj5SN8K;JUC[NkSjP;XbE8=IY:]9Pb\8j:C?NV\URS^Fa:gJ&gt;f_W^7_alXVDN69HBlfl3l5b8gFDj4ZcB`f[I^V&lt;FgJ6AJ\S&gt;91VAINHAIP&gt;^3de]ERc&lt;:;BUVISQjnmBZ^^heKc=WiGBf^MZ7g3knk[o_Ol@J]YJnNm1MDoSnmM^n^?RGES2WWJEG:N]nToZnUoc_;Q];2_h7W7;MXdD`7ZAMF8dSDIVFUaRQ_ih:`IJhLPS[9j_HUkX?^7cgE_WBkoUADUhSIR8Ol`fe5QAU5hYOF^4W&lt;ECad]6l&lt;H=d\CRJhC0J_B@bO]fl6Ek3X`=D]ML4d04ef:lENPb^6Jdko6ZgA8g7W\fZQW?4RLEIie^FfTi:?Ki51C1Hkf:^KeIm\fbB\mScJL&gt;EnHi2FAFkPFX^GngmLQI\IkDIX:=E\GjQVhVXjV;^DEa\P&gt;ZCag\TIG&lt;@o8&gt;a7D3NAT?:9Od3Cj=o\CNBUY&lt;n^?W27n&lt;\?;84SCejVSKWoCnNW]??P;Nh:_E?9:NBmT]D^[OB;GL:LGI_XSAiPQ`d3cDX7TI9lP&lt;Jo@LhigJD_L6i;eoKfL&lt;@jnOLU[NCB7PWHj?4m\7D@9U_2JEKlb3:J5il[ChHG_0?j7Hk_jM]lcOElhVIRBZ0AGT@860PT;`lA01mb28MI1V&gt;0\QA&gt;VTT6H\9PR6KLA6:BTB2CI929@B_O30?IRW7Dk8H&lt;G8b3:=YMl1@PTS4=BX@EAI1fP6PPI@P@PNCd?MRZPh&lt;?idL7c3L88RW6n07HF;5Z7&gt;2@30JW:4H?=04?PRo2gBC?b\ST151e\2`j:Na2A&gt;iVP?LDWh3Qh@fXL:D0So6NHg0^D@KI:Sfa0iIX02@0ja60HXSVXd1Y\SAd@CI?SBW\Q1c0Q14`SX&gt;E1LX:85I3`U&lt;jHF18&lt;1YJ6G?J6n0D0RoPSY10NmZPM0@&gt;Hl:54kPR5Vf0`1F;40;PbV0SaX1`P&gt;D50QoUVb5B^Q2RED\1ZLfhD9LJRU0:A0HcB&lt;F5HS62k&lt;V2&gt;HP&lt;kY1X9@XCKQP90:@2GAHQ;hD7EP&gt;WaY5BXlY;0SBJH0AS^5XRT:e`84A_CX88a6j4Q`k8VU4jg2o_l18&lt;OZ1Q1LfeJ@8A3nPU25RYMifV7da^^86INUdggEfIL17?8Cd&gt;g:kkkNEQF]?a\Y]R`Md?PM2bM112Tl&lt;3]D7Ahjl&lt;`1fFYUI86bVJB?aAK&lt;&gt;cDC&lt;\4&lt;:MBeHMnjQdA8;`=a[T;2dn&lt;VTFJEUEZ3CZQFL:[5d:e86UbIib&gt;kNTR_b4hDR\Y8dJX^Y:AVd9?&lt;d8GABT5MJT3`RYYBXFTAU2T\=[MOEJSBZI?g:GDlJVidF8[dCUg@JWfiFB1^I&gt;XBleM;^9A5joAZGjXf=JdHoIcUTaX[JRR2jAjc=e&gt;I;\kR5\9JQN8GXdY8&gt;VOZRg:YJT3&lt;hO@Lad1dD8=e08SQDd6F9SD&gt;8e=LABH9U=A`BHUV=AbFQQDHXP?4boNn`@m&lt;NL;SY_\cJoMRo6\]2?k4A[`R@3D;HD5cS2Rd;AYICc8ahN]mNFQ][:Sna^l^9fc:co^`U[YDYW6j1SLAL4=MBImoU4TXca\X0AX@@H_c=IO`I3Bf9YQEjVBd0:imoY_OnJcX2e9X1LTNjT;&lt;2dRfSMdA@GPH3C0;^6H2F=\654dm01&gt;&gt;172E0HF7Jk\8n3[d11^L[V&lt;DQQ:6H&lt;YUAI1[nkaQJYD\P0IIXYEcQbYG]4P5jcJ?XHOfYd_64[1bdRkPTXi&gt;^;c1MVmd;ji&lt;2\WoOa\7g_4e;_Q:G6k`KZYgWUR[`Tk;?o?_U5M&lt;FSiJ9COan;L6k\_</protected>
		<typedef alwayssavetype='false' additionaltypeflags='0' typelistordernum='21'>
			<Action classname='StepType' isroottypedef='true' typecategory='1' timestamp='1618215606' typeversion='21.0.0.2' typelastmodversion='21.0.0.0' typeminprodversion='21.0.0.0' typeflags='33554446'>
				<subprops>
					<Substeps typename='StepTypeSubstepsArray' xsi:type='StepTypeSubstepsArray' classname='Objs' flagsforinstances='524312' instanceoverrideflags='655384'>
						<value lbound='[0]' ubound='[]'/>
					</Substeps>
					<DescriptionFormat typename='Expression' xsi:type='Expression' classname='ExprValue' flagsforinstances='4718616' instanceoverrideflags='4718616' valueflags='4194328' structureflags='524288'>
						<value>ResStr("NI_STEPTYPES", "ACTION_DESCRIPTION_NAME") + (("%ModuleDescription" == "") ? "" : ",  %ModuleDescription")</value>
					</DescriptionFormat>
					<DefaultNameFormat typename='Expression' xsi:type='Expression' classname='ExprValue' flagsforinstances='4718616' instanceoverrideflags='4718616' valueflags='4194328' structureflags='524288'>
						<value>ResStr("NI_STEPTYPES", "ACTION_DEF_STEP_NAME")</value>
					</DefaultNameFormat>
					<Menu typename='StepTypeMenu' xsi:type='StepTypeMenu' classname='Obj' flagsforinstances='524312' instanceoverrideflags='524312'>
						<subprops>
							<CanBeSubstepType classname='Bool'>
								<value>false</value>
							</CanBeSubstepType>
							<CanOnlyBeSubstepType classname='Bool'>
								<value>false</value>
							</CanOnlyBeSubstepType>
							<Category classname='Str'>
								<value>""</value>
							</Category>
							<ItemName classname='ExprValue'>
								<value>ResStr("NI_STEPTYPES", "ACTION_MENU_ITEM_NAME")</value>
							</ItemName>
							<SingularItemName classname='Str'>
								<value>""</value>
							</SingularItemName>
							<SeparatorBeforeCategory classname='Bool'>
								<value>false</value>
							</SeparatorBeforeCategory>
							<SeparatorBeforeItemName classname='Bool'>
								<value>false</value>
							</SeparatorBeforeItemName>
							<Group classname='Str'>
								<value>Action</value>
							</Group>
						</subprops>
					</Menu>
					<AdditionalResultsHints classname='Objs' valueflags='4194328' structureflags='524288'>
						<value lbound='[0]' ubound='[]'>
							<elemproto>
								<_NAME_IN_ATTRIBUTE_ typename='NI_CustomResult' xsi:type='NI_CustomResult' name='' classname='CustomResult'>
									<subprops>
										<Name classname='ExprValue'>
											<value/>
										</Name>
										<ValueToLog classname='ExprValue'>
											<value/>
										</ValueToLog>
										<Condition classname='ExprValue'>
											<value/>
										</Condition>
										<Flags classname='Num'>
											<value>8192</value>
										</Flags>
										<CheckedState classname='Num'>
											<value>2</value>
										</CheckedState>
										<Type classname='PropertyObjectType'>
											<subprops>
												<ValueType classname='Num'>
													<value>3</value>
												</ValueType>
												<IsObject classname='Bool'>
													<value>true</value>
												</IsObject>
												<TypeName classname='Str'>
													<value/>
												</TypeName>
												<ElementType classname='Objs'>
													<value lbound='[0]' ubound='[]'/>
												</ElementType>
												<ArrayDimensions classname='ArrayDimensions'>
													<subprops>
														<LowerBounds classname='Nums'>
															<value lbound='[0]' ubound='[]'/>
														</LowerBounds>
														<UpperBounds classname='Nums'>
															<value lbound='[0]' ubound='[]'/>
														</UpperBounds>
													</subprops>
												</ArrayDimensions>
												<Representation classname='Num'>
													<value>1</value>
												</Representation>
												<ClassName classname='Str'>
													<value/>
												</ClassName>
											</subprops>
										</Type>
										<Elements classname='Objs'>
											<value lbound='[0]' ubound='[]'/>
										</Elements>
										<IsAnyType classname='Bool'>
											<value>true</value>
										</IsAnyType>
									</subprops>
								</_NAME_IN_ATTRIBUTE_>
							</elemproto>
						</value>
					</AdditionalResultsHints>
					<TS typename='TEInf' xsi:type='TEInf' classname='Obj' flagsforinstances='262168' instanceoverrideflags='4456472'>
						<subprops>
							<Id classname='Str'>
								<value/>
							</Id>
							<Icon classname='Str'>
								<value/>
							</Icon>
							<SData classname='Obj' flagsforinstances='2097152' instanceoverrideflags='7143448' structureflags='2097152'/>
							<PreCond classname='ExprValue'>
								<value/>
							</PreCond>
							<LoadOpt classname='Str'>
								<value>PreloadWhenExecuted</value>
							</LoadOpt>
							<UnloadOpt classname='Str'>
								<value>UnloadWithFile</value>
							</UnloadOpt>
							<Mode classname='Str'>
								<value>Normal</value>
							</Mode>
							<WindowActivation classname='Str'>
								<value>None</value>
							</WindowActivation>
							<ResultOption classname='Num'>
								<value>1</value>
							</ResultOption>
							<StepFCSeqF classname='Bool'>
								<value>true</value>
							</StepFCSeqF>
							<IgnoreRTE classname='Bool'>
								<value>false</value>
							</IgnoreRTE>
							<UseMutex classname='Bool'>
								<value>false</value>
							</UseMutex>
							<MutexNameOrRef classname='ExprValue'>
								<value/>
							</MutexNameOrRef>
							<BatchSyncOpt classname='Num'>
								<value>0</value>
							</BatchSyncOpt>
							<SwitchEnabled classname='Bool'>
								<value>false</value>
							</SwitchEnabled>
							<VirtualDeviceName classname='ExprValue'>
								<value/>
							</VirtualDeviceName>
							<SwitchOperation classname='Num'>
								<value>1</value>
							</SwitchOperation>
							<RouteGroupConnect classname='ExprValue'>
								<value/>
							</RouteGroupConnect>
							<RouteGroupDisconnect classname='ExprValue'>
								<value/>
							</RouteGroupDisconnect>
							<MulticonnectMode classname='Num'>
								<value>1</value>
							</MulticonnectMode>
							<OperationOrder classname='Num'>
								<value>2</value>
							</OperationOrder>
							<ConnectionLifetime classname='Num'>
								<value>0</value>
							</ConnectionLifetime>
							<WaitForDebounce classname='Bool'>
								<value>true</value>
							</WaitForDebounce>
							<PassAct classname='Str' flagsforinstances='1' instanceoverrideflags='5046297'>
								<value>Next</value>
							</PassAct>
							<FailAct classname='Str' flagsforinstances='1' instanceoverrideflags='5046297'>
								<value>Next</value>
							</FailAct>
							<PassActTarget classname='ExprValue' flagsforinstances='1' instanceoverrideflags='5046297'>
								<value/>
							</PassActTarget>
							<FailActTarget classname='ExprValue' flagsforinstances='1' instanceoverrideflags='5046297'>
								<value/>
							</FailActTarget>
							<CustExpr classname='ExprValue'>
								<value/>
							</CustExpr>
							<CustTrueAct classname='Str'>
								<value>Next</value>
							</CustTrueAct>
							<CustFalseAct classname='Str'>
								<value>Next</value>
							</CustFalseAct>
							<CustTrueActTarget classname='ExprValue'>
								<value/>
							</CustTrueActTarget>
							<CustFalseActTarget classname='ExprValue'>
								<value/>
							</CustFalseActTarget>
							<LoopType classname='Str'>
								<value>NoLooping</value>
							</LoopType>
							<LoopWhile classname='ExprValue'>
								<value/>
							</LoopWhile>
							<LoopStatus classname='ExprValue'>
								<value/>
							</LoopStatus>
							<LoopIncrement classname='ExprValue'>
								<value>RunState.LoopIndex += 1</value>
							</LoopIncrement>
							<LoopInitialize classname='ExprValue'>
								<value>RunState.LoopIndex = 0</value>
							</LoopInitialize>
							<LoopOpt classname='Num'>
								<value>0</value>
							</LoopOpt>
							<PreExpr classname='ExprValue'>
								<value/>
							</PreExpr>
							<PostExpr classname='ExprValue'>
								<value/>
							</PostExpr>
							<StatusExpr classname='ExprValue'>
								<value/>
							</StatusExpr>
							<CanSpecifyModule classname='Bool'>
								<value>true</value>
							</CanSpecifyModule>
							<CanEditCode classname='Bool'>
								<value>true</value>
							</CanEditCode>
							<CanEditModulePrototype classname='Bool'>
								<value>true</value>
							</CanEditModulePrototype>
							<CanEditParameterAdditionalResults classname='Bool'>
								<value>true</value>
							</CanEditParameterAdditionalResults>
							<PrecondIntExe classname='Num'>
								<value>0</value>
							</PrecondIntExe>
							<Requirements classname='Obj' flagsforinstances='1' valueflags='1' structureflags='2097152'>
								<subprops>
									<Links classname='Strs' flagsforinstances='71303168' instanceoverrideflags='72286233' valueflags='71303168'>
										<value lbound='[0]' ubound='[]'/>
									</Links>
								</subprops>
							</Requirements>
							<CustomResults classname='Objs'>
								<value lbound='[0]' ubound='[]'>
									<elemproto>
										<_NAME_IN_ATTRIBUTE_ name='' classname='CustomResult'>
											<subprops>
												<Name classname='ExprValue'>
													<value/>
												</Name>
												<ValueToLog classname='ExprValue'>
													<value/>
												</ValueToLog>
												<Condition classname='ExprValue'>
													<value/>
												</Condition>
												<Flags classname='Num'>
													<value>8192</value>
												</Flags>
												<CheckedState classname='Num'>
													<value>2</value>
												</CheckedState>
												<Type classname='PropertyObjectType'>
													<subprops>
														<ValueType classname='Num'>
															<value>3</value>
														</ValueType>
														<IsObject classname='Bool'>
															<value>true</value>
														</IsObject>
														<TypeName classname='Str'>
															<value/>
														</TypeName>
														<ElementType classname='Objs'>
															<value lbound='[0]' ubound='[]'/>
														</ElementType>
														<ArrayDimensions classname='ArrayDimensions'>
															<subprops>
																<LowerBounds classname='Nums'>
																	<value lbound='[0]' ubound='[]'/>
																</LowerBounds>
																<UpperBounds classname='Nums'>
																	<value lbound='[0]' ubound='[]'/>
																</UpperBounds>
															</subprops>
														</ArrayDimensions>
														<Representation classname='Num'>
															<value>1</value>
														</Representation>
														<ClassName classname='Str'>
															<value/>
														</ClassName>
													</subprops>
												</Type>
												<Elements classname='Objs'>
													<value lbound='[0]' ubound='[]'/>
												</Elements>
												<IsAnyType classname='Bool'>
													<value>true</value>
												</IsAnyType>
											</subprops>
										</_NAME_IN_ATTRIBUTE_>
									</elemproto>
								</value>
							</CustomResults>
							<AdditionalResultsHints classname='Objs'>
								<value lbound='[0]' ubound='[]'>
									<elemproto>
										<_NAME_IN_ATTRIBUTE_ name='' classname='CustomResult'>
											<subprops>
												<Name classname='ExprValue'>
													<value/>
												</Name>
												<ValueToLog classname='ExprValue'>
													<value/>
												</ValueToLog>
												<Condition classname='ExprValue'>
													<value/>
												</Condition>
												<Flags classname='Num'>
													<value>8192</value>
												</Flags>
												<CheckedState classname='Num'>
													<value>2</value>
												</CheckedState>
												<Type classname='PropertyObjectType'>
													<subprops>
														<ValueType classname='Num'>
															<value>3</value>
														</ValueType>
														<IsObject classname='Bool'>
															<value>true</value>
														</IsObject>
														<TypeName classname='Str'>
															<value/>
														</TypeName>
														<ElementType classname='Objs'>
															<value lbound='[0]' ubound='[]'/>
														</ElementType>
														<ArrayDimensions classname='ArrayDimensions'>
															<subprops>
																<LowerBounds classname='Nums'>
																	<value lbound='[0]' ubound='[]'/>
																</LowerBounds>
																<UpperBounds classname='Nums'>
																	<value lbound='[0]' ubound='[]'/>
																</UpperBounds>
															</subprops>
														</ArrayDimensions>
														<Representation classname='Num'>
															<value>1</value>
														</Representation>
														<ClassName classname='Str'>
															<value/>
														</ClassName>
													</subprops>
												</Type>
												<Elements classname='Objs'>
													<value lbound='[0]' ubound='[]'/>
												</Elements>
												<IsAnyType classname='Bool'>
													<value>true</value>
												</IsAnyType>
											</subprops>
										</_NAME_IN_ATTRIBUTE_>
									</elemproto>
								</value>
							</AdditionalResultsHints>
						</subprops>
					</TS>
					<NI_Data typename='StepTypeNIData' xsi:type='StepTypeNIData' classname='Obj'>
						<subprops>
							<EditPanels classname='Strs'>
								<value lbound='[0]' ubound='[]'/>
							</EditPanels>
						</subprops>
					</NI_Data>
					<Result classname='Obj' flagsforinstances='4194304' valueflags='4194304'>
						<subprops>
							<Error typename='Error' xsi:type='Error' classname='Obj' flagsforinstances='4194304' instanceoverrideflags='4194304' valueflags='4194304'>
								<subprops>
									<Code classname='Num'>
										<value>0</value>
									</Code>
									<Msg classname='Str'>
										<value/>
									</Msg>
									<Occurred classname='Bool'>
										<value>false</value>
									</Occurred>
								</subprops>
							</Error>
							<Status classname='Str' flagsforinstances='4194304' valueflags='4194304'>
								<value/>
							</Status>
							<ReportText classname='Str' flagsforinstances='4194304' valueflags='4194304'>
								<value/>
							</ReportText>
							<Common typename='CommonResults' xsi:type='CommonResults' classname='Obj' instanceoverrideflags='4194304'/>
						</subprops>
					</Result>
					<CodeTemplates classname='Str' valueflags='4194328' structureflags='524288'>
						<value>DefaultLabVIEW|DefaultLabVIEWNXG|DefaultCVI|DefaultVB.NET|DefaultCSharp.NET|DefaultC++.NET|DefaultVC++_Template|DefaultHTB72_Template|DefaultHTB80_Template|Default_Template</value>
					</CodeTemplates>
					<BlockStartTypes classname='Str' valueflags='4194328' structureflags='524288'>
						<value/>
					</BlockStartTypes>
					<BlockEndTypes classname='Str' valueflags='4194328' structureflags='524288'>
						<value/>
					</BlockEndTypes>
					<AppliesToBlockStructure classname='Bool' valueflags='4194328' structureflags='524288'>
						<value>false</value>
					</AppliesToBlockStructure>
					<CanEncapsulate classname='Bool' valueflags='4194328' structureflags='524288'>
						<value>false</value>
					</CanEncapsulate>
					<Category classname='Str' valueflags='24' structureflags='524288'>
						<value>Action</value>
					</Category>
				</subprops>
			</Action>
		</typedef>
		<typedef alwayssavetype='false' additionaltypeflags='0' typelistordernum='22'>
			<NI_LabVIEWParameterResult classname='LabVIEWParameterResult' isroottypedef='true' typecategory='3' timestamp='1650060499' typeversion='21.0.0.49156' typelastmodversion='21.1.0.49154' typeminprodversion='21.0.0.0' typeflags='33554436' valueflags='24'>
				<subprops>
					<Condition typename='Expression' xsi:type='Expression' classname='ExprValue'>
						<value/>
					</Condition>
					<Flags classname='Num'>
						<value>8192</value>
						<numericfmt>%#x</numericfmt>
					</Flags>
					<CheckedState classname='Num'>
						<value>1</value>
					</CheckedState>
				</subprops>
			</NI_LabVIEWParameterResult>
		</typedef>
		<typedef alwayssavetype='false' additionaltypeflags='0' typelistordernum='23'>
			<VIParameter classname='VIParameter' isroottypedef='true' typecategory='3' timestamp='1650060966' typeversion='21.0.0.49156' typelastmodversion='21.1.0.49154' typeminprodversion='21.0.0.0' typeflags='33554436' valueflags='24'>
				<subprops>
					<Label classname='Str'>
						<value>_notNamed</value>
					</Label>
					<Caption classname='Str'>
						<value/>
					</Caption>
					<ArgVal typename='Expression' xsi:type='Expression' classname='ExprValue'>
						<value/>
					</ArgVal>
					<ArgDisplayVal typename='Expression' xsi:type='Expression' classname='ExprValue'>
						<value/>
					</ArgDisplayVal>
					<Type classname='Num'>
						<value>8</value>
					</Type>
					<WireRequirement classname='Num'>
						<value>2</value>
					</WireRequirement>
					<ArrayType classname='Num'>
						<value>50</value>
					</ArrayType>
					<DefaultArraySize classname='Str'>
						<value>[]</value>
					</DefaultArraySize>
					<ClusterType classname='Num'>
						<value>20</value>
					</ClusterType>
					<NumType classname='Num'>
						<value>7</value>
					</NumType>
					<ReferenceType classname='Num'>
						<value>0</value>
					</ReferenceType>
					<StrPass classname='Num'>
						<value>0</value>
					</StrPass>
					<DisplayType classname='Str'>
						<value/>
					</DisplayType>
					<UseDefaultValues classname='Bool'>
						<value>false</value>
					</UseDefaultValues>
					<PartiallySpecified classname='Bool'>
						<value>false</value>
					</PartiallySpecified>
					<ComplexParts classname='Obj' flagsforinstances='2097152' structureflags='2097152'/>
					<ArrayClusterProto classname='Obj' flagsforinstances='2097152' structureflags='2097152'/>
					<ArrayClusterEls classname='Objs'>
						<value lbound='[0]' ubound='[]'/>
					</ArrayClusterEls>
					<UserData classname='Obj' flagsforinstances='2097152' structureflags='2097152'/>
					<AdditionalResult typename='NI_LabVIEWParameterResult' xsi:type='NI_LabVIEWParameterResult' classname='LabVIEWParameterResult'>
						<subprops>
							<Condition classname='ExprValue'>
								<value/>
							</Condition>
							<Flags classname='Num'>
								<value>8192</value>
							</Flags>
							<CheckedState classname='Num'>
								<value>1</value>
							</CheckedState>
						</subprops>
					</AdditionalResult>
					<Direction classname='Num'>
						<value>0</value>
					</Direction>
					<ConnectorNumber classname='Num'>
						<value>-1</value>
					</ConnectorNumber>
					<LegacyClusterType classname='Num'>
						<value>0</value>
					</LegacyClusterType>
				</subprops>
			</VIParameter>
		</typedef>
		<typedef alwayssavetype='false' additionaltypeflags='0' typelistordernum='24'>
			<NI_NodeProperty classname='LVNodeProperty' isroottypedef='true' typecategory='3' timestamp='1650060966' typeversion='21.0.0.49156' typelastmodversion='21.1.0.49154' typeminprodversion='21.0.0.0' typeflags='33554436' valueflags='24'>
				<subprops>
					<LongName classname='Str'>
						<value/>
					</LongName>
					<DataName classname='Str'>
						<value/>
					</DataName>
					<Direction classname='Num'>
						<value>0</value>
					</Direction>
					<ConnectorNumber classname='Num'>
						<value>0</value>
					</ConnectorNumber>
					<UniqueID classname='Str'>
						<value/>
					</UniqueID>
				</subprops>
			</NI_NodeProperty>
		</typedef>
		<typedef alwayssavetype='false' additionaltypeflags='0' typelistordernum='25'>
			<FlexGStepAdditions classname='FGModule' isroottypedef='true' typecategory='3' timestamp='1650060966' typeversion='21.0.0.49156' typelastmodversion='21.1.0.49154' typeminprodversion='21.0.0.0' typeflags='33554436' valueflags='24'>
				<subprops>
					<ViCall classname='VICall'>
						<subprops>
							<CallType classname='Num'>
								<value>0</value>
							</CallType>
							<ClassPath typename='Path' xsi:type='Path' classname='PathValue'>
								<value/>
							</ClassPath>
							<ProjectPath typename='Path' xsi:type='Path' classname='PathValue'>
								<value/>
							</ProjectPath>
							<RemoteProjectPath typename='Path' xsi:type='Path' classname='PathValue'>
								<value/>
							</RemoteProjectPath>
							<VIPath typename='Path' xsi:type='Path' classname='PathValue'>
								<value/>
							</VIPath>
							<Namespace classname='Str'>
								<value/>
							</Namespace>
							<RemoteVIPath typename='Path' xsi:type='Path' classname='PathValue'>
								<value/>
							</RemoteVIPath>
							<CallName classname='Str'>
								<value/>
							</CallName>
							<VIType classname='Num'>
								<value>0</value>
							</VIType>
							<ShowFrnPnl classname='Bool'>
								<value>false</value>
							</ShowFrnPnl>
							<VIDescription classname='Str'>
								<value/>
							</VIDescription>
							<TDChecksum classname='Num'>
								<value>-1</value>
							</TDChecksum>
							<NodeLibraryName classname='Str'>
								<value/>
							</NodeLibraryName>
							<NodeLibraryGenericTypeName classname='Str'>
								<value/>
							</NodeLibraryGenericTypeName>
							<NodeClassDataName classname='Str'>
								<value/>
							</NodeClassDataName>
							<NodeUsesDataValueReference classname='Bool'>
								<value>false</value>
							</NodeUsesDataValueReference>
							<NodeIgnoresInternalErrors classname='Bool'>
								<value>false</value>
							</NodeIgnoresInternalErrors>
							<NodeOperationMode classname='Num'>
								<value>0</value>
							</NodeOperationMode>
							<AutoDetectLVRT classname='Bool'>
								<value>false</value>
							</AutoDetectLVRT>
							<RemoteHost typename='Expression' xsi:type='Expression' classname='ExprValue'>
								<value/>
							</RemoteHost>
							<RemoteHostByExpr classname='Bool'>
								<value>false</value>
							</RemoteHostByExpr>
							<PrototypeFlags classname='Num'>
								<value>0</value>
							</PrototypeFlags>
							<VI classname='Str'>
								<value/>
							</VI>
							<OverrideBinaryClassPath typename='Path' xsi:type='Path' classname='PathValue'>
								<value/>
							</OverrideBinaryClassPath>
							<OverrideBinaryVIPath typename='Path' xsi:type='Path' classname='PathValue'>
								<value/>
							</OverrideBinaryVIPath>
							<OverrideBinaryProjectPath typename='Path' xsi:type='Path' classname='PathValue'>
								<value/>
							</OverrideBinaryProjectPath>
							<OverrideBinaryNamespace classname='Str'>
								<value/>
							</OverrideBinaryNamespace>
							<OverrideModuleOptions classname='Num'>
								<value>0</value>
							</OverrideModuleOptions>
							<BuildSpecificationName classname='Str'>
								<value/>
							</BuildSpecificationName>
							<OverrideBinaryVIChecksum classname='Num'>
								<value>-1</value>
							</OverrideBinaryVIChecksum>
							<ArrayParametersMatchLVArrayDimenions classname='Bool'>
								<value>false</value>
							</ArrayParametersMatchLVArrayDimenions>
							<Parms classname='Objs'>
								<value lbound='[0]' ubound='[]'>
									<elemproto>
										<_NAME_IN_ATTRIBUTE_ typename='VIParameter' xsi:type='VIParameter' name='' classname='VIParameter' structureflags='131072'>
											<subprops>
												<Label classname='Str'>
													<value>_notNamed</value>
												</Label>
												<Caption classname='Str'>
													<value/>
												</Caption>
												<ArgVal classname='ExprValue'>
													<value/>
												</ArgVal>
												<ArgDisplayVal classname='ExprValue'>
													<value/>
												</ArgDisplayVal>
												<Type classname='Num'>
													<value>8</value>
												</Type>
												<WireRequirement classname='Num'>
													<value>2</value>
												</WireRequirement>
												<ArrayType classname='Num'>
													<value>50</value>
												</ArrayType>
												<DefaultArraySize classname='Str'>
													<value>[]</value>
												</DefaultArraySize>
												<ClusterType classname='Num'>
													<value>20</value>
												</ClusterType>
												<NumType classname='Num'>
													<value>7</value>
												</NumType>
												<ReferenceType classname='Num'>
													<value>0</value>
												</ReferenceType>
												<StrPass classname='Num'>
													<value>0</value>
												</StrPass>
												<DisplayType classname='Str'>
													<value/>
												</DisplayType>
												<UseDefaultValues classname='Bool'>
													<value>false</value>
												</UseDefaultValues>
												<PartiallySpecified classname='Bool'>
													<value>false</value>
												</PartiallySpecified>
												<ArrayClusterEls classname='Objs'>
													<value lbound='[0]' ubound='[]'/>
												</ArrayClusterEls>
												<AdditionalResult classname='LabVIEWParameterResult'>
													<subprops>
														<Condition classname='ExprValue'>
															<value/>
														</Condition>
														<Flags classname='Num'>
															<value>8192</value>
														</Flags>
														<CheckedState classname='Num'>
															<value>1</value>
														</CheckedState>
													</subprops>
												</AdditionalResult>
												<Direction classname='Num'>
													<value>0</value>
												</Direction>
												<ConnectorNumber classname='Num'>
													<value>-1</value>
												</ConnectorNumber>
												<LegacyClusterType classname='Num'>
													<value>0</value>
												</LegacyClusterType>
											</subprops>
										</_NAME_IN_ATTRIBUTE_>
									</elemproto>
								</value>
							</Parms>
							<NodeProperties classname='Objs'>
								<value lbound='[0]' ubound='[]'>
									<elemproto>
										<_NAME_IN_ATTRIBUTE_ typename='NI_NodeProperty' xsi:type='NI_NodeProperty' name='' classname='LVNodeProperty' structureflags='131072'>
											<subprops>
												<LongName classname='Str'>
													<value/>
												</LongName>
												<DataName classname='Str'>
													<value/>
												</DataName>
												<Direction classname='Num'>
													<value>0</value>
												</Direction>
												<ConnectorNumber classname='Num'>
													<value>0</value>
												</ConnectorNumber>
												<UniqueID classname='Str'>
													<value/>
												</UniqueID>
											</subprops>
										</_NAME_IN_ATTRIBUTE_>
									</elemproto>
								</value>
							</NodeProperties>
						</subprops>
					</ViCall>
				</subprops>
			</FlexGStepAdditions>
		</typedef>
		<typedef alwayssavetype='false' additionaltypeflags='0' typelistordernum='26'>
			<VIParameterElement classname='VIParameterElement' isroottypedef='true' typecategory='3' timestamp='1650060966' typeversion='21.0.0.49156' typelastmodversion='21.1.0.49154' typeminprodversion='21.0.0.0' typeflags='33554436' valueflags='24'>
				<subprops>
					<Label classname='Str'>
						<value>_notNamed</value>
					</Label>
					<Caption classname='Str'>
						<value/>
					</Caption>
					<ArgVal typename='Expression' xsi:type='Expression' classname='ExprValue'>
						<value/>
					</ArgVal>
					<ArgDisplayVal typename='Expression' xsi:type='Expression' classname='ExprValue'>
						<value/>
					</ArgDisplayVal>
					<Type classname='Num'>
						<value>8</value>
					</Type>
					<WireRequirement classname='Num'>
						<value>2</value>
					</WireRequirement>
					<ArrayType classname='Num'>
						<value>50</value>
					</ArrayType>
					<DefaultArraySize classname='Str'>
						<value>[]</value>
					</DefaultArraySize>
					<ClusterType classname='Num'>
						<value>20</value>
					</ClusterType>
					<NumType classname='Num'>
						<value>7</value>
					</NumType>
					<ReferenceType classname='Num'>
						<value>0</value>
					</ReferenceType>
					<StrPass classname='Num'>
						<value>0</value>
					</StrPass>
					<DisplayType classname='Str'>
						<value/>
					</DisplayType>
					<UseDefaultValues classname='Bool'>
						<value>false</value>
					</UseDefaultValues>
					<PartiallySpecified classname='Bool'>
						<value>false</value>
					</PartiallySpecified>
					<ComplexParts classname='Obj' flagsforinstances='2097152' structureflags='2097152'/>
					<ArrayClusterProto classname='Obj' flagsforinstances='2097152' structureflags='2097152'/>
					<ArrayClusterEls classname='Objs'>
						<value lbound='[0]' ubound='[]'/>
					</ArrayClusterEls>
					<UserData classname='Obj' flagsforinstances='2097152' structureflags='2097152'/>
					<AdditionalResult typename='NI_LabVIEWParameterResult' xsi:type='NI_LabVIEWParameterResult' classname='LabVIEWParameterResult'>
						<subprops>
							<Condition classname='ExprValue'>
								<value/>
							</Condition>
							<Flags classname='Num'>
								<value>8192</value>
							</Flags>
							<CheckedState classname='Num'>
								<value>1</value>
							</CheckedState>
						</subprops>
					</AdditionalResult>
				</subprops>
			</VIParameterElement>
		</typedef>
	</typelist>
	<Data classname='SequenceFileData' valueflags='4194304'>
		<subprops>
			<Seq classname='Objs' valueflags='4194304'>
				<value lbound='[0]' ubound='[0]'>
					<value>
						<Sequence name='MainSequence'>
							<subprops>
								<Parameters classname='Obj' valueflags='4456448'/>
								<Locals classname='Obj' valueflags='4194304'>
									<subprops>
										<ResultList classname='Objs' valueflags='4194304'>
											<value lbound='[0]' ubound='[]'>
												<elemproto>
													<_NAME_IN_ATTRIBUTE_ name='' classname='TEResult'/>
												</elemproto>
											</value>
										</ResultList>
									</subprops>
								</Locals>
								<Main classname='Objs' valueflags='4194304'>
									<value lbound='[0]' ubound='[0]'>
										<value>
											<Step typename='NI_Measurement' xsi:type='NI_Measurement' name='Source DC voltage and measure voltage/current'>
												<subprops>
													<InstrumentStepDescription classname='Str'>
														<value/>
													</InstrumentStepDescription>
													<TS classname='Obj'>
														<subprops>
															<Id classname='Str'>
																<value>ID#:FbWwC+iY7RGsKgANOl6cKB</value>
															</Id>
															<Icon classname='Str'>
																<value>Measurement\Measurement.ico</value>
															</Icon>
															<PreCond classname='ExprValue'>
																<value/>
															</PreCond>
															<LoadOpt classname='Str'>
																<value>PreloadWhenExecuted</value>
															</LoadOpt>
															<UnloadOpt classname='Str'>
																<value>UnloadWithFile</value>
															</UnloadOpt>
															<Mode classname='Str'>
																<value>Normal</value>
															</Mode>
															<WindowActivation classname='Str'>
																<value>None</value>
															</WindowActivation>
															<ResultOption classname='Num'>
																<value>1</value>
															</ResultOption>
															<StepFCSeqF classname='Bool'>
																<value>true</value>
															</StepFCSeqF>
															<IgnoreRTE classname='Bool'>
																<value>false</value>
															</IgnoreRTE>
															<UseMutex classname='Bool'>
																<value>false</value>
															</UseMutex>
															<MutexNameOrRef classname='ExprValue'>
																<value/>
															</MutexNameOrRef>
															<BatchSyncOpt classname='Num'>
																<value>0</value>
															</BatchSyncOpt>
															<SwitchEnabled classname='Bool'>
																<value>false</value>
															</SwitchEnabled>
															<VirtualDeviceName classname='ExprValue'>
																<value/>
															</VirtualDeviceName>
															<SwitchOperation classname='Num'>
																<value>1</value>
															</SwitchOperation>
															<RouteGroupConnect classname='ExprValue'>
																<value/>
															</RouteGroupConnect>
															<RouteGroupDisconnect classname='ExprValue'>
																<value/>
															</RouteGroupDisconnect>
															<MulticonnectMode classname='Num'>
																<value>1</value>
															</MulticonnectMode>
															<OperationOrder classname='Num'>
																<value>2</value>
															</OperationOrder>
															<ConnectionLifetime classname='Num'>
																<value>4</value>
															</ConnectionLifetime>
															<WaitForDebounce classname='Bool'>
																<value>true</value>
															</WaitForDebounce>
															<PassAct classname='Str'>
																<value>Next</value>
															</PassAct>
															<FailAct classname='Str'>
																<value>Next</value>
															</FailAct>
															<PassActTarget classname='ExprValue'>
																<value/>
															</PassActTarget>
															<FailActTarget classname='ExprValue'>
																<value/>
															</FailActTarget>
															<CustExpr classname='ExprValue'>
																<value/>
															</CustExpr>
															<CustTrueAct classname='Str'>
																<value>Next</value>
															</CustTrueAct>
															<CustFalseAct classname='Str'>
																<value>Next</value>
															</CustFalseAct>
															<CustTrueActTarget classname='ExprValue'>
																<value/>
															</CustTrueActTarget>
															<CustFalseActTarget classname='ExprValue'>
																<value/>
															</CustFalseActTarget>
															<LoopType classname='Str'>
																<value>NoLooping</value>
															</LoopType>
															<LoopWhile classname='ExprValue'>
																<value/>
															</LoopWhile>
															<LoopStatus classname='ExprValue'>
																<value/>
															</LoopStatus>
															<LoopIncrement classname='ExprValue'>
																<value>RunState.LoopIndex += 1</value>
															</LoopIncrement>
															<LoopInitialize classname='ExprValue'>
																<value>RunState.LoopIndex = 0</value>
															</LoopInitialize>
															<LoopOpt classname='Num'>
																<value>0</value>
															</LoopOpt>
															<PreExpr classname='ExprValue'>
																<value/>
															</PreExpr>
															<PostExpr classname='ExprValue'>
																<value/>
															</PostExpr>
															<StatusExpr classname='ExprValue'>
																<value/>
															</StatusExpr>
															<CanEditCode classname='Bool'>
																<value>true</value>
															</CanEditCode>
															<CanEditModulePrototype classname='Bool'>
																<value>true</value>
															</CanEditModulePrototype>
															<CanEditParameterAdditionalResults classname='Bool'>
																<value>true</value>
															</CanEditParameterAdditionalResults>
															<PrecondIntExe classname='Num'>
																<value>0</value>
															</PrecondIntExe>
															<CustomResults classname='Objs'>
																<value lbound='[0]' ubound='[]'>
																	<elemproto>
																		<_NAME_IN_ATTRIBUTE_ name='' classname='CustomResult'>
																			<subprops>
																				<Name classname='ExprValue'>
																					<value/>
																				</Name>
																				<ValueToLog classname='ExprValue'>
																					<value/>
																				</ValueToLog>
																				<Condition classname='ExprValue'>
																					<value/>
																				</Condition>
																				<Flags classname='Num'>
																					<value>8192</value>
																				</Flags>
																				<CheckedState classname='Num'>
																					<value>2</value>
																				</CheckedState>
																				<Type classname='PropertyObjectType'>
																					<subprops>
																						<ValueType classname='Num'>
																							<value>3</value>
																						</ValueType>
																						<IsObject classname='Bool'>
																							<value>true</value>
																						</IsObject>
																						<TypeName classname='Str'>
																							<value/>
																						</TypeName>
																						<ElementType classname='Objs'>
																							<value lbound='[0]' ubound='[]'/>
																						</ElementType>
																						<ArrayDimensions classname='ArrayDimensions'>
																							<subprops>
																								<LowerBounds classname='Nums'>
																									<value lbound='[0]' ubound='[]'/>
																								</LowerBounds>
																								<UpperBounds classname='Nums'>
																									<value lbound='[0]' ubound='[]'/>
																								</UpperBounds>
																							</subprops>
																						</ArrayDimensions>
																						<Representation classname='Num'>
																							<value>1</value>
																						</Representation>
																						<ClassName classname='Str'>
																							<value/>
																						</ClassName>
																					</subprops>
																				</Type>
																				<Elements classname='Objs'>
																					<value lbound='[0]' ubound='[]'/>
																				</Elements>
																				<IsAnyType classname='Bool'>
																					<value>true</value>
																				</IsAnyType>
																			</subprops>
																		</_NAME_IN_ATTRIBUTE_>
																	</elemproto>
																</value>
															</CustomResults>
															<AdditionalResultsHints classname='Objs'>
																<value lbound='[0]' ubound='[]'>
																	<elemproto>
																		<_NAME_IN_ATTRIBUTE_ name='' classname='CustomResult'>
																			<subprops>
																				<Name classname='ExprValue'>
																					<value/>
																				</Name>
																				<ValueToLog classname='ExprValue'>
																					<value/>
																				</ValueToLog>
																				<Condition classname='ExprValue'>
																					<value/>
																				</Condition>
																				<Flags classname='Num'>
																					<value>8192</value>
																				</Flags>
																				<CheckedState classname='Num'>
																					<value>2</value>
																				</CheckedState>
																				<Type classname='PropertyObjectType'>
																					<subprops>
																						<ValueType classname='Num'>
																							<value>3</value>
																						</ValueType>
																						<IsObject classname='Bool'>
																							<value>true</value>
																						</IsObject>
																						<TypeName classname='Str'>
																							<value/>
																						</TypeName>
																						<ElementType classname='Objs'>
																							<value lbound='[0]' ubound='[]'/>
																						</ElementType>
																						<ArrayDimensions classname='ArrayDimensions'>
																							<subprops>
																								<LowerBounds classname='Nums'>
																									<value lbound='[0]' ubound='[]'/>
																								</LowerBounds>
																								<UpperBounds classname='Nums'>
																									<value lbound='[0]' ubound='[]'/>
																								</UpperBounds>
																							</subprops>
																						</ArrayDimensions>
																						<Representation classname='Num'>
																							<value>1</value>
																						</Representation>
																						<ClassName classname='Str'>
																							<value/>
																						</ClassName>
																					</subprops>
																				</Type>
																				<Elements classname='Objs'>
																					<value lbound='[0]' ubound='[]'/>
																				</Elements>
																				<IsAnyType classname='Bool'>
																					<value>true</value>
																				</IsAnyType>
																			</subprops>
																		</_NAME_IN_ATTRIBUTE_>
																	</elemproto>
																</value>
															</AdditionalResultsHints>
														</subprops>
													</TS>
													<Result classname='Obj'>
														<subprops>
															<Error classname='Obj'>
																<subprops>
																	<Code classname='Num'>
																		<value>0</value>
																	</Code>
																	<Msg classname='Str'>
																		<value/>
																	</Msg>
																	<Occurred classname='Bool'>
																		<value>false</value>
																	</Occurred>
																</subprops>
															</Error>
															<Status classname='Str'>
																<value/>
															</Status>
															<ReportText classname='Str'>
																<value/>
															</ReportText>
															<Common classname='Obj'/>
														</subprops>
													</Result>
													<Measurement classname='Obj'>
														<subprops>
															<Version classname='Str'>
																<value>1.0.0</value>
															</Version>
															<Name classname='Str'>
																<value>ni.examples.NIDCPowerSourceDCVoltageWithLogger_LabVIEW</value>
															</Name>
															<Parameters classname='Objs'>
																<value lbound='[0]' ubound='[10]'>
																	<elemproto>
																		<_NAME_IN_ATTRIBUTE_ name='' classname='Obj'>
																			<subprops>
																				<MessageType classname='Str'>
																					<value/>
																				</MessageType>
																				<Name classname='Str'>
																					<value/>
																				</Name>
																				<ArgumentValue classname='ExprValue'>
																					<value/>
																				</ArgumentValue>
																				<Direction classname='Str'>
																					<value/>
																				</Direction>
																				<Log classname='Bool'>
																					<value>false</value>
																				</Log>
																				<Dimension classname='Num'>
																					<value representation='UInt64'>0</value>
																				</Dimension>
																				<Type classname='Str'>
																					<value/>
																				</Type>
																				<ID classname='Num'>
																					<value representation='Int64'>0</value>
																				</ID>
																				<TypeSpecialization classname='Str'>
																					<value/>
																				</TypeSpecialization>
																			</subprops>
																		</_NAME_IN_ATTRIBUTE_>
																	</elemproto>
																	<value>
																		<Obj typename='NI_MeasurementParameter' name=''>
																			<subprops>
																				<MessageType classname='Str'>
																					<value/>
																				</MessageType>
																				<Name classname='Str'>
																					<value>pin_names</value>
																				</Name>
																				<ArgumentValue classname='ExprValue'>
																					<value>#NoValidation({""} = {})</value>
																				</ArgumentValue>
																				<Direction classname='Str'>
																					<value>In</value>
																				</Direction>
																				<Log classname='Bool'>
																					<value>true</value>
																				</Log>
																				<Dimension classname='Num'>
																					<value representation='UInt64'>1</value>
																				</Dimension>
																				<Type classname='Str'>
																					<value>TypeString</value>
																				</Type>
																				<ID classname='Num'>
																					<value representation='Int64'>1</value>
																				</ID>
																				<TypeSpecialization classname='Str'>
																					<value>IOResource</value>
																				</TypeSpecialization>
																				<EnumDefinition classname='Objs'>
																					<value lbound='[0]' ubound='[]'/>
																				</EnumDefinition>
																			</subprops>
																		</Obj>
																	</value>
																	<value>
																		<Obj typename='NI_MeasurementParameter' name=''>
																			<subprops>
																				<MessageType classname='Str'>
																					<value/>
																				</MessageType>
																				<Name classname='Str'>
																					<value>voltage_level</value>
																				</Name>
																				<ArgumentValue classname='ExprValue'>
																					<value>6</value>
																				</ArgumentValue>
																				<Direction classname='Str'>
																					<value>In</value>
																				</Direction>
																				<Log classname='Bool'>
																					<value>true</value>
																				</Log>
																				<Dimension classname='Num'>
																					<value representation='UInt64'>0</value>
																				</Dimension>
																				<Type classname='Str'>
																					<value>TypeDouble</value>
																				</Type>
																				<ID classname='Num'>
																					<value representation='Int64'>2</value>
																				</ID>
																				<TypeSpecialization classname='Str'>
																					<value>None</value>
																				</TypeSpecialization>
																				<EnumDefinition classname='Objs'>
																					<value lbound='[0]' ubound='[]'/>
																				</EnumDefinition>
																			</subprops>
																		</Obj>
																	</value>
																	<value>
																		<Obj typename='NI_MeasurementParameter' name=''>
																			<subprops>
																				<MessageType classname='Str'>
																					<value/>
																				</MessageType>
																				<Name classname='Str'>
																					<value>voltage_level_range</value>
																				</Name>
																				<ArgumentValue classname='ExprValue'>
																					<value>6</value>
																				</ArgumentValue>
																				<Direction classname='Str'>
																					<value>In</value>
																				</Direction>
																				<Log classname='Bool'>
																					<value>true</value>
																				</Log>
																				<Dimension classname='Num'>
																					<value representation='UInt64'>0</value>
																				</Dimension>
																				<Type classname='Str'>
																					<value>TypeDouble</value>
																				</Type>
																				<ID classname='Num'>
																					<value representation='Int64'>3</value>
																				</ID>
																				<TypeSpecialization classname='Str'>
																					<value>None</value>
																				</TypeSpecialization>
																				<EnumDefinition classname='Objs'>
																					<value lbound='[0]' ubound='[]'/>
																				</EnumDefinition>
																			</subprops>
																		</Obj>
																	</value>
																	<value>
																		<Obj typename='NI_MeasurementParameter' name=''>
																			<subprops>
																				<MessageType classname='Str'>
																					<value/>
																				</MessageType>
																				<Name classname='Str'>
																					<value>current_limit</value>
																				</Name>
																				<ArgumentValue classname='ExprValue'>
																					<value>0.01</value>
																				</ArgumentValue>
																				<Direction classname='Str'>
																					<value>In</value>
																				</Direction>
																				<Log classname='Bool'>
																					<value>true</value>
																				</Log>
																				<Dimension classname='Num'>
																					<value representation='UInt64'>0</value>
																				</Dimension>
																				<Type classname='Str'>
																					<value>TypeDouble</value>
																				</Type>
																				<ID classname='Num'>
																					<value representation='Int64'>4</value>
																				</ID>
																				<TypeSpecialization classname='Str'>
																					<value>None</value>
																				</TypeSpecialization>
																				<EnumDefinition classname='Objs'>
																					<value lbound='[0]' ubound='[]'/>
																				</EnumDefinition>
																			</subprops>
																		</Obj>
																	</value>
																	<value>
																		<Obj typename='NI_MeasurementParameter' name=''>
																			<subprops>
																				<MessageType classname='Str'>
																					<value/>
																				</MessageType>
																				<Name classname='Str'>
																					<value>current_limit_range</value>
																				</Name>
																				<ArgumentValue classname='ExprValue'>
																					<value>0.01</value>
																				</ArgumentValue>
																				<Direction classname='Str'>
																					<value>In</value>
																				</Direction>
																				<Log classname='Bool'>
																					<value>true</value>
																				</Log>
																				<Dimension classname='Num'>
																					<value representation='UInt64'>0</value>
																				</Dimension>
																				<Type classname='Str'>
																					<value>TypeDouble</value>
																				</Type>
																				<ID classname='Num'>
																					<value representation='Int64'>5</value>
																				</ID>
																				<TypeSpecialization classname='Str'>
																					<value>None</value>
																				</TypeSpecialization>
																				<EnumDefinition classname='Objs'>
																					<value lbound='[0]' ubound='[]'/>
																				</EnumDefinition>
																			</subprops>
																		</Obj>
																	</value>
																	<value>
																		<Obj typename='NI_MeasurementParameter' name=''>
																			<subprops>
																				<MessageType classname='Str'>
																					<value/>
																				</MessageType>
																				<Name classname='Str'>
																					<value>source_delay</value>
																				</Name>
																				<ArgumentValue classname='ExprValue'>
																					<value>0</value>
																				</ArgumentValue>
																				<Direction classname='Str'>
																					<value>In</value>
																				</Direction>
																				<Log classname='Bool'>
																					<value>true</value>
																				</Log>
																				<Dimension classname='Num'>
																					<value representation='UInt64'>0</value>
																				</Dimension>
																				<Type classname='Str'>
																					<value>TypeDouble</value>
																				</Type>
																				<ID classname='Num'>
																					<value representation='Int64'>6</value>
																				</ID>
																				<TypeSpecialization classname='Str'>
																					<value>None</value>
																				</TypeSpecialization>
																				<EnumDefinition classname='Objs'>
																					<value lbound='[0]' ubound='[]'/>
																				</EnumDefinition>
																			</subprops>
																		</Obj>
																	</value>
																	<value>
																		<Obj typename='NI_MeasurementParameter' name=''>
																			<subprops>
																				<MessageType classname='Str'>
																					<value/>
																				</MessageType>
																				<Name classname='Str'>
																					<value>measurement_sites</value>
																				</Name>
																				<ArgumentValue classname='ExprValue'>
																					<value/>
																				</ArgumentValue>
																				<Direction classname='Str'>
																					<value>Out</value>
																				</Direction>
																				<Log classname='Bool'>
																					<value>true</value>
																				</Log>
																				<Dimension classname='Num'>
																					<value representation='UInt64'>1</value>
																				</Dimension>
																				<Type classname='Str'>
																					<value>TypeInt32</value>
																				</Type>
																				<ID classname='Num'>
																					<value representation='Int64'>1</value>
																				</ID>
																				<TypeSpecialization classname='Str'>
																					<value>None</value>
																				</TypeSpecialization>
																				<EnumDefinition classname='Objs'>
																					<value lbound='[0]' ubound='[]'/>
																				</EnumDefinition>
																			</subprops>
																		</Obj>
																	</value>
																	<value>
																		<Obj typename='NI_MeasurementParameter' name=''>
																			<subprops>
																				<MessageType classname='Str'>
																					<value/>
																				</MessageType>
																				<Name classname='Str'>
																					<value>measurement_pin_names</value>
																				</Name>
																				<ArgumentValue classname='ExprValue'>
																					<value/>
																				</ArgumentValue>
																				<Direction classname='Str'>
																					<value>Out</value>
																				</Direction>
																				<Log classname='Bool'>
																					<value>true</value>
																				</Log>
																				<Dimension classname='Num'>
																					<value representation='UInt64'>1</value>
																				</Dimension>
																				<Type classname='Str'>
																					<value>TypeString</value>
																				</Type>
																				<ID classname='Num'>
																					<value representation='Int64'>2</value>
																				</ID>
																				<TypeSpecialization classname='Str'>
																					<value>None</value>
																				</TypeSpecialization>
																				<EnumDefinition classname='Objs'>
																					<value lbound='[0]' ubound='[]'/>
																				</EnumDefinition>
																			</subprops>
																		</Obj>
																	</value>
																	<value>
																		<Obj typename='NI_MeasurementParameter' name=''>
																			<subprops>
																				<MessageType classname='Str'>
																					<value/>
																				</MessageType>
																				<Name classname='Str'>
																					<value>voltage_measurements</value>
																				</Name>
																				<ArgumentValue classname='ExprValue'>
																					<value/>
																				</ArgumentValue>
																				<Direction classname='Str'>
																					<value>Out</value>
																				</Direction>
																				<Log classname='Bool'>
																					<value>true</value>
																				</Log>
																				<Dimension classname='Num'>
																					<value representation='UInt64'>1</value>
																				</Dimension>
																				<Type classname='Str'>
																					<value>TypeDouble</value>
																				</Type>
																				<ID classname='Num'>
																					<value representation='Int64'>3</value>
																				</ID>
																				<TypeSpecialization classname='Str'>
																					<value>None</value>
																				</TypeSpecialization>
																				<EnumDefinition classname='Objs'>
																					<value lbound='[0]' ubound='[]'/>
																				</EnumDefinition>
																			</subprops>
																		</Obj>
																	</value>
																	<value>
																		<Obj typename='NI_MeasurementParameter' name=''>
																			<subprops>
																				<MessageType classname='Str'>
																					<value/>
																				</MessageType>
																				<Name classname='Str'>
																					<value>current_measurements</value>
																				</Name>
																				<ArgumentValue classname='ExprValue'>
																					<value/>
																				</ArgumentValue>
																				<Direction classname='Str'>
																					<value>Out</value>
																				</Direction>
																				<Log classname='Bool'>
																					<value>true</value>
																				</Log>
																				<Dimension classname='Num'>
																					<value representation='UInt64'>1</value>
																				</Dimension>
																				<Type classname='Str'>
																					<value>TypeDouble</value>
																				</Type>
																				<ID classname='Num'>
																					<value representation='Int64'>4</value>
																				</ID>
																				<TypeSpecialization classname='Str'>
																					<value>None</value>
																				</TypeSpecialization>
																				<EnumDefinition classname='Objs'>
																					<value lbound='[0]' ubound='[]'/>
																				</EnumDefinition>
																			</subprops>
																		</Obj>
																	</value>
																	<value>
																		<Obj typename='NI_MeasurementParameter' name=''>
																			<subprops>
																				<MessageType classname='Str'>
																					<value/>
																				</MessageType>
																				<Name classname='Str'>
																					<value>in_compliance</value>
																				</Name>
																				<ArgumentValue classname='ExprValue'>
																					<value/>
																				</ArgumentValue>
																				<Direction classname='Str'>
																					<value>Out</value>
																				</Direction>
																				<Log classname='Bool'>
																					<value>true</value>
																				</Log>
																				<Dimension classname='Num'>
																					<value representation='UInt64'>1</value>
																				</Dimension>
																				<Type classname='Str'>
																					<value>TypeBool</value>
																				</Type>
																				<ID classname='Num'>
																					<value representation='Int64'>5</value>
																				</ID>
																				<TypeSpecialization classname='Str'>
																					<value>None</value>
																				</TypeSpecialization>
																				<EnumDefinition classname='Objs'>
																					<value lbound='[0]' ubound='[]'/>
																				</EnumDefinition>
																			</subprops>
																		</Obj>
																	</value>
																</value>
															</Parameters>
														</subprops>
													</Measurement>
												</subprops>
											</Step>
										</value>
									</value>
								</Main>
								<Setup classname='Objs' valueflags='4194304'>
									<value lbound='[0]' ubound='[1]'>
										<value>
											<Step typename='NI_UpdatePinMap' xsi:type='NI_UpdatePinMap' name='Update pin map'>
												<subprops>
													<TS classname='Obj'>
														<subprops>
															<Id classname='Str'>
																<value>ID#:vcxIwASW7hGxGVAoSqomQC</value>
															</Id>
															<Icon classname='Str'>
																<value>NI_SequenceEditor\StepSettings\ni_UpdateMapping.ico</value>
															</Icon>
															<PreCond classname='ExprValue'>
																<value/>
															</PreCond>
															<LoadOpt classname='Str'>
																<value>PreloadWhenExecuted</value>
															</LoadOpt>
															<UnloadOpt classname='Str'>
																<value>UnloadWithFile</value>
															</UnloadOpt>
															<Mode classname='Str'>
																<value>Normal</value>
															</Mode>
															<WindowActivation classname='Str'>
																<value>None</value>
															</WindowActivation>
															<ResultOption classname='Num'>
																<value>0</value>
															</ResultOption>
															<StepFCSeqF classname='Bool'>
																<value>true</value>
															</StepFCSeqF>
															<IgnoreRTE classname='Bool'>
																<value>false</value>
															</IgnoreRTE>
															<UseMutex classname='Bool'>
																<value>false</value>
															</UseMutex>
															<MutexNameOrRef classname='ExprValue'>
																<value/>
															</MutexNameOrRef>
															<BatchSyncOpt classname='Num'>
																<value>0</value>
															</BatchSyncOpt>
															<SwitchEnabled classname='Bool'>
																<value>false</value>
															</SwitchEnabled>
															<VirtualDeviceName classname='ExprValue'>
																<value/>
															</VirtualDeviceName>
															<SwitchOperation classname='Num'>
																<value>1</value>
															</SwitchOperation>
															<RouteGroupConnect classname='ExprValue'>
																<value/>
															</RouteGroupConnect>
															<RouteGroupDisconnect classname='ExprValue'>
																<value/>
															</RouteGroupDisconnect>
															<MulticonnectMode classname='Num'>
																<value>1</value>
															</MulticonnectMode>
															<OperationOrder classname='Num'>
																<value>2</value>
															</OperationOrder>
															<ConnectionLifetime classname='Num'>
																<value>4</value>
															</ConnectionLifetime>
															<WaitForDebounce classname='Bool'>
																<value>true</value>
															</WaitForDebounce>
															<PassAct classname='Str'>
																<value>Next</value>
															</PassAct>
															<FailAct classname='Str'>
																<value>Next</value>
															</FailAct>
															<PassActTarget classname='ExprValue'>
																<value/>
															</PassActTarget>
															<FailActTarget classname='ExprValue'>
																<value/>
															</FailActTarget>
															<CustExpr classname='ExprValue'>
																<value/>
															</CustExpr>
															<CustTrueAct classname='Str'>
																<value>Next</value>
															</CustTrueAct>
															<CustFalseAct classname='Str'>
																<value>Next</value>
															</CustFalseAct>
															<CustTrueActTarget classname='ExprValue'>
																<value/>
															</CustTrueActTarget>
															<CustFalseActTarget classname='ExprValue'>
																<value/>
															</CustFalseActTarget>
															<LoopType classname='Str'>
																<value>NoLooping</value>
															</LoopType>
															<LoopWhile classname='ExprValue'>
																<value/>
															</LoopWhile>
															<LoopStatus classname='ExprValue'>
																<value/>
															</LoopStatus>
															<LoopIncrement classname='ExprValue'>
																<value>RunState.LoopIndex += 1</value>
															</LoopIncrement>
															<LoopInitialize classname='ExprValue'>
																<value>RunState.LoopIndex = 0</value>
															</LoopInitialize>
															<LoopOpt classname='Num'>
																<value>0</value>
															</LoopOpt>
															<PreExpr classname='ExprValue'>
																<value/>
															</PreExpr>
															<PostExpr classname='ExprValue'>
																<value/>
															</PostExpr>
															<StatusExpr classname='ExprValue'>
																<value/>
															</StatusExpr>
															<CanSpecifyModule classname='Bool'>
																<value>true</value>
															</CanSpecifyModule>
															<CanEditCode classname='Bool'>
																<value>true</value>
															</CanEditCode>
															<CanEditModulePrototype classname='Bool'>
																<value>true</value>
															</CanEditModulePrototype>
															<CanEditParameterAdditionalResults classname='Bool'>
																<value>true</value>
															</CanEditParameterAdditionalResults>
															<PrecondIntExe classname='Num'>
																<value>0</value>
															</PrecondIntExe>
															<CustomResults classname='Objs'>
																<value lbound='[0]' ubound='[]'>
																	<elemproto>
																		<_NAME_IN_ATTRIBUTE_ name='' classname='CustomResult'>
																			<subprops>
																				<Name classname='ExprValue'>
																					<value/>
																				</Name>
																				<ValueToLog classname='ExprValue'>
																					<value/>
																				</ValueToLog>
																				<Condition classname='ExprValue'>
																					<value/>
																				</Condition>
																				<Flags classname='Num'>
																					<value>8192</value>
																				</Flags>
																				<CheckedState classname='Num'>
																					<value>2</value>
																				</CheckedState>
																				<Type classname='PropertyObjectType'>
																					<subprops>
																						<ValueType classname='Num'>
																							<value>3</value>
																						</ValueType>
																						<IsObject classname='Bool'>
																							<value>true</value>
																						</IsObject>
																						<TypeName classname='Str'>
																							<value/>
																						</TypeName>
																						<ElementType classname='Objs'>
																							<value lbound='[0]' ubound='[]'/>
																						</ElementType>
																						<ArrayDimensions classname='ArrayDimensions'>
																							<subprops>
																								<LowerBounds classname='Nums'>
																									<value lbound='[0]' ubound='[]'/>
																								</LowerBounds>
																								<UpperBounds classname='Nums'>
																									<value lbound='[0]' ubound='[]'/>
																								</UpperBounds>
																							</subprops>
																						</ArrayDimensions>
																						<Representation classname='Num'>
																							<value>1</value>
																						</Representation>
																						<ClassName classname='Str'>
																							<value/>
																						</ClassName>
																					</subprops>
																				</Type>
																				<Elements classname='Objs'>
																					<value lbound='[0]' ubound='[]'/>
																				</Elements>
																				<IsAnyType classname='Bool'>
																					<value>true</value>
																				</IsAnyType>
																			</subprops>
																		</_NAME_IN_ATTRIBUTE_>
																	</elemproto>
																</value>
															</CustomResults>
															<AdditionalResultsHints classname='Objs'>
																<value lbound='[0]' ubound='[]'>
																	<elemproto>
																		<_NAME_IN_ATTRIBUTE_ name='' classname='CustomResult'>
																			<subprops>
																				<Name classname='ExprValue'>
																					<value/>
																				</Name>
																				<ValueToLog classname='ExprValue'>
																					<value/>
																				</ValueToLog>
																				<Condition classname='ExprValue'>
																					<value/>
																				</Condition>
																				<Flags classname='Num'>
																					<value>8192</value>
																				</Flags>
																				<CheckedState classname='Num'>
																					<value>2</value>
																				</CheckedState>
																				<Type classname='PropertyObjectType'>
																					<subprops>
																						<ValueType classname='Num'>
																							<value>3</value>
																						</ValueType>
																						<IsObject classname='Bool'>
																							<value>true</value>
																						</IsObject>
																						<TypeName classname='Str'>
																							<value/>
																						</TypeName>
																						<ElementType classname='Objs'>
																							<value lbound='[0]' ubound='[]'/>
																						</ElementType>
																						<ArrayDimensions classname='ArrayDimensions'>
																							<subprops>
																								<LowerBounds classname='Nums'>
																									<value lbound='[0]' ubound='[]'/>
																								</LowerBounds>
																								<UpperBounds classname='Nums'>
																									<value lbound='[0]' ubound='[]'/>
																								</UpperBounds>
																							</subprops>
																						</ArrayDimensions>
																						<Representation classname='Num'>
																							<value>1</value>
																						</Representation>
																						<ClassName classname='Str'>
																							<value/>
																						</ClassName>
																					</subprops>
																				</Type>
																				<Elements classname='Objs'>
																					<value lbound='[0]' ubound='[]'/>
																				</Elements>
																				<IsAnyType classname='Bool'>
																					<value>true</value>
																				</IsAnyType>
																			</subprops>
																		</_NAME_IN_ATTRIBUTE_>
																	</elemproto>
																</value>
															</AdditionalResultsHints>
														</subprops>
													</TS>
													<Result classname='Obj'>
														<subprops>
															<Error classname='Obj'>
																<subprops>
																	<Code classname='Num'>
																		<value>0</value>
																	</Code>
																	<Msg classname='Str'>
																		<value/>
																	</Msg>
																	<Occurred classname='Bool'>
																		<value>false</value>
																	</Occurred>
																</subprops>
															</Error>
															<Status classname='Str'>
																<value/>
															</Status>
															<ReportText classname='Str'>
																<value/>
															</ReportText>
															<Common classname='Obj'/>
														</subprops>
													</Result>
													<PinMapPath classname='PathValue'>
														<value>"NIDCPowerSourceDCVoltage.pinmap"</value>
													</PinMapPath>
												</subprops>
											</Step>
										</value>
										<value>
											<Step typename='Action' xsi:type='Action' name='Initialize and register NI-DCPower Sessions'>
												<subprops>
													<TS classname='Obj'>
														<subprops>
															<Id classname='Str'>
																<value>ID#:2d1ji6jd7RGiN0xEW1WgXC</value>
															</Id>
															<Icon classname='Str'>
																<value/>
															</Icon>
															<SData typename='FlexGStepAdditions' xsi:type='FlexGStepAdditions' classname='FGModule'>
																<subprops>
																	<ViCall classname='VICall'>
																		<subprops>
																			<CallType classname='Num'>
																				<value>0</value>
																			</CallType>
																			<ClassPath classname='PathValue'>
																				<value/>
																			</ClassPath>
																			<ProjectPath classname='PathValue'>
																				<value>NIDCPowerSourceDCVoltage.lvproj</value>
																			</ProjectPath>
																			<RemoteProjectPath classname='PathValue'>
																				<value/>
																			</RemoteProjectPath>
																			<VIPath classname='PathValue'>
																				<value>My Computer\NIDCPowerSourceDCVoltage.lvlib\TestStand Code Modules\Initialize and Register Sessions.vi</value>
																			</VIPath>
																			<Namespace classname='Str'>
																				<value>NIDCPowerSourceDCVoltage.lvlib</value>
																			</Namespace>
																			<RemoteVIPath classname='PathValue'>
																				<value/>
																			</RemoteVIPath>
																			<CallName classname='Str'>
																				<value/>
																			</CallName>
																			<VIType classname='Num'>
																				<value>0</value>
																			</VIType>
																			<ShowFrnPnl classname='Bool'>
																				<value>false</value>
																			</ShowFrnPnl>
																			<VIDescription classname='Str'>
																				<value/>
																			</VIDescription>
																			<TDChecksum classname='Num'>
																				<value>1647506694</value>
																			</TDChecksum>
																			<NodeLibraryName classname='Str'>
																				<value/>
																			</NodeLibraryName>
																			<NodeLibraryGenericTypeName classname='Str'>
																				<value/>
																			</NodeLibraryGenericTypeName>
																			<NodeClassDataName classname='Str'>
																				<value/>
																			</NodeClassDataName>
																			<NodeUsesDataValueReference classname='Bool'>
																				<value>false</value>
																			</NodeUsesDataValueReference>
																			<NodeIgnoresInternalErrors classname='Bool'>
																				<value>false</value>
																			</NodeIgnoresInternalErrors>
																			<NodeOperationMode classname='Num'>
																				<value>0</value>
																			</NodeOperationMode>
																			<AutoDetectLVRT classname='Bool'>
																				<value>false</value>
																			</AutoDetectLVRT>
																			<RemoteHost classname='ExprValue'>
																				<value/>
																			</RemoteHost>
																			<RemoteHostByExpr classname='Bool'>
																				<value>false</value>
																			</RemoteHostByExpr>
																			<PrototypeFlags classname='Num'>
																				<value>0</value>
																			</PrototypeFlags>
																			<VI classname='Str'>
																				<value/>
																			</VI>
																			<OverrideBinaryClassPath classname='PathValue'>
																				<value/>
																			</OverrideBinaryClassPath>
																			<OverrideBinaryVIPath classname='PathValue'>
																				<value/>
																			</OverrideBinaryVIPath>
																			<OverrideBinaryProjectPath classname='PathValue'>
																				<value/>
																			</OverrideBinaryProjectPath>
																			<OverrideBinaryNamespace classname='Str'>
																				<value/>
																			</OverrideBinaryNamespace>
																			<OverrideModuleOptions classname='Num'>
																				<value>0</value>
																			</OverrideModuleOptions>
																			<BuildSpecificationName classname='Str'>
																				<value/>
																			</BuildSpecificationName>
																			<OverrideBinaryVIChecksum classname='Num'>
																				<value>-1</value>
																			</OverrideBinaryVIChecksum>
																			<ArrayParametersMatchLVArrayDimenions classname='Bool'>
																				<value>false</value>
																			</ArrayParametersMatchLVArrayDimenions>
																			<Parms classname='Objs'>
																				<value lbound='[0]' ubound='[2]'>
																					<elemproto>
																						<_NAME_IN_ATTRIBUTE_ name='' classname='VIParameter' structureflags='0'/>
																					</elemproto>
																					<value>
																						<VIParameter typename='VIParameter' xsi:type='VIParameter' name='sequence context'>
																							<subprops>
																								<Label classname='Str'>
																									<value>sequence context</value>
																								</Label>
																								<Caption classname='Str'>
																									<value/>
																								</Caption>
																								<ArgVal classname='ExprValue'>
																									<value>ThisContext</value>
																								</ArgVal>
																								<ArgDisplayVal classname='ExprValue'>
																									<value/>
																								</ArgDisplayVal>
																								<Type classname='Num'>
																									<value>4</value>
																								</Type>
																								<WireRequirement classname='Num'>
																									<value>0</value>
																								</WireRequirement>
																								<ArrayType classname='Num'>
																									<value>50</value>
																								</ArrayType>
																								<DefaultArraySize classname='Str'>
																									<value>[]</value>
																								</DefaultArraySize>
																								<ClusterType classname='Num'>
																									<value>20</value>
																								</ClusterType>
																								<NumType classname='Num'>
																									<value>7</value>
																								</NumType>
																								<ReferenceType classname='Num'>
																									<value>0</value>
																								</ReferenceType>
																								<StrPass classname='Num'>
																									<value>0</value>
																								</StrPass>
																								<DisplayType classname='Str'>
																									<value>Object Reference</value>
																								</DisplayType>
																								<UseDefaultValues classname='Bool'>
																									<value>false</value>
																								</UseDefaultValues>
																								<PartiallySpecified classname='Bool'>
																									<value>false</value>
																								</PartiallySpecified>
																								<ArrayClusterEls classname='Objs'>
																									<value lbound='[0]' ubound='[]'/>
																								</ArrayClusterEls>
																								<AdditionalResult classname='LabVIEWParameterResult'>
																									<subprops>
																										<Condition classname='ExprValue'>
																											<value/>
																										</Condition>
																										<Flags classname='Num'>
																											<value>8192</value>
																										</Flags>
																										<CheckedState classname='Num'>
																											<value>1</value>
																										</CheckedState>
																									</subprops>
																								</AdditionalResult>
																								<Direction classname='Num'>
																									<value>0</value>
																								</Direction>
																								<ConnectorNumber classname='Num'>
																									<value>11</value>
																								</ConnectorNumber>
																								<LegacyClusterType classname='Num'>
																									<value>0</value>
																								</LegacyClusterType>
																							</subprops>
																						</VIParameter>
																					</value>
																					<value>
																						<VIParameter typename='VIParameter' xsi:type='VIParameter' name='error in'>
																							<subprops>
																								<Label classname='Str'>
																									<value>error in</value>
																								</Label>
																								<Caption classname='Str'>
																									<value/>
																								</Caption>
																								<ArgVal classname='ExprValue'>
																									<value/>
																								</ArgVal>
																								<ArgDisplayVal classname='ExprValue'>
																									<value/>
																								</ArgDisplayVal>
																								<Type classname='Num'>
																									<value>3</value>
																								</Type>
																								<WireRequirement classname='Num'>
																									<value>1</value>
																								</WireRequirement>
																								<ArrayType classname='Num'>
																									<value>50</value>
																								</ArrayType>
																								<DefaultArraySize classname='Str'>
																									<value>[]</value>
																								</DefaultArraySize>
																								<ClusterType classname='Num'>
																									<value>20</value>
																								</ClusterType>
																								<NumType classname='Num'>
																									<value>7</value>
																								</NumType>
																								<ReferenceType classname='Num'>
																									<value>0</value>
																								</ReferenceType>
																								<StrPass classname='Num'>
																									<value>0</value>
																								</StrPass>
																								<DisplayType classname='Str'>
																									<value>Container</value>
																								</DisplayType>
																								<UseDefaultValues classname='Bool'>
																									<value>true</value>
																								</UseDefaultValues>
																								<PartiallySpecified classname='Bool'>
																									<value>false</value>
																								</PartiallySpecified>
																								<ArrayClusterEls classname='Objs'>
																									<value lbound='[0]' ubound='[2]'>
																										<value>
																											<VIParameterElement typename='VIParameterElement' xsi:type='VIParameterElement' name='status'>
																												<subprops>
																													<Label classname='Str'>
																														<value>status</value>
																													</Label>
																													<Caption classname='Str'>
																														<value/>
																													</Caption>
																													<ArgVal classname='ExprValue'>
																														<value>False</value>
																													</ArgVal>
																													<ArgDisplayVal classname='ExprValue'>
																														<value/>
																													</ArgDisplayVal>
																													<Type classname='Num'>
																														<value>2</value>
																													</Type>
																													<WireRequirement classname='Num'>
																														<value>1</value>
																													</WireRequirement>
																													<ArrayType classname='Num'>
																														<value>50</value>
																													</ArrayType>
																													<DefaultArraySize classname='Str'>
																														<value>[]</value>
																													</DefaultArraySize>
																													<ClusterType classname='Num'>
																														<value>20</value>
																													</ClusterType>
																													<NumType classname='Num'>
																														<value>7</value>
																													</NumType>
																													<ReferenceType classname='Num'>
																														<value>0</value>
																													</ReferenceType>
																													<StrPass classname='Num'>
																														<value>0</value>
																													</StrPass>
																													<DisplayType classname='Str'>
																														<value>Boolean</value>
																													</DisplayType>
																													<UseDefaultValues classname='Bool'>
																														<value>true</value>
																													</UseDefaultValues>
																													<PartiallySpecified classname='Bool'>
																														<value>false</value>
																													</PartiallySpecified>
																													<ArrayClusterEls classname='Objs'>
																														<value lbound='[0]' ubound='[]'/>
																													</ArrayClusterEls>
																													<AdditionalResult classname='LabVIEWParameterResult'>
																														<subprops>
																															<Condition classname='ExprValue'>
																																<value/>
																															</Condition>
																															<Flags classname='Num'>
																																<value>8192</value>
																															</Flags>
																															<CheckedState classname='Num'>
																																<value>1</value>
																															</CheckedState>
																														</subprops>
																													</AdditionalResult>
																												</subprops>
																											</VIParameterElement>
																										</value>
																										<value>
																											<VIParameterElement typename='VIParameterElement' xsi:type='VIParameterElement' name='code'>
																												<subprops>
																													<Label classname='Str'>
																														<value>code</value>
																													</Label>
																													<Caption classname='Str'>
																														<value/>
																													</Caption>
																													<ArgVal classname='ExprValue'>
																														<value>0</value>
																													</ArgVal>
																													<ArgDisplayVal classname='ExprValue'>
																														<value/>
																													</ArgDisplayVal>
																													<Type classname='Num'>
																														<value>0</value>
																													</Type>
																													<WireRequirement classname='Num'>
																														<value>1</value>
																													</WireRequirement>
																													<ArrayType classname='Num'>
																														<value>50</value>
																													</ArrayType>
																													<DefaultArraySize classname='Str'>
																														<value>[]</value>
																													</DefaultArraySize>
																													<ClusterType classname='Num'>
																														<value>20</value>
																													</ClusterType>
																													<NumType classname='Num'>
																														<value>4</value>
																													</NumType>
																													<ReferenceType classname='Num'>
																														<value>0</value>
																													</ReferenceType>
																													<StrPass classname='Num'>
																														<value>0</value>
																													</StrPass>
																													<DisplayType classname='Str'>
																														<value>Number (I32)</value>
																													</DisplayType>
																													<UseDefaultValues classname='Bool'>
																														<value>true</value>
																													</UseDefaultValues>
																													<PartiallySpecified classname='Bool'>
																														<value>false</value>
																													</PartiallySpecified>
																													<ArrayClusterEls classname='Objs'>
																														<value lbound='[0]' ubound='[]'/>
																													</ArrayClusterEls>
																													<AdditionalResult classname='LabVIEWParameterResult'>
																														<subprops>
																															<Condition classname='ExprValue'>
																																<value/>
																															</Condition>
																															<Flags classname='Num'>
																																<value>8192</value>
																															</Flags>
																															<CheckedState classname='Num'>
																																<value>1</value>
																															</CheckedState>
																														</subprops>
																													</AdditionalResult>
																												</subprops>
																											</VIParameterElement>
																										</value>
																										<value>
																											<VIParameterElement typename='VIParameterElement' xsi:type='VIParameterElement' name='source'>
																												<subprops>
																													<Label classname='Str'>
																														<value>source</value>
																													</Label>
																													<Caption classname='Str'>
																														<value/>
																													</Caption>
																													<ArgVal classname='ExprValue'>
																														<value>""</value>
																													</ArgVal>
																													<ArgDisplayVal classname='ExprValue'>
																														<value/>
																													</ArgDisplayVal>
																													<Type classname='Num'>
																														<value>1</value>
																													</Type>
																													<WireRequirement classname='Num'>
																														<value>1</value>
																													</WireRequirement>
																													<ArrayType classname='Num'>
																														<value>50</value>
																													</ArrayType>
																													<DefaultArraySize classname='Str'>
																														<value>[]</value>
																													</DefaultArraySize>
																													<ClusterType classname='Num'>
																														<value>20</value>
																													</ClusterType>
																													<NumType classname='Num'>
																														<value>7</value>
																													</NumType>
																													<ReferenceType classname='Num'>
																														<value>0</value>
																													</ReferenceType>
																													<StrPass classname='Num'>
																														<value>0</value>
																													</StrPass>
																													<DisplayType classname='Str'>
																														<value>ASCII String</value>
																													</DisplayType>
																													<UseDefaultValues classname='Bool'>
																														<value>true</value>
																													</UseDefaultValues>
																													<PartiallySpecified classname='Bool'>
																														<value>false</value>
																													</PartiallySpecified>
																													<ArrayClusterEls classname='Objs'>
																														<value lbound='[0]' ubound='[]'/>
																													</ArrayClusterEls>
																													<AdditionalResult classname='LabVIEWParameterResult'>
																														<subprops>
																															<Condition classname='ExprValue'>
																																<value/>
																															</Condition>
																															<Flags classname='Num'>
																																<value>8192</value>
																															</Flags>
																															<CheckedState classname='Num'>
																																<value>1</value>
																															</CheckedState>
																														</subprops>
																													</AdditionalResult>
																												</subprops>
																											</VIParameterElement>
																										</value>
																									</value>
																								</ArrayClusterEls>
																								<AdditionalResult classname='LabVIEWParameterResult'>
																									<subprops>
																										<Condition classname='ExprValue'>
																											<value/>
																										</Condition>
																										<Flags classname='Num'>
																											<value>8192</value>
																										</Flags>
																										<CheckedState classname='Num'>
																											<value>1</value>
																										</CheckedState>
																									</subprops>
																								</AdditionalResult>
																								<Direction classname='Num'>
																									<value>0</value>
																								</Direction>
																								<ConnectorNumber classname='Num'>
																									<value>8</value>
																								</ConnectorNumber>
																								<LegacyClusterType classname='Num'>
																									<value>0</value>
																								</LegacyClusterType>
																							</subprops>
																						</VIParameter>
																					</value>
																					<value>
																						<VIParameter typename='VIParameter' xsi:type='VIParameter' name='error out'>
																							<subprops>
																								<Label classname='Str'>
																									<value>error out</value>
																								</Label>
																								<Caption classname='Str'>
																									<value/>
																								</Caption>
																								<ArgVal classname='ExprValue'>
																									<value>Step.Result.Error</value>
																								</ArgVal>
																								<ArgDisplayVal classname='ExprValue'>
																									<value/>
																								</ArgDisplayVal>
																								<Type classname='Num'>
																									<value>3</value>
																								</Type>
																								<WireRequirement classname='Num'>
																									<value>1</value>
																								</WireRequirement>
																								<ArrayType classname='Num'>
																									<value>50</value>
																								</ArrayType>
																								<DefaultArraySize classname='Str'>
																									<value>[]</value>
																								</DefaultArraySize>
																								<ClusterType classname='Num'>
																									<value>20</value>
																								</ClusterType>
																								<NumType classname='Num'>
																									<value>7</value>
																								</NumType>
																								<ReferenceType classname='Num'>
																									<value>0</value>
																								</ReferenceType>
																								<StrPass classname='Num'>
																									<value>0</value>
																								</StrPass>
																								<DisplayType classname='Str'>
																									<value>Container</value>
																								</DisplayType>
																								<UseDefaultValues classname='Bool'>
																									<value>false</value>
																								</UseDefaultValues>
																								<PartiallySpecified classname='Bool'>
																									<value>false</value>
																								</PartiallySpecified>
																								<ArrayClusterEls classname='Objs'>
																									<value lbound='[0]' ubound='[2]'>
																										<value>
																											<VIParameterElement typename='VIParameterElement' xsi:type='VIParameterElement' name='status'>
																												<subprops>
																													<Label classname='Str'>
																														<value>status</value>
																													</Label>
																													<Caption classname='Str'>
																														<value/>
																													</Caption>
																													<ArgVal classname='ExprValue'>
																														<value>Step.Result.Error.Occurred</value>
																													</ArgVal>
																													<ArgDisplayVal classname='ExprValue'>
																														<value/>
																													</ArgDisplayVal>
																													<Type classname='Num'>
																														<value>2</value>
																													</Type>
																													<WireRequirement classname='Num'>
																														<value>1</value>
																													</WireRequirement>
																													<ArrayType classname='Num'>
																														<value>50</value>
																													</ArrayType>
																													<DefaultArraySize classname='Str'>
																														<value>[]</value>
																													</DefaultArraySize>
																													<ClusterType classname='Num'>
																														<value>20</value>
																													</ClusterType>
																													<NumType classname='Num'>
																														<value>7</value>
																													</NumType>
																													<ReferenceType classname='Num'>
																														<value>0</value>
																													</ReferenceType>
																													<StrPass classname='Num'>
																														<value>0</value>
																													</StrPass>
																													<DisplayType classname='Str'>
																														<value>Boolean</value>
																													</DisplayType>
																													<UseDefaultValues classname='Bool'>
																														<value>false</value>
																													</UseDefaultValues>
																													<PartiallySpecified classname='Bool'>
																														<value>false</value>
																													</PartiallySpecified>
																													<ArrayClusterEls classname='Objs'>
																														<value lbound='[0]' ubound='[]'/>
																													</ArrayClusterEls>
																													<AdditionalResult classname='LabVIEWParameterResult'>
																														<subprops>
																															<Condition classname='ExprValue'>
																																<value/>
																															</Condition>
																															<Flags classname='Num'>
																																<value>8192</value>
																															</Flags>
																															<CheckedState classname='Num'>
																																<value>1</value>
																															</CheckedState>
																														</subprops>
																													</AdditionalResult>
																												</subprops>
																											</VIParameterElement>
																										</value>
																										<value>
																											<VIParameterElement typename='VIParameterElement' xsi:type='VIParameterElement' name='code'>
																												<subprops>
																													<Label classname='Str'>
																														<value>code</value>
																													</Label>
																													<Caption classname='Str'>
																														<value/>
																													</Caption>
																													<ArgVal classname='ExprValue'>
																														<value>Step.Result.Error.Code</value>
																													</ArgVal>
																													<ArgDisplayVal classname='ExprValue'>
																														<value/>
																													</ArgDisplayVal>
																													<Type classname='Num'>
																														<value>0</value>
																													</Type>
																													<WireRequirement classname='Num'>
																														<value>1</value>
																													</WireRequirement>
																													<ArrayType classname='Num'>
																														<value>50</value>
																													</ArrayType>
																													<DefaultArraySize classname='Str'>
																														<value>[]</value>
																													</DefaultArraySize>
																													<ClusterType classname='Num'>
																														<value>20</value>
																													</ClusterType>
																													<NumType classname='Num'>
																														<value>4</value>
																													</NumType>
																													<ReferenceType classname='Num'>
																														<value>0</value>
																													</ReferenceType>
																													<StrPass classname='Num'>
																														<value>0</value>
																													</StrPass>
																													<DisplayType classname='Str'>
																														<value>Number (I32)</value>
																													</DisplayType>
																													<UseDefaultValues classname='Bool'>
																														<value>false</value>
																													</UseDefaultValues>
																													<PartiallySpecified classname='Bool'>
																														<value>false</value>
																													</PartiallySpecified>
																													<ArrayClusterEls classname='Objs'>
																														<value lbound='[0]' ubound='[]'/>
																													</ArrayClusterEls>
																													<AdditionalResult classname='LabVIEWParameterResult'>
																														<subprops>
																															<Condition classname='ExprValue'>
																																<value/>
																															</Condition>
																															<Flags classname='Num'>
																																<value>8192</value>
																															</Flags>
																															<CheckedState classname='Num'>
																																<value>1</value>
																															</CheckedState>
																														</subprops>
																													</AdditionalResult>
																												</subprops>
																											</VIParameterElement>
																										</value>
																										<value>
																											<VIParameterElement typename='VIParameterElement' xsi:type='VIParameterElement' name='source'>
																												<subprops>
																													<Label classname='Str'>
																														<value>source</value>
																													</Label>
																													<Caption classname='Str'>
																														<value/>
																													</Caption>
																													<ArgVal classname='ExprValue'>
																														<value>Step.Result.Error.Msg</value>
																													</ArgVal>
																													<ArgDisplayVal classname='ExprValue'>
																														<value/>
																													</ArgDisplayVal>
																													<Type classname='Num'>
																														<value>1</value>
																													</Type>
																													<WireRequirement classname='Num'>
																														<value>1</value>
																													</WireRequirement>
																													<ArrayType classname='Num'>
																														<value>50</value>
																													</ArrayType>
																													<DefaultArraySize classname='Str'>
																														<value>[]</value>
																													</DefaultArraySize>
																													<ClusterType classname='Num'>
																														<value>20</value>
																													</ClusterType>
																													<NumType classname='Num'>
																														<value>7</value>
																													</NumType>
																													<ReferenceType classname='Num'>
																														<value>0</value>
																													</ReferenceType>
																													<StrPass classname='Num'>
																														<value>0</value>
																													</StrPass>
																													<DisplayType classname='Str'>
																														<value>ASCII String</value>
																													</DisplayType>
																													<UseDefaultValues classname='Bool'>
																														<value>false</value>
																													</UseDefaultValues>
																													<PartiallySpecified classname='Bool'>
																														<value>false</value>
																													</PartiallySpecified>
																													<ArrayClusterEls classname='Objs'>
																														<value lbound='[0]' ubound='[]'/>
																													</ArrayClusterEls>
																													<AdditionalResult classname='LabVIEWParameterResult'>
																														<subprops>
																															<Condition classname='ExprValue'>
																																<value/>
																															</Condition>
																															<Flags classname='Num'>
																																<value>8192</value>
																															</Flags>
																															<CheckedState classname='Num'>
																																<value>1</value>
																															</CheckedState>
																														</subprops>
																													</AdditionalResult>
																												</subprops>
																											</VIParameterElement>
																										</value>
																									</value>
																								</ArrayClusterEls>
																								<AdditionalResult classname='LabVIEWParameterResult'>
																									<subprops>
																										<Condition classname='ExprValue'>
																											<value/>
																										</Condition>
																										<Flags classname='Num'>
																											<value>8192</value>
																										</Flags>
																										<CheckedState classname='Num'>
																											<value>1</value>
																										</CheckedState>
																									</subprops>
																								</AdditionalResult>
																								<Direction classname='Num'>
																									<value>1</value>
																								</Direction>
																								<ConnectorNumber classname='Num'>
																									<value>0</value>
																								</ConnectorNumber>
																								<LegacyClusterType classname='Num'>
																									<value>2</value>
																								</LegacyClusterType>
																							</subprops>
																						</VIParameter>
																					</value>
																				</value>
																			</Parms>
																			<NodeProperties classname='Objs'>
																				<value lbound='[0]' ubound='[]'>
																					<elemproto>
																						<_NAME_IN_ATTRIBUTE_ name='' classname='LVNodeProperty' structureflags='0'/>
																					</elemproto>
																				</value>
																			</NodeProperties>
																		</subprops>
																	</ViCall>
																</subprops>
															</SData>
															<PreCond classname='ExprValue'>
																<value/>
															</PreCond>
															<LoadOpt classname='Str'>
																<value>PreloadWhenExecuted</value>
															</LoadOpt>
															<UnloadOpt classname='Str'>
																<value>UnloadWithFile</value>
															</UnloadOpt>
															<Mode classname='Str'>
																<value>Normal</value>
															</Mode>
															<WindowActivation classname='Str'>
																<value>None</value>
															</WindowActivation>
															<ResultOption classname='Num'>
																<value>0</value>
															</ResultOption>
															<StepFCSeqF classname='Bool'>
																<value>true</value>
															</StepFCSeqF>
															<IgnoreRTE classname='Bool'>
																<value>false</value>
															</IgnoreRTE>
															<UseMutex classname='Bool'>
																<value>false</value>
															</UseMutex>
															<MutexNameOrRef classname='ExprValue'>
																<value/>
															</MutexNameOrRef>
															<BatchSyncOpt classname='Num'>
																<value>0</value>
															</BatchSyncOpt>
															<SwitchEnabled classname='Bool'>
																<value>false</value>
															</SwitchEnabled>
															<VirtualDeviceName classname='ExprValue'>
																<value/>
															</VirtualDeviceName>
															<SwitchOperation classname='Num'>
																<value>1</value>
															</SwitchOperation>
															<RouteGroupConnect classname='ExprValue'>
																<value/>
															</RouteGroupConnect>
															<RouteGroupDisconnect classname='ExprValue'>
																<value/>
															</RouteGroupDisconnect>
															<MulticonnectMode classname='Num'>
																<value>1</value>
															</MulticonnectMode>
															<OperationOrder classname='Num'>
																<value>2</value>
															</OperationOrder>
															<ConnectionLifetime classname='Num'>
																<value>0</value>
															</ConnectionLifetime>
															<WaitForDebounce classname='Bool'>
																<value>true</value>
															</WaitForDebounce>
															<PassAct classname='Str'>
																<value>Next</value>
															</PassAct>
															<FailAct classname='Str'>
																<value>Next</value>
															</FailAct>
															<PassActTarget classname='ExprValue'>
																<value/>
															</PassActTarget>
															<FailActTarget classname='ExprValue'>
																<value/>
															</FailActTarget>
															<CustExpr classname='ExprValue'>
																<value/>
															</CustExpr>
															<CustTrueAct classname='Str'>
																<value>Next</value>
															</CustTrueAct>
															<CustFalseAct classname='Str'>
																<value>Next</value>
															</CustFalseAct>
															<CustTrueActTarget classname='ExprValue'>
																<value/>
															</CustTrueActTarget>
															<CustFalseActTarget classname='ExprValue'>
																<value/>
															</CustFalseActTarget>
															<LoopType classname='Str'>
																<value>NoLooping</value>
															</LoopType>
															<LoopWhile classname='ExprValue'>
																<value/>
															</LoopWhile>
															<LoopStatus classname='ExprValue'>
																<value/>
															</LoopStatus>
															<LoopIncrement classname='ExprValue'>
																<value>RunState.LoopIndex += 1</value>
															</LoopIncrement>
															<LoopInitialize classname='ExprValue'>
																<value>RunState.LoopIndex = 0</value>
															</LoopInitialize>
															<LoopOpt classname='Num'>
																<value>0</value>
															</LoopOpt>
															<PreExpr classname='ExprValue'>
																<value/>
															</PreExpr>
															<PostExpr classname='ExprValue'>
																<value/>
															</PostExpr>
															<StatusExpr classname='ExprValue'>
																<value/>
															</StatusExpr>
															<CanSpecifyModule classname='Bool'>
																<value>true</value>
															</CanSpecifyModule>
															<CanEditCode classname='Bool'>
																<value>true</value>
															</CanEditCode>
															<CanEditModulePrototype classname='Bool'>
																<value>true</value>
															</CanEditModulePrototype>
															<CanEditParameterAdditionalResults classname='Bool'>
																<value>true</value>
															</CanEditParameterAdditionalResults>
															<PrecondIntExe classname='Num'>
																<value>0</value>
															</PrecondIntExe>
															<CustomResults classname='Objs'>
																<value lbound='[0]' ubound='[]'>
																	<elemproto>
																		<_NAME_IN_ATTRIBUTE_ name='' classname='CustomResult'>
																			<subprops>
																				<Name classname='ExprValue'>
																					<value/>
																				</Name>
																				<ValueToLog classname='ExprValue'>
																					<value/>
																				</ValueToLog>
																				<Condition classname='ExprValue'>
																					<value/>
																				</Condition>
																				<Flags classname='Num'>
																					<value>8192</value>
																				</Flags>
																				<CheckedState classname='Num'>
																					<value>2</value>
																				</CheckedState>
																				<Type classname='PropertyObjectType'>
																					<subprops>
																						<ValueType classname='Num'>
																							<value>3</value>
																						</ValueType>
																						<IsObject classname='Bool'>
																							<value>true</value>
																						</IsObject>
																						<TypeName classname='Str'>
																							<value/>
																						</TypeName>
																						<ElementType classname='Objs'>
																							<value lbound='[0]' ubound='[]'/>
																						</ElementType>
																						<ArrayDimensions classname='ArrayDimensions'>
																							<subprops>
																								<LowerBounds classname='Nums'>
																									<value lbound='[0]' ubound='[]'/>
																								</LowerBounds>
																								<UpperBounds classname='Nums'>
																									<value lbound='[0]' ubound='[]'/>
																								</UpperBounds>
																							</subprops>
																						</ArrayDimensions>
																						<Representation classname='Num'>
																							<value>1</value>
																						</Representation>
																						<ClassName classname='Str'>
																							<value/>
																						</ClassName>
																					</subprops>
																				</Type>
																				<Elements classname='Objs'>
																					<value lbound='[0]' ubound='[]'/>
																				</Elements>
																				<IsAnyType classname='Bool'>
																					<value>true</value>
																				</IsAnyType>
																			</subprops>
																		</_NAME_IN_ATTRIBUTE_>
																	</elemproto>
																</value>
															</CustomResults>
															<AdditionalResultsHints classname='Objs'>
																<value lbound='[0]' ubound='[]'>
																	<elemproto>
																		<_NAME_IN_ATTRIBUTE_ name='' classname='CustomResult'>
																			<subprops>
																				<Name classname='ExprValue'>
																					<value/>
																				</Name>
																				<ValueToLog classname='ExprValue'>
																					<value/>
																				</ValueToLog>
																				<Condition classname='ExprValue'>
																					<value/>
																				</Condition>
																				<Flags classname='Num'>
																					<value>8192</value>
																				</Flags>
																				<CheckedState classname='Num'>
																					<value>2</value>
																				</CheckedState>
																				<Type classname='PropertyObjectType'>
																					<subprops>
																						<ValueType classname='Num'>
																							<value>3</value>
																						</ValueType>
																						<IsObject classname='Bool'>
																							<value>true</value>
																						</IsObject>
																						<TypeName classname='Str'>
																							<value/>
																						</TypeName>
																						<ElementType classname='Objs'>
																							<value lbound='[0]' ubound='[]'/>
																						</ElementType>
																						<ArrayDimensions classname='ArrayDimensions'>
																							<subprops>
																								<LowerBounds classname='Nums'>
																									<value lbound='[0]' ubound='[]'/>
																								</LowerBounds>
																								<UpperBounds classname='Nums'>
																									<value lbound='[0]' ubound='[]'/>
																								</UpperBounds>
																							</subprops>
																						</ArrayDimensions>
																						<Representation classname='Num'>
																							<value>1</value>
																						</Representation>
																						<ClassName classname='Str'>
																							<value/>
																						</ClassName>
																					</subprops>
																				</Type>
																				<Elements classname='Objs'>
																					<value lbound='[0]' ubound='[]'/>
																				</Elements>
																				<IsAnyType classname='Bool'>
																					<value>true</value>
																				</IsAnyType>
																			</subprops>
																		</_NAME_IN_ATTRIBUTE_>
																	</elemproto>
																</value>
															</AdditionalResultsHints>
														</subprops>
													</TS>
													<Result classname='Obj'>
														<subprops>
															<Error classname='Obj'>
																<subprops>
																	<Code classname='Num'>
																		<value>0</value>
																	</Code>
																	<Msg classname='Str'>
																		<value/>
																	</Msg>
																	<Occurred classname='Bool'>
																		<value>false</value>
																	</Occurred>
																</subprops>
															</Error>
															<Status classname='Str'>
																<value/>
															</Status>
															<ReportText classname='Str'>
																<value/>
															</ReportText>
															<Common classname='Obj'/>
														</subprops>
													</Result>
												</subprops>
											</Step>
										</value>
									</value>
								</Setup>
								<Cleanup classname='Objs' valueflags='4194304'>
									<value lbound='[0]' ubound='[0]'>
										<value>
											<Step typename='Action' xsi:type='Action' name='Unregister and close NI-DCPower sessions'>
												<subprops>
													<TS classname='Obj'>
														<subprops>
															<Id classname='Str'>
																<value>ID#:mOwxmKjd7RGiN0xEW1WgXC</value>
															</Id>
															<Icon classname='Str'>
																<value/>
															</Icon>
															<SData typename='FlexGStepAdditions' xsi:type='FlexGStepAdditions' classname='FGModule'>
																<subprops>
																	<ViCall classname='VICall'>
																		<subprops>
																			<CallType classname='Num'>
																				<value>0</value>
																			</CallType>
																			<ClassPath classname='PathValue'>
																				<value/>
																			</ClassPath>
																			<ProjectPath classname='PathValue'>
																				<value>NIDCPowerSourceDCVoltage.lvproj</value>
																			</ProjectPath>
																			<RemoteProjectPath classname='PathValue'>
																				<value/>
																			</RemoteProjectPath>
																			<VIPath classname='PathValue'>
																				<value>My Computer\NIDCPowerSourceDCVoltage.lvlib\TestStand Code Modules\Unregister and Close Sessions.vi</value>
																			</VIPath>
																			<Namespace classname='Str'>
																				<value>NIDCPowerSourceDCVoltage.lvlib</value>
																			</Namespace>
																			<RemoteVIPath classname='PathValue'>
																				<value/>
																			</RemoteVIPath>
																			<CallName classname='Str'>
																				<value/>
																			</CallName>
																			<VIType classname='Num'>
																				<value>0</value>
																			</VIType>
																			<ShowFrnPnl classname='Bool'>
																				<value>false</value>
																			</ShowFrnPnl>
																			<VIDescription classname='Str'>
																				<value/>
																			</VIDescription>
																			<TDChecksum classname='Num'>
																				<value>1801503858</value>
																			</TDChecksum>
																			<NodeLibraryName classname='Str'>
																				<value/>
																			</NodeLibraryName>
																			<NodeLibraryGenericTypeName classname='Str'>
																				<value/>
																			</NodeLibraryGenericTypeName>
																			<NodeClassDataName classname='Str'>
																				<value/>
																			</NodeClassDataName>
																			<NodeUsesDataValueReference classname='Bool'>
																				<value>false</value>
																			</NodeUsesDataValueReference>
																			<NodeIgnoresInternalErrors classname='Bool'>
																				<value>false</value>
																			</NodeIgnoresInternalErrors>
																			<NodeOperationMode classname='Num'>
																				<value>0</value>
																			</NodeOperationMode>
																			<AutoDetectLVRT classname='Bool'>
																				<value>false</value>
																			</AutoDetectLVRT>
																			<RemoteHost classname='ExprValue'>
																				<value/>
																			</RemoteHost>
																			<RemoteHostByExpr classname='Bool'>
																				<value>false</value>
																			</RemoteHostByExpr>
																			<PrototypeFlags classname='Num'>
																				<value>0</value>
																			</PrototypeFlags>
																			<VI classname='Str'>
																				<value/>
																			</VI>
																			<OverrideBinaryClassPath classname='PathValue'>
																				<value/>
																			</OverrideBinaryClassPath>
																			<OverrideBinaryVIPath classname='PathValue'>
																				<value/>
																			</OverrideBinaryVIPath>
																			<OverrideBinaryProjectPath classname='PathValue'>
																				<value/>
																			</OverrideBinaryProjectPath>
																			<OverrideBinaryNamespace classname='Str'>
																				<value/>
																			</OverrideBinaryNamespace>
																			<OverrideModuleOptions classname='Num'>
																				<value>0</value>
																			</OverrideModuleOptions>
																			<BuildSpecificationName classname='Str'>
																				<value/>
																			</BuildSpecificationName>
																			<OverrideBinaryVIChecksum classname='Num'>
																				<value>-1</value>
																			</OverrideBinaryVIChecksum>
																			<ArrayParametersMatchLVArrayDimenions classname='Bool'>
																				<value>false</value>
																			</ArrayParametersMatchLVArrayDimenions>
																			<Parms classname='Objs'>
																				<value lbound='[0]' ubound='[1]'>
																					<elemproto>
																						<_NAME_IN_ATTRIBUTE_ name='' classname='VIParameter' structureflags='0'/>
																					</elemproto>
																					<value>
																						<VIParameter typename='VIParameter' xsi:type='VIParameter' name='error in'>
																							<subprops>
																								<Label classname='Str'>
																									<value>error in</value>
																								</Label>
																								<Caption classname='Str'>
																									<value/>
																								</Caption>
																								<ArgVal classname='ExprValue'>
																									<value/>
																								</ArgVal>
																								<ArgDisplayVal classname='ExprValue'>
																									<value/>
																								</ArgDisplayVal>
																								<Type classname='Num'>
																									<value>3</value>
																								</Type>
																								<WireRequirement classname='Num'>
																									<value>1</value>
																								</WireRequirement>
																								<ArrayType classname='Num'>
																									<value>50</value>
																								</ArrayType>
																								<DefaultArraySize classname='Str'>
																									<value>[]</value>
																								</DefaultArraySize>
																								<ClusterType classname='Num'>
																									<value>20</value>
																								</ClusterType>
																								<NumType classname='Num'>
																									<value>7</value>
																								</NumType>
																								<ReferenceType classname='Num'>
																									<value>0</value>
																								</ReferenceType>
																								<StrPass classname='Num'>
																									<value>0</value>
																								</StrPass>
																								<DisplayType classname='Str'>
																									<value>Container</value>
																								</DisplayType>
																								<UseDefaultValues classname='Bool'>
																									<value>true</value>
																								</UseDefaultValues>
																								<PartiallySpecified classname='Bool'>
																									<value>false</value>
																								</PartiallySpecified>
																								<ArrayClusterEls classname='Objs'>
																									<value lbound='[0]' ubound='[2]'>
																										<value>
																											<VIParameterElement typename='VIParameterElement' xsi:type='VIParameterElement' name='status'>
																												<subprops>
																													<Label classname='Str'>
																														<value>status</value>
																													</Label>
																													<Caption classname='Str'>
																														<value/>
																													</Caption>
																													<ArgVal classname='ExprValue'>
																														<value>False</value>
																													</ArgVal>
																													<ArgDisplayVal classname='ExprValue'>
																														<value/>
																													</ArgDisplayVal>
																													<Type classname='Num'>
																														<value>2</value>
																													</Type>
																													<WireRequirement classname='Num'>
																														<value>1</value>
																													</WireRequirement>
																													<ArrayType classname='Num'>
																														<value>50</value>
																													</ArrayType>
																													<DefaultArraySize classname='Str'>
																														<value>[]</value>
																													</DefaultArraySize>
																													<ClusterType classname='Num'>
																														<value>20</value>
																													</ClusterType>
																													<NumType classname='Num'>
																														<value>7</value>
																													</NumType>
																													<ReferenceType classname='Num'>
																														<value>0</value>
																													</ReferenceType>
																													<StrPass classname='Num'>
																														<value>0</value>
																													</StrPass>
																													<DisplayType classname='Str'>
																														<value>Boolean</value>
																													</DisplayType>
																													<UseDefaultValues classname='Bool'>
																														<value>true</value>
																													</UseDefaultValues>
																													<PartiallySpecified classname='Bool'>
																														<value>false</value>
																													</PartiallySpecified>
																													<ArrayClusterEls classname='Objs'>
																														<value lbound='[0]' ubound='[]'/>
																													</ArrayClusterEls>
																													<AdditionalResult classname='LabVIEWParameterResult'>
																														<subprops>
																															<Condition classname='ExprValue'>
																																<value/>
																															</Condition>
																															<Flags classname='Num'>
																																<value>8192</value>
																															</Flags>
																															<CheckedState classname='Num'>
																																<value>1</value>
																															</CheckedState>
																														</subprops>
																													</AdditionalResult>
																												</subprops>
																											</VIParameterElement>
																										</value>
																										<value>
																											<VIParameterElement typename='VIParameterElement' xsi:type='VIParameterElement' name='code'>
																												<subprops>
																													<Label classname='Str'>
																														<value>code</value>
																													</Label>
																													<Caption classname='Str'>
																														<value/>
																													</Caption>
																													<ArgVal classname='ExprValue'>
																														<value>0</value>
																													</ArgVal>
																													<ArgDisplayVal classname='ExprValue'>
																														<value/>
																													</ArgDisplayVal>
																													<Type classname='Num'>
																														<value>0</value>
																													</Type>
																													<WireRequirement classname='Num'>
																														<value>1</value>
																													</WireRequirement>
																													<ArrayType classname='Num'>
																														<value>50</value>
																													</ArrayType>
																													<DefaultArraySize classname='Str'>
																														<value>[]</value>
																													</DefaultArraySize>
																													<ClusterType classname='Num'>
																														<value>20</value>
																													</ClusterType>
																													<NumType classname='Num'>
																														<value>4</value>
																													</NumType>
																													<ReferenceType classname='Num'>
																														<value>0</value>
																													</ReferenceType>
																													<StrPass classname='Num'>
																														<value>0</value>
																													</StrPass>
																													<DisplayType classname='Str'>
																														<value>Number (I32)</value>
																													</DisplayType>
																													<UseDefaultValues classname='Bool'>
																														<value>true</value>
																													</UseDefaultValues>
																													<PartiallySpecified classname='Bool'>
																														<value>false</value>
																													</PartiallySpecified>
																													<ArrayClusterEls classname='Objs'>
																														<value lbound='[0]' ubound='[]'/>
																													</ArrayClusterEls>
																													<AdditionalResult classname='LabVIEWParameterResult'>
																														<subprops>
																															<Condition classname='ExprValue'>
																																<value/>
																															</Condition>
																															<Flags classname='Num'>
																																<value>8192</value>
																															</Flags>
																															<CheckedState classname='Num'>
																																<value>1</value>
																															</CheckedState>
																														</subprops>
																													</AdditionalResult>
																												</subprops>
																											</VIParameterElement>
																										</value>
																										<value>
																											<VIParameterElement typename='VIParameterElement' xsi:type='VIParameterElement' name='source'>
																												<subprops>
																													<Label classname='Str'>
																														<value>source</value>
																													</Label>
																													<Caption classname='Str'>
																														<value/>
																													</Caption>
																													<ArgVal classname='ExprValue'>
																														<value>""</value>
																													</ArgVal>
																													<ArgDisplayVal classname='ExprValue'>
																														<value/>
																													</ArgDisplayVal>
																													<Type classname='Num'>
																														<value>1</value>
																													</Type>
																													<WireRequirement classname='Num'>
																														<value>1</value>
																													</WireRequirement>
																													<ArrayType classname='Num'>
																														<value>50</value>
																													</ArrayType>
																													<DefaultArraySize classname='Str'>
																														<value>[]</value>
																													</DefaultArraySize>
																													<ClusterType classname='Num'>
																														<value>20</value>
																													</ClusterType>
																													<NumType classname='Num'>
																														<value>7</value>
																													</NumType>
																													<ReferenceType classname='Num'>
																														<value>0</value>
																													</ReferenceType>
																													<StrPass classname='Num'>
																														<value>0</value>
																													</StrPass>
																													<DisplayType classname='Str'>
																														<value>ASCII String</value>
																													</DisplayType>
																													<UseDefaultValues classname='Bool'>
																														<value>true</value>
																													</UseDefaultValues>
																													<PartiallySpecified classname='Bool'>
																														<value>false</value>
																													</PartiallySpecified>
																													<ArrayClusterEls classname='Objs'>
																														<value lbound='[0]' ubound='[]'/>
																													</ArrayClusterEls>
																													<AdditionalResult classname='LabVIEWParameterResult'>
																														<subprops>
																															<Condition classname='ExprValue'>
																																<value/>
																															</Condition>
																															<Flags classname='Num'>
																																<value>8192</value>
																															</Flags>
																															<CheckedState classname='Num'>
																																<value>1</value>
																															</CheckedState>
																														</subprops>
																													</AdditionalResult>
																												</subprops>
																											</VIParameterElement>
																										</value>
																									</value>
																								</ArrayClusterEls>
																								<AdditionalResult classname='LabVIEWParameterResult'>
																									<subprops>
																										<Condition classname='ExprValue'>
																											<value/>
																										</Condition>
																										<Flags classname='Num'>
																											<value>8192</value>
																										</Flags>
																										<CheckedState classname='Num'>
																											<value>1</value>
																										</CheckedState>
																									</subprops>
																								</AdditionalResult>
																								<Direction classname='Num'>
																									<value>0</value>
																								</Direction>
																								<ConnectorNumber classname='Num'>
																									<value>8</value>
																								</ConnectorNumber>
																								<LegacyClusterType classname='Num'>
																									<value>0</value>
																								</LegacyClusterType>
																							</subprops>
																						</VIParameter>
																					</value>
																					<value>
																						<VIParameter typename='VIParameter' xsi:type='VIParameter' name='error out'>
																							<subprops>
																								<Label classname='Str'>
																									<value>error out</value>
																								</Label>
																								<Caption classname='Str'>
																									<value/>
																								</Caption>
																								<ArgVal classname='ExprValue'>
																									<value>Step.Result.Error</value>
																								</ArgVal>
																								<ArgDisplayVal classname='ExprValue'>
																									<value/>
																								</ArgDisplayVal>
																								<Type classname='Num'>
																									<value>3</value>
																								</Type>
																								<WireRequirement classname='Num'>
																									<value>1</value>
																								</WireRequirement>
																								<ArrayType classname='Num'>
																									<value>50</value>
																								</ArrayType>
																								<DefaultArraySize classname='Str'>
																									<value>[]</value>
																								</DefaultArraySize>
																								<ClusterType classname='Num'>
																									<value>20</value>
																								</ClusterType>
																								<NumType classname='Num'>
																									<value>7</value>
																								</NumType>
																								<ReferenceType classname='Num'>
																									<value>0</value>
																								</ReferenceType>
																								<StrPass classname='Num'>
																									<value>0</value>
																								</StrPass>
																								<DisplayType classname='Str'>
																									<value>Container</value>
																								</DisplayType>
																								<UseDefaultValues classname='Bool'>
																									<value>false</value>
																								</UseDefaultValues>
																								<PartiallySpecified classname='Bool'>
																									<value>false</value>
																								</PartiallySpecified>
																								<ArrayClusterEls classname='Objs'>
																									<value lbound='[0]' ubound='[2]'>
																										<value>
																											<VIParameterElement typename='VIParameterElement' xsi:type='VIParameterElement' name='status'>
																												<subprops>
																													<Label classname='Str'>
																														<value>status</value>
																													</Label>
																													<Caption classname='Str'>
																														<value/>
																													</Caption>
																													<ArgVal classname='ExprValue'>
																														<value>Step.Result.Error.Occurred</value>
																													</ArgVal>
																													<ArgDisplayVal classname='ExprValue'>
																														<value/>
																													</ArgDisplayVal>
																													<Type classname='Num'>
																														<value>2</value>
																													</Type>
																													<WireRequirement classname='Num'>
																														<value>1</value>
																													</WireRequirement>
																													<ArrayType classname='Num'>
																														<value>50</value>
																													</ArrayType>
																													<DefaultArraySize classname='Str'>
																														<value>[]</value>
																													</DefaultArraySize>
																													<ClusterType classname='Num'>
																														<value>20</value>
																													</ClusterType>
																													<NumType classname='Num'>
																														<value>7</value>
																													</NumType>
																													<ReferenceType classname='Num'>
																														<value>0</value>
																													</ReferenceType>
																													<StrPass classname='Num'>
																														<value>0</value>
																													</StrPass>
																													<DisplayType classname='Str'>
																														<value>Boolean</value>
																													</DisplayType>
																													<UseDefaultValues classname='Bool'>
																														<value>false</value>
																													</UseDefaultValues>
																													<PartiallySpecified classname='Bool'>
																														<value>false</value>
																													</PartiallySpecified>
																													<ArrayClusterEls classname='Objs'>
																														<value lbound='[0]' ubound='[]'/>
																													</ArrayClusterEls>
																													<AdditionalResult classname='LabVIEWParameterResult'>
																														<subprops>
																															<Condition classname='ExprValue'>
																																<value/>
																															</Condition>
																															<Flags classname='Num'>
																																<value>8192</value>
																															</Flags>
																															<CheckedState classname='Num'>
																																<value>1</value>
																															</CheckedState>
																														</subprops>
																													</AdditionalResult>
																												</subprops>
																											</VIParameterElement>
																										</value>
																										<value>
																											<VIParameterElement typename='VIParameterElement' xsi:type='VIParameterElement' name='code'>
																												<subprops>
																													<Label classname='Str'>
																														<value>code</value>
																													</Label>
																													<Caption classname='Str'>
																														<value/>
																													</Caption>
																													<ArgVal classname='ExprValue'>
																														<value>Step.Result.Error.Code</value>
																													</ArgVal>
																													<ArgDisplayVal classname='ExprValue'>
																														<value/>
																													</ArgDisplayVal>
																													<Type classname='Num'>
																														<value>0</value>
																													</Type>
																													<WireRequirement classname='Num'>
																														<value>1</value>
																													</WireRequirement>
																													<ArrayType classname='Num'>
																														<value>50</value>
																													</ArrayType>
																													<DefaultArraySize classname='Str'>
																														<value>[]</value>
																													</DefaultArraySize>
																													<ClusterType classname='Num'>
																														<value>20</value>
																													</ClusterType>
																													<NumType classname='Num'>
																														<value>4</value>
																													</NumType>
																													<ReferenceType classname='Num'>
																														<value>0</value>
																													</ReferenceType>
																													<StrPass classname='Num'>
																														<value>0</value>
																													</StrPass>
																													<DisplayType classname='Str'>
																														<value>Number (I32)</value>
																													</DisplayType>
																													<UseDefaultValues classname='Bool'>
																														<value>false</value>
																													</UseDefaultValues>
																													<PartiallySpecified classname='Bool'>
																														<value>false</value>
																													</PartiallySpecified>
																													<ArrayClusterEls classname='Objs'>
																														<value lbound='[0]' ubound='[]'/>
																													</ArrayClusterEls>
																													<AdditionalResult classname='LabVIEWParameterResult'>
																														<subprops>
																															<Condition classname='ExprValue'>
																																<value/>
																															</Condition>
																															<Flags classname='Num'>
																																<value>8192</value>
																															</Flags>
																															<CheckedState classname='Num'>
																																<value>1</value>
																															</CheckedState>
																														</subprops>
																													</AdditionalResult>
																												</subprops>
																											</VIParameterElement>
																										</value>
																										<value>
																											<VIParameterElement typename='VIParameterElement' xsi:type='VIParameterElement' name='source'>
																												<subprops>
																													<Label classname='Str'>
																														<value>source</value>
																													</Label>
																													<Caption classname='Str'>
																														<value/>
																													</Caption>
																													<ArgVal classname='ExprValue'>
																														<value>Step.Result.Error.Msg</value>
																													</ArgVal>
																													<ArgDisplayVal classname='ExprValue'>
																														<value/>
																													</ArgDisplayVal>
																													<Type classname='Num'>
																														<value>1</value>
																													</Type>
																													<WireRequirement classname='Num'>
																														<value>1</value>
																													</WireRequirement>
																													<ArrayType classname='Num'>
																														<value>50</value>
																													</ArrayType>
																													<DefaultArraySize classname='Str'>
																														<value>[]</value>
																													</DefaultArraySize>
																													<ClusterType classname='Num'>
																														<value>20</value>
																													</ClusterType>
																													<NumType classname='Num'>
																														<value>7</value>
																													</NumType>
																													<ReferenceType classname='Num'>
																														<value>0</value>
																													</ReferenceType>
																													<StrPass classname='Num'>
																														<value>0</value>
																													</StrPass>
																													<DisplayType classname='Str'>
																														<value>ASCII String</value>
																													</DisplayType>
																													<UseDefaultValues classname='Bool'>
																														<value>false</value>
																													</UseDefaultValues>
																													<PartiallySpecified classname='Bool'>
																														<value>false</value>
																													</PartiallySpecified>
																													<ArrayClusterEls classname='Objs'>
																														<value lbound='[0]' ubound='[]'/>
																													</ArrayClusterEls>
																													<AdditionalResult classname='LabVIEWParameterResult'>
																														<subprops>
																															<Condition classname='ExprValue'>
																																<value/>
																															</Condition>
																															<Flags classname='Num'>
																																<value>8192</value>
																															</Flags>
																															<CheckedState classname='Num'>
																																<value>1</value>
																															</CheckedState>
																														</subprops>
																													</AdditionalResult>
																												</subprops>
																											</VIParameterElement>
																										</value>
																									</value>
																								</ArrayClusterEls>
																								<AdditionalResult classname='LabVIEWParameterResult'>
																									<subprops>
																										<Condition classname='ExprValue'>
																											<value/>
																										</Condition>
																										<Flags classname='Num'>
																											<value>8192</value>
																										</Flags>
																										<CheckedState classname='Num'>
																											<value>1</value>
																										</CheckedState>
																									</subprops>
																								</AdditionalResult>
																								<Direction classname='Num'>
																									<value>1</value>
																								</Direction>
																								<ConnectorNumber classname='Num'>
																									<value>0</value>
																								</ConnectorNumber>
																								<LegacyClusterType classname='Num'>
																									<value>2</value>
																								</LegacyClusterType>
																							</subprops>
																						</VIParameter>
																					</value>
																				</value>
																			</Parms>
																			<NodeProperties classname='Objs'>
																				<value lbound='[0]' ubound='[]'>
																					<elemproto>
																						<_NAME_IN_ATTRIBUTE_ name='' classname='LVNodeProperty' structureflags='0'/>
																					</elemproto>
																				</value>
																			</NodeProperties>
																		</subprops>
																	</ViCall>
																</subprops>
															</SData>
															<PreCond classname='ExprValue'>
																<value/>
															</PreCond>
															<LoadOpt classname='Str'>
																<value>PreloadWhenExecuted</value>
															</LoadOpt>
															<UnloadOpt classname='Str'>
																<value>UnloadWithFile</value>
															</UnloadOpt>
															<Mode classname='Str'>
																<value>Normal</value>
															</Mode>
															<WindowActivation classname='Str'>
																<value>None</value>
															</WindowActivation>
															<ResultOption classname='Num'>
																<value>0</value>
															</ResultOption>
															<StepFCSeqF classname='Bool'>
																<value>true</value>
															</StepFCSeqF>
															<IgnoreRTE classname='Bool'>
																<value>false</value>
															</IgnoreRTE>
															<UseMutex classname='Bool'>
																<value>false</value>
															</UseMutex>
															<MutexNameOrRef classname='ExprValue'>
																<value/>
															</MutexNameOrRef>
															<BatchSyncOpt classname='Num'>
																<value>0</value>
															</BatchSyncOpt>
															<SwitchEnabled classname='Bool'>
																<value>false</value>
															</SwitchEnabled>
															<VirtualDeviceName classname='ExprValue'>
																<value/>
															</VirtualDeviceName>
															<SwitchOperation classname='Num'>
																<value>1</value>
															</SwitchOperation>
															<RouteGroupConnect classname='ExprValue'>
																<value/>
															</RouteGroupConnect>
															<RouteGroupDisconnect classname='ExprValue'>
																<value/>
															</RouteGroupDisconnect>
															<MulticonnectMode classname='Num'>
																<value>1</value>
															</MulticonnectMode>
															<OperationOrder classname='Num'>
																<value>2</value>
															</OperationOrder>
															<ConnectionLifetime classname='Num'>
																<value>0</value>
															</ConnectionLifetime>
															<WaitForDebounce classname='Bool'>
																<value>true</value>
															</WaitForDebounce>
															<PassAct classname='Str'>
																<value>Next</value>
															</PassAct>
															<FailAct classname='Str'>
																<value>Next</value>
															</FailAct>
															<PassActTarget classname='ExprValue'>
																<value/>
															</PassActTarget>
															<FailActTarget classname='ExprValue'>
																<value/>
															</FailActTarget>
															<CustExpr classname='ExprValue'>
																<value/>
															</CustExpr>
															<CustTrueAct classname='Str'>
																<value>Next</value>
															</CustTrueAct>
															<CustFalseAct classname='Str'>
																<value>Next</value>
															</CustFalseAct>
															<CustTrueActTarget classname='ExprValue'>
																<value/>
															</CustTrueActTarget>
															<CustFalseActTarget classname='ExprValue'>
																<value/>
															</CustFalseActTarget>
															<LoopType classname='Str'>
																<value>NoLooping</value>
															</LoopType>
															<LoopWhile classname='ExprValue'>
																<value/>
															</LoopWhile>
															<LoopStatus classname='ExprValue'>
																<value/>
															</LoopStatus>
															<LoopIncrement classname='ExprValue'>
																<value>RunState.LoopIndex += 1</value>
															</LoopIncrement>
															<LoopInitialize classname='ExprValue'>
																<value>RunState.LoopIndex = 0</value>
															</LoopInitialize>
															<LoopOpt classname='Num'>
																<value>0</value>
															</LoopOpt>
															<PreExpr classname='ExprValue'>
																<value/>
															</PreExpr>
															<PostExpr classname='ExprValue'>
																<value/>
															</PostExpr>
															<StatusExpr classname='ExprValue'>
																<value/>
															</StatusExpr>
															<CanSpecifyModule classname='Bool'>
																<value>true</value>
															</CanSpecifyModule>
															<CanEditCode classname='Bool'>
																<value>true</value>
															</CanEditCode>
															<CanEditModulePrototype classname='Bool'>
																<value>true</value>
															</CanEditModulePrototype>
															<CanEditParameterAdditionalResults classname='Bool'>
																<value>true</value>
															</CanEditParameterAdditionalResults>
															<PrecondIntExe classname='Num'>
																<value>0</value>
															</PrecondIntExe>
															<CustomResults classname='Objs'>
																<value lbound='[0]' ubound='[]'>
																	<elemproto>
																		<_NAME_IN_ATTRIBUTE_ name='' classname='CustomResult'>
																			<subprops>
																				<Name classname='ExprValue'>
																					<value/>
																				</Name>
																				<ValueToLog classname='ExprValue'>
																					<value/>
																				</ValueToLog>
																				<Condition classname='ExprValue'>
																					<value/>
																				</Condition>
																				<Flags classname='Num'>
																					<value>8192</value>
																				</Flags>
																				<CheckedState classname='Num'>
																					<value>2</value>
																				</CheckedState>
																				<Type classname='PropertyObjectType'>
																					<subprops>
																						<ValueType classname='Num'>
																							<value>3</value>
																						</ValueType>
																						<IsObject classname='Bool'>
																							<value>true</value>
																						</IsObject>
																						<TypeName classname='Str'>
																							<value/>
																						</TypeName>
																						<ElementType classname='Objs'>
																							<value lbound='[0]' ubound='[]'/>
																						</ElementType>
																						<ArrayDimensions classname='ArrayDimensions'>
																							<subprops>
																								<LowerBounds classname='Nums'>
																									<value lbound='[0]' ubound='[]'/>
																								</LowerBounds>
																								<UpperBounds classname='Nums'>
																									<value lbound='[0]' ubound='[]'/>
																								</UpperBounds>
																							</subprops>
																						</ArrayDimensions>
																						<Representation classname='Num'>
																							<value>1</value>
																						</Representation>
																						<ClassName classname='Str'>
																							<value/>
																						</ClassName>
																					</subprops>
																				</Type>
																				<Elements classname='Objs'>
																					<value lbound='[0]' ubound='[]'/>
																				</Elements>
																				<IsAnyType classname='Bool'>
																					<value>true</value>
																				</IsAnyType>
																			</subprops>
																		</_NAME_IN_ATTRIBUTE_>
																	</elemproto>
																</value>
															</CustomResults>
															<AdditionalResultsHints classname='Objs'>
																<value lbound='[0]' ubound='[]'>
																	<elemproto>
																		<_NAME_IN_ATTRIBUTE_ name='' classname='CustomResult'>
																			<subprops>
																				<Name classname='ExprValue'>
																					<value/>
																				</Name>
																				<ValueToLog classname='ExprValue'>
																					<value/>
																				</ValueToLog>
																				<Condition classname='ExprValue'>
																					<value/>
																				</Condition>
																				<Flags classname='Num'>
																					<value>8192</value>
																				</Flags>
																				<CheckedState classname='Num'>
																					<value>2</value>
																				</CheckedState>
																				<Type classname='PropertyObjectType'>
																					<subprops>
																						<ValueType classname='Num'>
																							<value>3</value>
																						</ValueType>
																						<IsObject classname='Bool'>
																							<value>true</value>
																						</IsObject>
																						<TypeName classname='Str'>
																							<value/>
																						</TypeName>
																						<ElementType classname='Objs'>
																							<value lbound='[0]' ubound='[]'/>
																						</ElementType>
																						<ArrayDimensions classname='ArrayDimensions'>
																							<subprops>
																								<LowerBounds classname='Nums'>
																									<value lbound='[0]' ubound='[]'/>
																								</LowerBounds>
																								<UpperBounds classname='Nums'>
																									<value lbound='[0]' ubound='[]'/>
																								</UpperBounds>
																							</subprops>
																						</ArrayDimensions>
																						<Representation classname='Num'>
																							<value>1</value>
																						</Representation>
																						<ClassName classname='Str'>
																							<value/>
																						</ClassName>
																					</subprops>
																				</Type>
																				<Elements classname='Objs'>
																					<value lbound='[0]' ubound='[]'/>
																				</Elements>
																				<IsAnyType classname='Bool'>
																					<value>true</value>
																				</IsAnyType>
																			</subprops>
																		</_NAME_IN_ATTRIBUTE_>
																	</elemproto>
																</value>
															</AdditionalResultsHints>
														</subprops>
													</TS>
													<Result classname='Obj'>
														<subprops>
															<Error classname='Obj'>
																<subprops>
																	<Code classname='Num'>
																		<value>0</value>
																	</Code>
																	<Msg classname='Str'>
																		<value/>
																	</Msg>
																	<Occurred classname='Bool'>
																		<value>false</value>
																	</Occurred>
																</subprops>
															</Error>
															<Status classname='Str'>
																<value/>
															</Status>
															<ReportText classname='Str'>
																<value/>
															</ReportText>
															<Common classname='Obj'/>
														</subprops>
													</Result>
												</subprops>
											</Step>
										</value>
									</value>
								</Cleanup>
								<RecordResults classname='Bool' valueflags='4194312'>
									<value>true</value>
								</RecordResults>
								<RTS classname='Obj' valueflags='4456456'>
									<subprops>
										<Type classname='Num' valueflags='4194304'>
											<value>0</value>
										</Type>
										<OptimizeNonReentrantCalls classname='Bool' valueflags='4194304'>
											<value>true</value>
										</OptimizeNonReentrantCalls>
										<EPNameExpr classname='Str' valueflags='4194304'>
											<value>"Unnamed Entry Point"</value>
										</EPNameExpr>
										<EPEnabledExpr classname='Str' valueflags='4194304'>
											<value>True</value>
										</EPEnabledExpr>
										<EPMenuHint classname='Str' valueflags='4194304'>
											<value/>
										</EPMenuHint>
										<EPIgnoreClient classname='Bool' valueflags='4194304'>
											<value>false</value>
										</EPIgnoreClient>
										<EPInitiallyHidden classname='Bool' valueflags='4194304'>
											<value>false</value>
										</EPInitiallyHidden>
										<EPCheckToSaveTitledFile classname='Bool' valueflags='4194304'>
											<value>true</value>
										</EPCheckToSaveTitledFile>
										<ShowEPAlways classname='Bool' valueflags='4194304'>
											<value>false</value>
										</ShowEPAlways>
										<ShowEPForFileWin classname='Bool' valueflags='4194304'>
											<value>true</value>
										</ShowEPForFileWin>
										<ShowEPForExeWin classname='Bool' valueflags='4194304'>
											<value>false</value>
										</ShowEPForExeWin>
										<ShowEPForEditorOnly classname='Bool' valueflags='4194304'>
											<value>false</value>
										</ShowEPForEditorOnly>
										<AllowIntExeOfEP classname='Bool' valueflags='4194304'>
											<value>false</value>
										</AllowIntExeOfEP>
										<CopyStepsOnOverriding classname='Bool' valueflags='4194304'>
											<value>true</value>
										</CopyStepsOnOverriding>
										<Priority classname='Num' valueflags='4194304'>
											<value>2953567917</value>
										</Priority>
									</subprops>
								</RTS>
								<Requirements classname='Obj' valueflags='4456456'>
									<subprops>
										<Links classname='Strs' valueflags='71303168'>
											<value lbound='[0]' ubound='[]'/>
										</Links>
									</subprops>
								</Requirements>
								<FailureAction classname='Num' valueflags='4194312'>
									<value>2</value>
								</FailureAction>
							</subprops>
						</Sequence>
					</value>
				</value>
			</Seq>
			<FileGlobalDefaults classname='Obj' valueflags='4194304'>
				<subprops>
					<MeasurementLink classname='Obj'>
						<subprops>
							<EnableMonitoring classname='Bool'>
								<value>false</value>
							</EnableMonitoring>
						</subprops>
					</MeasurementLink>
				</subprops>
			</FileGlobalDefaults>
			<ModelFile typename='Path' xsi:type='Path' classname='PathValue' valueflags='4194312'>
				<value/>
			</ModelFile>
			<LoadOpt classname='Str' valueflags='4194312'>
				<value>UseStepLoadOpt</value>
			</LoadOpt>
			<UnloadOpt classname='Str' valueflags='4194312'>
				<value>UseStepUnloadOpt</value>
			</UnloadOpt>
			<Version classname='Str' valueflags='4194312'>
				<value>0.0.0.0</value>
			</Version>
			<BatchSync classname='Num' valueflags='4194312'>
				<value>1</value>
			</BatchSync>
			<SFGlobalsScope classname='Num' valueflags='4194312'>
				<value>0</value>
			</SFGlobalsScope>
			<Type classname='Num' valueflags='4194312'>
				<value>0</value>
			</Type>
			<ModelOption classname='Num' valueflags='4194312'>
				<value>0</value>
			</ModelOption>
			<Requirements classname='Obj' valueflags='4194305'>
				<subprops>
					<Links classname='Strs' valueflags='71303168'>
						<value lbound='[0]' ubound='[]'/>
					</Links>
				</subprops>
			</Requirements>
		</subprops>
	</Data>
</teststandfileheader>
