<?xml version="1.0" encoding="UTF-8"?>
<teststandfileheader type='SequenceFile' fileversion='1022' productname='TestStand' productversion='2023 Q4 (23.0.0.49152)' compatibleversion='23.0.0.0' buildversion='23.0.0.49152' xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.ni.com/TestStand/23.0.0/SequenceFile">
	<typelist>
		<typedef alwayssavetype='false' additionaltypeflags='0' typelistordernum='1'>
			<Expression classname='ExprValue' isroottypedef='true' typecategory='3' timestamp='1695834317' typeversion='23.0.0.49152' typelastmodversion='23.0.0.49152' typeminprodversion='23.0.0.0' typeflags='33554436'>
				<value/>
			</Expression>
		</typedef>
		<typedef alwayssavetype='false' additionaltypeflags='0' typelistordernum='2'>
			<StepTypeMenu classname='Obj' isroottypedef='true' typecategory='3' timestamp='1695827117' typeversion='23.0.0.49152' typelastmodversion='23.0.0.49152' typeminprodversion='23.0.0.0' typeflags='33554436' flagsforinstances='4718616' instanceoverrideflags='4718616' valueflags='24'>
				<subprops>
					<CanBeSubstepType classname='Bool'>
						<value>false</value>
					</CanBeSubstepType>
					<CanOnlyBeSubstepType classname='Bool'>
						<value>false</value>
					</CanOnlyBeSubstepType>
					<Category classname='Str'>
						<value>""</value>
					</Category>
					<ItemName typename='Expression' xsi:type='Expression' classname='ExprValue'>
						<value>""</value>
					</ItemName>
					<SingularItemName classname='Str'>
						<value>""</value>
					</SingularItemName>
					<SeparatorBeforeCategory classname='Bool'>
						<value>false</value>
					</SeparatorBeforeCategory>
					<SeparatorBeforeItemName classname='Bool'>
						<value>false</value>
					</SeparatorBeforeItemName>
					<Group classname='Str'>
						<value/>
					</Group>
				</subprops>
			</StepTypeMenu>
		</typedef>
		<typedef alwayssavetype='false' additionaltypeflags='0' typelistordernum='3'>
			<StepTypeSubstepsArray classname='Objs' isroottypedef='true' typecategory='3' timestamp='1695827117' typeversion='23.0.0.49152' typelastmodversion='23.0.0.49152' typeminprodversion='23.0.0.0' typeflags='33554436' flagsforinstances='4718616' instanceoverrideflags='4849688' valueflags='24'>
				<value lbound='[0]' ubound='[]'/>
			</StepTypeSubstepsArray>
		</typedef>
		<typedef alwayssavetype='false' additionaltypeflags='0' typelistordernum='4'>
			<NI_ArrayDimensions classname='ArrayDimensions' isroottypedef='true' typecategory='3' timestamp='1695827117' typeversion='23.0.0.49152' typelastmodversion='23.0.0.49152' typeminprodversion='23.0.0.0' typeflags='33554436' valueflags='24'>
				<subprops>
					<LowerBounds classname='Nums'>
						<value lbound='[0]' ubound='[]'/>
					</LowerBounds>
					<UpperBounds classname='Nums'>
						<value lbound='[0]' ubound='[]'/>
					</UpperBounds>
				</subprops>
			</NI_ArrayDimensions>
		</typedef>
		<typedef alwayssavetype='false' additionaltypeflags='0' typelistordernum='5'>
			<NI_PropertyObjectType classname='PropertyObjectType' isroottypedef='true' typecategory='3' timestamp='1695827117' typeversion='23.0.0.49152' typelastmodversion='23.0.0.49152' typeminprodversion='23.0.0.0' typeflags='33554436' valueflags='24'>
				<subprops>
					<ValueType classname='Num'>
						<value>3</value>
					</ValueType>
					<IsObject classname='Bool'>
						<value>true</value>
					</IsObject>
					<TypeName classname='Str'>
						<value/>
					</TypeName>
					<ElementType classname='Objs'>
						<value lbound='[0]' ubound='[]'/>
					</ElementType>
					<ArrayDimensions typename='NI_ArrayDimensions' xsi:type='NI_ArrayDimensions' classname='ArrayDimensions'>
						<subprops>
							<LowerBounds classname='Nums'>
								<value lbound='[0]' ubound='[]'/>
							</LowerBounds>
							<UpperBounds classname='Nums'>
								<value lbound='[0]' ubound='[]'/>
							</UpperBounds>
						</subprops>
					</ArrayDimensions>
					<Representation classname='Num'>
						<value>1</value>
					</Representation>
					<ClassName classname='Str'>
						<value/>
					</ClassName>
				</subprops>
			</NI_PropertyObjectType>
		</typedef>
		<typedef alwayssavetype='false' additionaltypeflags='0' typelistordernum='6'>
			<NI_CustomResult classname='CustomResult' isroottypedef='true' typecategory='3' timestamp='1695827117' typeversion='23.0.0.49152' typelastmodversion='23.0.0.49152' typeminprodversion='23.0.0.0' typeflags='33554436' valueflags='24'>
				<subprops>
					<Name typename='Expression' xsi:type='Expression' classname='ExprValue'>
						<value/>
					</Name>
					<ValueToLog typename='Expression' xsi:type='Expression' classname='ExprValue'>
						<value/>
					</ValueToLog>
					<Condition typename='Expression' xsi:type='Expression' classname='ExprValue'>
						<value/>
					</Condition>
					<Flags classname='Num'>
						<value>8192</value>
						<numericfmt>%#x</numericfmt>
					</Flags>
					<CheckedState classname='Num'>
						<value>2</value>
					</CheckedState>
					<Type typename='NI_PropertyObjectType' xsi:type='NI_PropertyObjectType' classname='PropertyObjectType'>
						<subprops>
							<ValueType classname='Num'>
								<value>3</value>
							</ValueType>
							<IsObject classname='Bool'>
								<value>true</value>
							</IsObject>
							<TypeName classname='Str'>
								<value/>
							</TypeName>
							<ElementType classname='Objs'>
								<value lbound='[0]' ubound='[]'/>
							</ElementType>
							<ArrayDimensions classname='ArrayDimensions'>
								<subprops>
									<LowerBounds classname='Nums'>
										<value lbound='[0]' ubound='[]'/>
									</LowerBounds>
									<UpperBounds classname='Nums'>
										<value lbound='[0]' ubound='[]'/>
									</UpperBounds>
								</subprops>
							</ArrayDimensions>
							<Representation classname='Num'>
								<value>1</value>
							</Representation>
							<ClassName classname='Str'>
								<value/>
							</ClassName>
						</subprops>
					</Type>
					<Elements classname='Objs'>
						<value lbound='[0]' ubound='[]'/>
					</Elements>
					<IsAnyType classname='Bool'>
						<value>true</value>
					</IsAnyType>
				</subprops>
			</NI_CustomResult>
		</typedef>
		<typedef alwayssavetype='false' additionaltypeflags='0' typelistordernum='7'>
			<TEInf classname='Obj' isroottypedef='true' typecategory='3' timestamp='1695827117' typeversion='23.0.0.49152' typelastmodversion='23.0.0.49152' typeminprodversion='23.0.0.0' typeflags='33554436' flagsforinstances='4456472' instanceoverrideflags='4456472' valueflags='24'>
				<subprops>
					<Id classname='Str' flagsforinstances='1' instanceoverrideflags='5046297'>
						<value/>
					</Id>
					<Icon classname='Str' instanceoverrideflags='5046296'>
						<value/>
					</Icon>
					<SData classname='Obj' flagsforinstances='2097152' instanceoverrideflags='7143448' structureflags='2097152'/>
					<PreCond typename='Expression' xsi:type='Expression' classname='ExprValue' instanceoverrideflags='5046296'>
						<value/>
					</PreCond>
					<LoadOpt classname='Str' instanceoverrideflags='5046296'>
						<value>PreloadWhenExecuted</value>
					</LoadOpt>
					<UnloadOpt classname='Str' instanceoverrideflags='5046296'>
						<value>UnloadWithFile</value>
					</UnloadOpt>
					<Mode classname='Str' instanceoverrideflags='5046296'>
						<value>Normal</value>
					</Mode>
					<WindowActivation classname='Str' instanceoverrideflags='5046296'>
						<value>None</value>
					</WindowActivation>
					<ResultOption classname='Num' instanceoverrideflags='5046296'>
						<value>1</value>
					</ResultOption>
					<StepFCSeqF classname='Bool' instanceoverrideflags='5046296'>
						<value>true</value>
					</StepFCSeqF>
					<IgnoreRTE classname='Bool' instanceoverrideflags='5046296'>
						<value>false</value>
					</IgnoreRTE>
					<UseMutex classname='Bool' instanceoverrideflags='5046296'>
						<value>false</value>
					</UseMutex>
					<MutexNameOrRef typename='Expression' xsi:type='Expression' classname='ExprValue' instanceoverrideflags='5046296'>
						<value/>
					</MutexNameOrRef>
					<BatchSyncOpt classname='Num' instanceoverrideflags='5046296'>
						<value>0</value>
					</BatchSyncOpt>
					<SwitchEnabled classname='Bool' instanceoverrideflags='5046296'>
						<value>false</value>
					</SwitchEnabled>
					<VirtualDeviceName typename='Expression' xsi:type='Expression' classname='ExprValue' instanceoverrideflags='5046296'>
						<value/>
					</VirtualDeviceName>
					<SwitchOperation classname='Num' instanceoverrideflags='5046296'>
						<value>1</value>
					</SwitchOperation>
					<RouteGroupConnect typename='Expression' xsi:type='Expression' classname='ExprValue' instanceoverrideflags='5046296'>
						<value/>
					</RouteGroupConnect>
					<RouteGroupDisconnect typename='Expression' xsi:type='Expression' classname='ExprValue' instanceoverrideflags='5046296'>
						<value/>
					</RouteGroupDisconnect>
					<MulticonnectMode classname='Num' instanceoverrideflags='5046296'>
						<value>1</value>
					</MulticonnectMode>
					<OperationOrder classname='Num' instanceoverrideflags='5046296'>
						<value>2</value>
					</OperationOrder>
					<ConnectionLifetime classname='Num' instanceoverrideflags='5046296'>
						<value>4</value>
					</ConnectionLifetime>
					<WaitForDebounce classname='Bool' instanceoverrideflags='5046296'>
						<value>true</value>
					</WaitForDebounce>
					<PassAct classname='Str' instanceoverrideflags='5046296'>
						<value>Next</value>
					</PassAct>
					<FailAct classname='Str' instanceoverrideflags='5046296'>
						<value>Next</value>
					</FailAct>
					<PassActTarget typename='Expression' xsi:type='Expression' classname='ExprValue' instanceoverrideflags='5046296'>
						<value/>
					</PassActTarget>
					<FailActTarget typename='Expression' xsi:type='Expression' classname='ExprValue' instanceoverrideflags='5046296'>
						<value/>
					</FailActTarget>
					<CustExpr typename='Expression' xsi:type='Expression' classname='ExprValue' instanceoverrideflags='5046296'>
						<value/>
					</CustExpr>
					<CustTrueAct classname='Str' instanceoverrideflags='5046296'>
						<value>Next</value>
					</CustTrueAct>
					<CustFalseAct classname='Str' instanceoverrideflags='5046296'>
						<value>Next</value>
					</CustFalseAct>
					<CustTrueActTarget typename='Expression' xsi:type='Expression' classname='ExprValue' instanceoverrideflags='5046296'>
						<value/>
					</CustTrueActTarget>
					<CustFalseActTarget typename='Expression' xsi:type='Expression' classname='ExprValue' instanceoverrideflags='5046296'>
						<value/>
					</CustFalseActTarget>
					<LoopType classname='Str' instanceoverrideflags='5046296'>
						<value>NoLooping</value>
					</LoopType>
					<LoopWhile typename='Expression' xsi:type='Expression' classname='ExprValue' instanceoverrideflags='5046296'>
						<value/>
					</LoopWhile>
					<LoopStatus typename='Expression' xsi:type='Expression' classname='ExprValue' instanceoverrideflags='5046296'>
						<value/>
					</LoopStatus>
					<LoopIncrement typename='Expression' xsi:type='Expression' classname='ExprValue' instanceoverrideflags='5046296'>
						<value>RunState.LoopIndex += 1</value>
					</LoopIncrement>
					<LoopInitialize typename='Expression' xsi:type='Expression' classname='ExprValue' instanceoverrideflags='5046296'>
						<value>RunState.LoopIndex = 0</value>
					</LoopInitialize>
					<LoopOpt classname='Num' instanceoverrideflags='5046296'>
						<value>0</value>
					</LoopOpt>
					<PreExpr typename='Expression' xsi:type='Expression' classname='ExprValue' instanceoverrideflags='5046296'>
						<value/>
					</PreExpr>
					<PostExpr typename='Expression' xsi:type='Expression' classname='ExprValue' instanceoverrideflags='5046296'>
						<value/>
					</PostExpr>
					<StatusExpr typename='Expression' xsi:type='Expression' classname='ExprValue' instanceoverrideflags='5046296'>
						<value/>
					</StatusExpr>
					<CanSpecifyModule classname='Bool' instanceoverrideflags='5046296'>
						<value>true</value>
					</CanSpecifyModule>
					<CanEditCode classname='Bool' instanceoverrideflags='5046296'>
						<value>true</value>
					</CanEditCode>
					<CanEditModulePrototype classname='Bool' instanceoverrideflags='5046296'>
						<value>true</value>
					</CanEditModulePrototype>
					<CanEditParameterAdditionalResults classname='Bool' instanceoverrideflags='5046296'>
						<value>true</value>
					</CanEditParameterAdditionalResults>
					<PrecondIntExe classname='Num' instanceoverrideflags='5046296'>
						<value>0</value>
					</PrecondIntExe>
					<Requirements classname='Obj' flagsforinstances='2097153' instanceoverrideflags='7143449' valueflags='1' structureflags='2097152'>
						<subprops>
							<Links classname='Strs' flagsforinstances='71303168' instanceoverrideflags='72286233' valueflags='71303168'>
								<value lbound='[0]' ubound='[]'/>
							</Links>
						</subprops>
					</Requirements>
					<CustomResults classname='Objs' instanceoverrideflags='5046296'>
						<value lbound='[0]' ubound='[]'>
							<elemproto>
								<_NAME_IN_ATTRIBUTE_ typename='NI_CustomResult' xsi:type='NI_CustomResult' name='' classname='CustomResult'>
									<subprops>
										<Name classname='ExprValue'>
											<value/>
										</Name>
										<ValueToLog classname='ExprValue'>
											<value/>
										</ValueToLog>
										<Condition classname='ExprValue'>
											<value/>
										</Condition>
										<Flags classname='Num'>
											<value>8192</value>
										</Flags>
										<CheckedState classname='Num'>
											<value>2</value>
										</CheckedState>
										<Type classname='PropertyObjectType'>
											<subprops>
												<ValueType classname='Num'>
													<value>3</value>
												</ValueType>
												<IsObject classname='Bool'>
													<value>true</value>
												</IsObject>
												<TypeName classname='Str'>
													<value/>
												</TypeName>
												<ElementType classname='Objs'>
													<value lbound='[0]' ubound='[]'/>
												</ElementType>
												<ArrayDimensions classname='ArrayDimensions'>
													<subprops>
														<LowerBounds classname='Nums'>
															<value lbound='[0]' ubound='[]'/>
														</LowerBounds>
														<UpperBounds classname='Nums'>
															<value lbound='[0]' ubound='[]'/>
														</UpperBounds>
													</subprops>
												</ArrayDimensions>
												<Representation classname='Num'>
													<value>1</value>
												</Representation>
												<ClassName classname='Str'>
													<value/>
												</ClassName>
											</subprops>
										</Type>
										<Elements classname='Objs'>
											<value lbound='[0]' ubound='[]'/>
										</Elements>
										<IsAnyType classname='Bool'>
											<value>true</value>
										</IsAnyType>
									</subprops>
								</_NAME_IN_ATTRIBUTE_>
							</elemproto>
						</value>
					</CustomResults>
					<AdditionalResultsHints classname='Objs' instanceoverrideflags='5046296'>
						<value lbound='[0]' ubound='[]'>
							<elemproto>
								<_NAME_IN_ATTRIBUTE_ typename='NI_CustomResult' xsi:type='NI_CustomResult' name='' classname='CustomResult'>
									<subprops>
										<Name classname='ExprValue'>
											<value/>
										</Name>
										<ValueToLog classname='ExprValue'>
											<value/>
										</ValueToLog>
										<Condition classname='ExprValue'>
											<value/>
										</Condition>
										<Flags classname='Num'>
											<value>8192</value>
										</Flags>
										<CheckedState classname='Num'>
											<value>2</value>
										</CheckedState>
										<Type classname='PropertyObjectType'>
											<subprops>
												<ValueType classname='Num'>
													<value>3</value>
												</ValueType>
												<IsObject classname='Bool'>
													<value>true</value>
												</IsObject>
												<TypeName classname='Str'>
													<value/>
												</TypeName>
												<ElementType classname='Objs'>
													<value lbound='[0]' ubound='[]'/>
												</ElementType>
												<ArrayDimensions classname='ArrayDimensions'>
													<subprops>
														<LowerBounds classname='Nums'>
															<value lbound='[0]' ubound='[]'/>
														</LowerBounds>
														<UpperBounds classname='Nums'>
															<value lbound='[0]' ubound='[]'/>
														</UpperBounds>
													</subprops>
												</ArrayDimensions>
												<Representation classname='Num'>
													<value>1</value>
												</Representation>
												<ClassName classname='Str'>
													<value/>
												</ClassName>
											</subprops>
										</Type>
										<Elements classname='Objs'>
											<value lbound='[0]' ubound='[]'/>
										</Elements>
										<IsAnyType classname='Bool'>
											<value>true</value>
										</IsAnyType>
									</subprops>
								</_NAME_IN_ATTRIBUTE_>
							</elemproto>
						</value>
					</AdditionalResultsHints>
				</subprops>
			</TEInf>
		</typedef>
		<typedef alwayssavetype='false' additionaltypeflags='0' typelistordernum='8'>
			<StepTypeNIData classname='Obj' isroottypedef='true' typecategory='3' timestamp='1695827117' typeversion='23.0.0.49152' typelastmodversion='23.0.0.49152' typeminprodversion='23.0.0.0' typeflags='33554436' flagsforinstances='4718616' instanceoverrideflags='4718616' valueflags='24'>
				<subprops>
					<EditPanels classname='Strs'>
						<value lbound='[0]' ubound='[]'/>
					</EditPanels>
				</subprops>
			</StepTypeNIData>
		</typedef>
		<typedef alwayssavetype='false' additionaltypeflags='0' typelistordernum='9'>
			<Error classname='Obj' isroottypedef='true' typecategory='3' timestamp='1695827117' typeversion='23.0.0.49152' typelastmodversion='23.0.0.49152' typeminprodversion='23.0.0.0' typeflags='33554436'>
				<extdata controllername='STRUCT' allowstructpassing='true' packingoption='8' exclude='false' type='0' arraystorage='0' strbuffersize='256' strstorage='0'/>
				<extdata controllername='CLUST' allowclusterpassing='true' exclude='false' memberlabel=''/>
				<extdata controllername='DNSTRUCT' allowstructpassing='true' exclude='false' membername=''/>
				<extdata controllername='BLVCLUSTER' allowclusterpassing='true' exclude='false' memberlabel=''/>
				<subprops>
					<Code classname='Num' flagsforinstances='4194304' valueflags='4194304'>
						<value>0</value>
						<extdata controllername='STRUCT' allowstructpassing='false' packingoption='0' exclude='false' type='6' arraystorage='0' strbuffersize='256' strstorage='0'/>
						<extdata controllername='CLUST' allowclusterpassing='false' exclude='false' memberlabel='code'/>
						<extdata controllername='DNSTRUCT' allowstructpassing='false' exclude='false' membername='code'/>
						<extdata controllername='BLVCLUSTER' allowclusterpassing='false' exclude='false' memberlabel='code'/>
					</Code>
					<Msg classname='Str' flagsforinstances='4194304' valueflags='4194304'>
						<value/>
						<extdata controllername='STRUCT' allowstructpassing='false' packingoption='0' exclude='false' type='2' arraystorage='0' strbuffersize='1024' strstorage='1'/>
						<extdata controllername='CLUST' allowclusterpassing='false' exclude='false' memberlabel='source'/>
						<extdata controllername='DNSTRUCT' allowstructpassing='false' exclude='false' membername='msg'/>
						<extdata controllername='BLVCLUSTER' allowclusterpassing='false' exclude='false' memberlabel='source'/>
					</Msg>
					<Occurred classname='Bool' flagsforinstances='4194304' valueflags='4194304'>
						<value>false</value>
						<extdata controllername='STRUCT' allowstructpassing='false' packingoption='0' exclude='false' type='6' arraystorage='0' strbuffersize='256' strstorage='0'/>
						<extdata controllername='CLUST' allowclusterpassing='false' exclude='false' memberlabel='status'/>
						<extdata controllername='DNSTRUCT' allowstructpassing='false' exclude='false' membername='occurred'/>
						<extdata controllername='BLVCLUSTER' allowclusterpassing='false' exclude='false' memberlabel='status'/>
					</Occurred>
				</subprops>
			</Error>
		</typedef>
		<typedef alwayssavetype='false' additionaltypeflags='0' typelistordernum='10'>
			<CommonResults classname='Obj' isroottypedef='true' typecategory='3' timestamp='1465572565' typeversion='3.1.0.100' typelastmodversion='23.0.0.49152' typeminprodversion='3.1.0.0' typeflags='33554432' flagsforinstances='4194304' valueflags='4194304'/>
		</typedef>
		<typedef alwayssavetype='false' additionaltypeflags='0' typelistordernum='11'>
			<Substep classname='StepType' isroottypedef='true' typecategory='1' timestamp='1695827117' typeversion='23.0.0.49152' typelastmodversion='23.0.0.49152' typeminprodversion='23.0.0.0' typeflags='33554438' flagsforinstances='4194304' instanceoverrideflags='4194304'>
				<subprops>
					<DescriptionFormat typename='Expression' xsi:type='Expression' classname='ExprValue' flagsforinstances='4718616' instanceoverrideflags='4718616' valueflags='4194328' structureflags='524288'>
						<value>"%ModuleDescription"</value>
					</DescriptionFormat>
					<DefaultNameFormat typename='Expression' xsi:type='Expression' classname='ExprValue' flagsforinstances='4718616' instanceoverrideflags='4718616' valueflags='4194328' structureflags='524288'>
						<value>ResStr("NI_STEPTYPES", "GENERIC_DEF_SUBSTEP_NAME")</value>
					</DefaultNameFormat>
					<BlockStartTypes classname='Str' valueflags='4194328' structureflags='524288'>
						<value/>
					</BlockStartTypes>
					<BlockEndTypes classname='Str' valueflags='4194328' structureflags='524288'>
						<value/>
					</BlockEndTypes>
					<AppliesToBlockStructure classname='Bool' valueflags='4194328' structureflags='524288'>
						<value>false</value>
					</AppliesToBlockStructure>
					<Menu typename='StepTypeMenu' xsi:type='StepTypeMenu' classname='Obj'>
						<subprops>
							<CanBeSubstepType classname='Bool'>
								<value>true</value>
							</CanBeSubstepType>
							<CanOnlyBeSubstepType classname='Bool'>
								<value>true</value>
							</CanOnlyBeSubstepType>
							<Category classname='Str'>
								<value>""</value>
							</Category>
							<ItemName classname='ExprValue'>
								<value>ResStr("NI_STEPTYPES", "GENERIC_SUBSTEP_MENU_ITEM_NAME")</value>
							</ItemName>
							<SingularItemName classname='Str'>
								<value>""</value>
							</SingularItemName>
							<SeparatorBeforeCategory classname='Bool'>
								<value>false</value>
							</SeparatorBeforeCategory>
							<SeparatorBeforeItemName classname='Bool'>
								<value>false</value>
							</SeparatorBeforeItemName>
							<Group classname='Str'>
								<value>GenericSubsteps</value>
							</Group>
						</subprops>
					</Menu>
					<Substeps typename='StepTypeSubstepsArray' xsi:type='StepTypeSubstepsArray' classname='Objs'>
						<value lbound='[0]' ubound='[]'/>
					</Substeps>
					<CodeTemplates classname='Str' valueflags='4194328' structureflags='524288'>
						<value>DefaultLabVIEWNXG|DefaultLabVIEW|DefaultCVI|DefaultVB.NET|DefaultCSharp.NET|DefaultC++.NET|DefaultVC++_Template|DefaultHTB72_Template|DefaultHTB80_Template|Default_Template</value>
					</CodeTemplates>
					<AdditionalResultsHints classname='Objs' valueflags='4194328' structureflags='524288'>
						<value lbound='[0]' ubound='[]'>
							<elemproto>
								<_NAME_IN_ATTRIBUTE_ typename='NI_CustomResult' xsi:type='NI_CustomResult' name='' classname='CustomResult'>
									<subprops>
										<Name classname='ExprValue'>
											<value/>
										</Name>
										<ValueToLog classname='ExprValue'>
											<value/>
										</ValueToLog>
										<Condition classname='ExprValue'>
											<value/>
										</Condition>
										<Flags classname='Num'>
											<value>8192</value>
										</Flags>
										<CheckedState classname='Num'>
											<value>2</value>
										</CheckedState>
										<Type classname='PropertyObjectType'>
											<subprops>
												<ValueType classname='Num'>
													<value>3</value>
												</ValueType>
												<IsObject classname='Bool'>
													<value>true</value>
												</IsObject>
												<TypeName classname='Str'>
													<value/>
												</TypeName>
												<ElementType classname='Objs'>
													<value lbound='[0]' ubound='[]'/>
												</ElementType>
												<ArrayDimensions classname='ArrayDimensions'>
													<subprops>
														<LowerBounds classname='Nums'>
															<value lbound='[0]' ubound='[]'/>
														</LowerBounds>
														<UpperBounds classname='Nums'>
															<value lbound='[0]' ubound='[]'/>
														</UpperBounds>
													</subprops>
												</ArrayDimensions>
												<Representation classname='Num'>
													<value>1</value>
												</Representation>
												<ClassName classname='Str'>
													<value/>
												</ClassName>
											</subprops>
										</Type>
										<Elements classname='Objs'>
											<value lbound='[0]' ubound='[]'/>
										</Elements>
										<IsAnyType classname='Bool'>
											<value>true</value>
										</IsAnyType>
									</subprops>
								</_NAME_IN_ATTRIBUTE_>
							</elemproto>
						</value>
					</AdditionalResultsHints>
					<TS typename='TEInf' xsi:type='TEInf' classname='Obj' flagsforinstances='4456472'>
						<subprops>
							<Id classname='Str'>
								<value/>
							</Id>
							<Icon classname='Str'>
								<value/>
							</Icon>
							<SData classname='Obj' flagsforinstances='2097152' instanceoverrideflags='7274521' structureflags='2097152'/>
							<PreCond classname='ExprValue'>
								<value/>
							</PreCond>
							<LoadOpt classname='Str'>
								<value>PreloadWhenExecuted</value>
							</LoadOpt>
							<UnloadOpt classname='Str'>
								<value>UnloadWithFile</value>
							</UnloadOpt>
							<Mode classname='Str'>
								<value>Normal</value>
							</Mode>
							<WindowActivation classname='Str'>
								<value>None</value>
							</WindowActivation>
							<ResultOption classname='Num'>
								<value>1</value>
							</ResultOption>
							<StepFCSeqF classname='Bool'>
								<value>true</value>
							</StepFCSeqF>
							<IgnoreRTE classname='Bool'>
								<value>false</value>
							</IgnoreRTE>
							<UseMutex classname='Bool'>
								<value>false</value>
							</UseMutex>
							<MutexNameOrRef classname='ExprValue'>
								<value/>
							</MutexNameOrRef>
							<BatchSyncOpt classname='Num'>
								<value>0</value>
							</BatchSyncOpt>
							<SwitchEnabled classname='Bool'>
								<value>false</value>
							</SwitchEnabled>
							<VirtualDeviceName classname='ExprValue'>
								<value/>
							</VirtualDeviceName>
							<SwitchOperation classname='Num'>
								<value>1</value>
							</SwitchOperation>
							<RouteGroupConnect classname='ExprValue'>
								<value/>
							</RouteGroupConnect>
							<RouteGroupDisconnect classname='ExprValue'>
								<value/>
							</RouteGroupDisconnect>
							<MulticonnectMode classname='Num'>
								<value>1</value>
							</MulticonnectMode>
							<OperationOrder classname='Num'>
								<value>2</value>
							</OperationOrder>
							<ConnectionLifetime classname='Num'>
								<value>4</value>
							</ConnectionLifetime>
							<WaitForDebounce classname='Bool'>
								<value>true</value>
							</WaitForDebounce>
							<PassAct classname='Str'>
								<value>Next</value>
							</PassAct>
							<FailAct classname='Str'>
								<value>Next</value>
							</FailAct>
							<PassActTarget classname='ExprValue'>
								<value/>
							</PassActTarget>
							<FailActTarget classname='ExprValue'>
								<value/>
							</FailActTarget>
							<CustExpr classname='ExprValue'>
								<value/>
							</CustExpr>
							<CustTrueAct classname='Str'>
								<value>Next</value>
							</CustTrueAct>
							<CustFalseAct classname='Str'>
								<value>Next</value>
							</CustFalseAct>
							<CustTrueActTarget classname='ExprValue'>
								<value/>
							</CustTrueActTarget>
							<CustFalseActTarget classname='ExprValue'>
								<value/>
							</CustFalseActTarget>
							<LoopType classname='Str'>
								<value>NoLooping</value>
							</LoopType>
							<LoopWhile classname='ExprValue'>
								<value/>
							</LoopWhile>
							<LoopStatus classname='ExprValue'>
								<value/>
							</LoopStatus>
							<LoopIncrement classname='ExprValue'>
								<value>RunState.LoopIndex += 1</value>
							</LoopIncrement>
							<LoopInitialize classname='ExprValue'>
								<value>RunState.LoopIndex = 0</value>
							</LoopInitialize>
							<LoopOpt classname='Num'>
								<value>0</value>
							</LoopOpt>
							<PreExpr classname='ExprValue'>
								<value/>
							</PreExpr>
							<PostExpr classname='ExprValue'>
								<value/>
							</PostExpr>
							<StatusExpr classname='ExprValue'>
								<value/>
							</StatusExpr>
							<CanSpecifyModule classname='Bool'>
								<value>true</value>
							</CanSpecifyModule>
							<CanEditCode classname='Bool'>
								<value>true</value>
							</CanEditCode>
							<CanEditModulePrototype classname='Bool'>
								<value>true</value>
							</CanEditModulePrototype>
							<CanEditParameterAdditionalResults classname='Bool'>
								<value>true</value>
							</CanEditParameterAdditionalResults>
							<PrecondIntExe classname='Num'>
								<value>0</value>
							</PrecondIntExe>
							<Requirements classname='Obj' flagsforinstances='1' valueflags='1' structureflags='2097152'>
								<subprops>
									<Links classname='Strs' flagsforinstances='71303168' instanceoverrideflags='72286233' valueflags='71303168'>
										<value lbound='[0]' ubound='[]'/>
									</Links>
								</subprops>
							</Requirements>
							<CustomResults classname='Objs'>
								<value lbound='[0]' ubound='[]'>
									<elemproto>
										<_NAME_IN_ATTRIBUTE_ name='' classname='CustomResult'>
											<subprops>
												<Name classname='ExprValue'>
													<value/>
												</Name>
												<ValueToLog classname='ExprValue'>
													<value/>
												</ValueToLog>
												<Condition classname='ExprValue'>
													<value/>
												</Condition>
												<Flags classname='Num'>
													<value>8192</value>
												</Flags>
												<CheckedState classname='Num'>
													<value>2</value>
												</CheckedState>
												<Type classname='PropertyObjectType'>
													<subprops>
														<ValueType classname='Num'>
															<value>3</value>
														</ValueType>
														<IsObject classname='Bool'>
															<value>true</value>
														</IsObject>
														<TypeName classname='Str'>
															<value/>
														</TypeName>
														<ElementType classname='Objs'>
															<value lbound='[0]' ubound='[]'/>
														</ElementType>
														<ArrayDimensions classname='ArrayDimensions'>
															<subprops>
																<LowerBounds classname='Nums'>
																	<value lbound='[0]' ubound='[]'/>
																</LowerBounds>
																<UpperBounds classname='Nums'>
																	<value lbound='[0]' ubound='[]'/>
																</UpperBounds>
															</subprops>
														</ArrayDimensions>
														<Representation classname='Num'>
															<value>1</value>
														</Representation>
														<ClassName classname='Str'>
															<value/>
														</ClassName>
													</subprops>
												</Type>
												<Elements classname='Objs'>
													<value lbound='[0]' ubound='[]'/>
												</Elements>
												<IsAnyType classname='Bool'>
													<value>true</value>
												</IsAnyType>
											</subprops>
										</_NAME_IN_ATTRIBUTE_>
									</elemproto>
								</value>
							</CustomResults>
							<AdditionalResultsHints classname='Objs'>
								<value lbound='[0]' ubound='[]'>
									<elemproto>
										<_NAME_IN_ATTRIBUTE_ name='' classname='CustomResult'>
											<subprops>
												<Name classname='ExprValue'>
													<value/>
												</Name>
												<ValueToLog classname='ExprValue'>
													<value/>
												</ValueToLog>
												<Condition classname='ExprValue'>
													<value/>
												</Condition>
												<Flags classname='Num'>
													<value>8192</value>
												</Flags>
												<CheckedState classname='Num'>
													<value>2</value>
												</CheckedState>
												<Type classname='PropertyObjectType'>
													<subprops>
														<ValueType classname='Num'>
															<value>3</value>
														</ValueType>
														<IsObject classname='Bool'>
															<value>true</value>
														</IsObject>
														<TypeName classname='Str'>
															<value/>
														</TypeName>
														<ElementType classname='Objs'>
															<value lbound='[0]' ubound='[]'/>
														</ElementType>
														<ArrayDimensions classname='ArrayDimensions'>
															<subprops>
																<LowerBounds classname='Nums'>
																	<value lbound='[0]' ubound='[]'/>
																</LowerBounds>
																<UpperBounds classname='Nums'>
																	<value lbound='[0]' ubound='[]'/>
																</UpperBounds>
															</subprops>
														</ArrayDimensions>
														<Representation classname='Num'>
															<value>1</value>
														</Representation>
														<ClassName classname='Str'>
															<value/>
														</ClassName>
													</subprops>
												</Type>
												<Elements classname='Objs'>
													<value lbound='[0]' ubound='[]'/>
												</Elements>
												<IsAnyType classname='Bool'>
													<value>true</value>
												</IsAnyType>
											</subprops>
										</_NAME_IN_ATTRIBUTE_>
									</elemproto>
								</value>
							</AdditionalResultsHints>
						</subprops>
					</TS>
					<NI_Data typename='StepTypeNIData' xsi:type='StepTypeNIData' classname='Obj'>
						<subprops>
							<EditPanels classname='Strs'>
								<value lbound='[0]' ubound='[]'/>
							</EditPanels>
						</subprops>
					</NI_Data>
					<Result classname='Obj' flagsforinstances='4194304' valueflags='4194304'>
						<subprops>
							<Error typename='Error' xsi:type='Error' classname='Obj' flagsforinstances='4194304' valueflags='4194304'>
								<subprops>
									<Code classname='Num'>
										<value>0</value>
									</Code>
									<Msg classname='Str'>
										<value/>
									</Msg>
									<Occurred classname='Bool'>
										<value>false</value>
									</Occurred>
								</subprops>
							</Error>
							<Status classname='Str' flagsforinstances='4194304' valueflags='4194304'>
								<value/>
							</Status>
							<ReportText classname='Str' flagsforinstances='4194304' valueflags='4194304'>
								<value/>
							</ReportText>
							<Common typename='CommonResults' xsi:type='CommonResults' classname='Obj'/>
						</subprops>
					</Result>
					<CanEncapsulate classname='Bool' valueflags='4194328' structureflags='524288'>
						<value>false</value>
					</CanEncapsulate>
				</subprops>
			</Substep>
		</typedef>
		<typedef alwayssavetype='false' additionaltypeflags='0' typelistordernum='12'>
			<NI_DotNetParameterResult classname='DotNetParameterResult' isroottypedef='true' typecategory='3' timestamp='1695827117' typeversion='23.0.0.49152' typelastmodversion='23.0.0.49152' typeminprodversion='23.0.0.0' typeflags='33554436' valueflags='24'>
				<subprops>
					<Condition typename='Expression' xsi:type='Expression' classname='ExprValue'>
						<value/>
					</Condition>
					<Flags classname='Num'>
						<value>8192</value>
						<numericfmt>%#x</numericfmt>
					</Flags>
					<CheckedState classname='Num'>
						<value>1</value>
					</CheckedState>
				</subprops>
			</NI_DotNetParameterResult>
		</typedef>
		<typedef alwayssavetype='false' additionaltypeflags='0' typelistordernum='13'>
			<DotNetParameter classname='DotNetParameter' isroottypedef='true' typecategory='3' timestamp='1695827756' typeversion='23.0.0.49152' typelastmodversion='23.0.0.49152' typeminprodversion='23.0.0.0' typeflags='33554436' valueflags='24'>
				<subprops>
					<Name classname='Str'>
						<value>_notNamed</value>
					</Name>
					<ArgVal typename='Expression' xsi:type='Expression' classname='ExprValue'>
						<value/>
					</ArgVal>
					<ArgDisplayVal typename='Expression' xsi:type='Expression' classname='ExprValue'>
						<value/>
					</ArgDisplayVal>
					<Type classname='Num'>
						<value>0</value>
					</Type>
					<TypeName classname='Str'>
						<value/>
					</TypeName>
					<Flags classname='Num'>
						<value>0</value>
					</Flags>
					<IsOptional classname='Bool'>
						<value>false</value>
					</IsOptional>
					<CallDispose classname='Bool'>
						<value>false</value>
					</CallDispose>
					<NumDimensions classname='Nums'>
						<value lbound='[0]' ubound='[]'/>
					</NumDimensions>
					<MultiElement classname='Objs'>
						<value lbound='[0]' ubound='[]'/>
					</MultiElement>
					<AdditionalResults classname='Obj'>
						<subprops>
							<Input typename='NI_DotNetParameterResult' xsi:type='NI_DotNetParameterResult' classname='DotNetParameterResult'>
								<subprops>
									<Condition classname='ExprValue'>
										<value/>
									</Condition>
									<Flags classname='Num'>
										<value>8192</value>
									</Flags>
									<CheckedState classname='Num'>
										<value>1</value>
									</CheckedState>
								</subprops>
							</Input>
							<Output typename='NI_DotNetParameterResult' xsi:type='NI_DotNetParameterResult' classname='DotNetParameterResult'>
								<subprops>
									<Condition classname='ExprValue'>
										<value/>
									</Condition>
									<Flags classname='Num'>
										<value>8192</value>
									</Flags>
									<CheckedState classname='Num'>
										<value>1</value>
									</CheckedState>
								</subprops>
							</Output>
						</subprops>
					</AdditionalResults>
					<UserData classname='Obj' flagsforinstances='2097152' structureflags='2097152'/>
				</subprops>
			</DotNetParameter>
		</typedef>
		<typedef alwayssavetype='false' additionaltypeflags='0' typelistordernum='14'>
			<NI_DotNetCallResult classname='DotNetCallResult' isroottypedef='true' typecategory='3' timestamp='1695827117' typeversion='23.0.0.49152' typelastmodversion='23.0.0.49152' typeminprodversion='23.0.0.0' typeflags='33554436' valueflags='24'>
				<subprops>
					<Condition typename='Expression' xsi:type='Expression' classname='ExprValue'>
						<value/>
					</Condition>
					<Flags classname='Num'>
						<value>8192</value>
						<numericfmt>%#x</numericfmt>
					</Flags>
					<CheckedState classname='Num'>
						<value>1</value>
					</CheckedState>
				</subprops>
			</NI_DotNetCallResult>
		</typedef>
		<typedef alwayssavetype='false' additionaltypeflags='0' typelistordernum='15'>
			<DotNetCall classname='DotNetCall' isroottypedef='true' typecategory='3' timestamp='1695827756' typeversion='23.0.0.49152' typelastmodversion='23.0.0.49152' typeminprodversion='23.0.0.0' typeflags='33554436' valueflags='24'>
				<subprops>
					<ClassName classname='Str'>
						<value/>
					</ClassName>
					<MemberType classname='Num'>
						<value>0</value>
					</MemberType>
					<Static classname='Bool'>
						<value>false</value>
					</Static>
					<MemberName classname='Str'>
						<value/>
					</MemberName>
					<Params classname='Objs'>
						<value lbound='[0]' ubound='[]'>
							<elemproto>
								<_NAME_IN_ATTRIBUTE_ typename='DotNetParameter' xsi:type='DotNetParameter' name='' classname='DotNetParameter' structureflags='131072'>
									<subprops>
										<Name classname='Str'>
											<value>_notNamed</value>
										</Name>
										<ArgVal classname='ExprValue'>
											<value/>
										</ArgVal>
										<ArgDisplayVal classname='ExprValue'>
											<value/>
										</ArgDisplayVal>
										<Type classname='Num'>
											<value>0</value>
										</Type>
										<TypeName classname='Str'>
											<value/>
										</TypeName>
										<Flags classname='Num'>
											<value>0</value>
										</Flags>
										<IsOptional classname='Bool'>
											<value>false</value>
										</IsOptional>
										<CallDispose classname='Bool'>
											<value>false</value>
										</CallDispose>
										<NumDimensions classname='Nums'>
											<value lbound='[0]' ubound='[]'/>
										</NumDimensions>
										<MultiElement classname='Objs'>
											<value lbound='[0]' ubound='[]'/>
										</MultiElement>
										<AdditionalResults classname='Obj'>
											<subprops>
												<Input classname='DotNetParameterResult'>
													<subprops>
														<Condition classname='ExprValue'>
															<value/>
														</Condition>
														<Flags classname='Num'>
															<value>8192</value>
														</Flags>
														<CheckedState classname='Num'>
															<value>1</value>
														</CheckedState>
													</subprops>
												</Input>
												<Output classname='DotNetParameterResult'>
													<subprops>
														<Condition classname='ExprValue'>
															<value/>
														</Condition>
														<Flags classname='Num'>
															<value>8192</value>
														</Flags>
														<CheckedState classname='Num'>
															<value>1</value>
														</CheckedState>
													</subprops>
												</Output>
											</subprops>
										</AdditionalResults>
									</subprops>
								</_NAME_IN_ATTRIBUTE_>
							</elemproto>
						</value>
					</Params>
					<AdditionalResult typename='NI_DotNetCallResult' xsi:type='NI_DotNetCallResult' classname='DotNetCallResult'>
						<subprops>
							<Condition classname='ExprValue'>
								<value/>
							</Condition>
							<Flags classname='Num'>
								<value>8192</value>
							</Flags>
							<CheckedState classname='Num'>
								<value>1</value>
							</CheckedState>
						</subprops>
					</AdditionalResult>
				</subprops>
			</DotNetCall>
		</typedef>
		<typedef alwayssavetype='false' additionaltypeflags='0' typelistordernum='0'>
			<Path classname='PathValue' isroottypedef='true' typecategory='3' timestamp='1695834317' typeversion='23.0.0.49152' typelastmodversion='23.0.0.49152' typeminprodversion='23.0.0.0' typeflags='33554436'>
				<value/>
			</Path>
		</typedef>
		<typedef alwayssavetype='false' additionaltypeflags='0' typelistordernum='16'>
			<DotNetStepAdditions classname='DotNetModule' isroottypedef='true' typecategory='3' timestamp='1695827756' typeversion='23.0.0.49152' typelastmodversion='23.0.0.49152' typeminprodversion='23.0.0.0' typeflags='33554436' valueflags='24'>
				<subprops>
					<Calls classname='Objs'>
						<value lbound='[0]' ubound='[]'>
							<elemproto>
								<_NAME_IN_ATTRIBUTE_ typename='DotNetCall' xsi:type='DotNetCall' name='' classname='DotNetCall' structureflags='131072'>
									<subprops>
										<ClassName classname='Str'>
											<value/>
										</ClassName>
										<MemberType classname='Num'>
											<value>0</value>
										</MemberType>
										<Static classname='Bool'>
											<value>false</value>
										</Static>
										<MemberName classname='Str'>
											<value/>
										</MemberName>
										<Params classname='Objs'>
											<value lbound='[0]' ubound='[]'>
												<elemproto>
													<_NAME_IN_ATTRIBUTE_ name='' classname='DotNetParameter' structureflags='0'/>
												</elemproto>
											</value>
										</Params>
										<AdditionalResult classname='DotNetCallResult'>
											<subprops>
												<Condition classname='ExprValue'>
													<value/>
												</Condition>
												<Flags classname='Num'>
													<value>8192</value>
												</Flags>
												<CheckedState classname='Num'>
													<value>1</value>
												</CheckedState>
											</subprops>
										</AdditionalResult>
									</subprops>
								</_NAME_IN_ATTRIBUTE_>
							</elemproto>
						</value>
					</Calls>
					<AssemblyPath typename='Path' xsi:type='Path' classname='PathValue'>
						<value/>
					</AssemblyPath>
					<AssemblyStrongName classname='Str'>
						<value/>
					</AssemblyStrongName>
					<AssemblyLocation classname='Num'>
						<value>0</value>
					</AssemblyLocation>
					<ClassName classname='Str'>
						<value/>
					</ClassName>
					<IsStruct classname='Bool'>
						<value>false</value>
					</IsStruct>
					<StructDef typename='DotNetParameter' xsi:type='DotNetParameter' classname='DotNetParameter'>
						<subprops>
							<Name classname='Str'>
								<value>_notNamed</value>
							</Name>
							<ArgVal classname='ExprValue'>
								<value/>
							</ArgVal>
							<ArgDisplayVal classname='ExprValue'>
								<value/>
							</ArgDisplayVal>
							<Type classname='Num'>
								<value>0</value>
							</Type>
							<TypeName classname='Str'>
								<value/>
							</TypeName>
							<Flags classname='Num'>
								<value>0</value>
							</Flags>
							<IsOptional classname='Bool'>
								<value>false</value>
							</IsOptional>
							<CallDispose classname='Bool'>
								<value>false</value>
							</CallDispose>
							<NumDimensions classname='Nums'>
								<value lbound='[0]' ubound='[]'/>
							</NumDimensions>
							<MultiElement classname='Objs'>
								<value lbound='[0]' ubound='[]'/>
							</MultiElement>
							<AdditionalResults classname='Obj'>
								<subprops>
									<Input classname='DotNetParameterResult'>
										<subprops>
											<Condition classname='ExprValue'>
												<value/>
											</Condition>
											<Flags classname='Num'>
												<value>8192</value>
											</Flags>
											<CheckedState classname='Num'>
												<value>1</value>
											</CheckedState>
										</subprops>
									</Input>
									<Output classname='DotNetParameterResult'>
										<subprops>
											<Condition classname='ExprValue'>
												<value/>
											</Condition>
											<Flags classname='Num'>
												<value>8192</value>
											</Flags>
											<CheckedState classname='Num'>
												<value>1</value>
											</CheckedState>
										</subprops>
									</Output>
								</subprops>
							</AdditionalResults>
						</subprops>
					</StructDef>
					<RemoteSpecifiedByExpr classname='Bool'>
						<value>false</value>
					</RemoteSpecifiedByExpr>
					<UseLoadSpec classname='Bool'>
						<value>false</value>
					</UseLoadSpec>
					<ModuleSrcPath typename='Path' xsi:type='Path' classname='PathValue'>
						<value/>
					</ModuleSrcPath>
					<ModulePrjPath typename='Path' xsi:type='Path' classname='PathValue'>
						<value/>
					</ModulePrjPath>
					<ModuleSlnPath typename='Path' xsi:type='Path' classname='PathValue'>
						<value/>
					</ModuleSlnPath>
					<FunctionName classname='Str'>
						<value/>
					</FunctionName>
				</subprops>
			</DotNetStepAdditions>
		</typedef>
		<typedef alwayssavetype='false' additionaltypeflags='0' typelistordernum='17'>
			<PostSubstep classname='StepType' isroottypedef='true' typecategory='1' timestamp='1695827117' typeversion='23.0.0.49152' typelastmodversion='23.0.0.49152' typeminprodversion='23.0.0.0' typeflags='33554438' flagsforinstances='4194304' instanceoverrideflags='4194304'>
				<subprops>
					<DescriptionFormat typename='Expression' xsi:type='Expression' classname='ExprValue' flagsforinstances='4718616' instanceoverrideflags='4718616' valueflags='4194328' structureflags='524288'>
						<value>"%ModuleDescription"</value>
					</DescriptionFormat>
					<DefaultNameFormat typename='Expression' xsi:type='Expression' classname='ExprValue' flagsforinstances='4718616' instanceoverrideflags='4718616' valueflags='4194328' structureflags='524288'>
						<value>ResStr("NI_STEPTYPES", "POST_DEF_SUBSTEP_NAME")</value>
					</DefaultNameFormat>
					<BlockStartTypes classname='Str' valueflags='4194328' structureflags='524288'>
						<value/>
					</BlockStartTypes>
					<BlockEndTypes classname='Str' valueflags='4194328' structureflags='524288'>
						<value/>
					</BlockEndTypes>
					<AppliesToBlockStructure classname='Bool' valueflags='4194328' structureflags='524288'>
						<value>false</value>
					</AppliesToBlockStructure>
					<Menu typename='StepTypeMenu' xsi:type='StepTypeMenu' classname='Obj'>
						<subprops>
							<CanBeSubstepType classname='Bool'>
								<value>true</value>
							</CanBeSubstepType>
							<CanOnlyBeSubstepType classname='Bool'>
								<value>true</value>
							</CanOnlyBeSubstepType>
							<Category classname='Str'>
								<value>""</value>
							</Category>
							<ItemName classname='ExprValue'>
								<value>ResStr("NI_STEPTYPES", "POST_SUBSTEP_MENU_ITEM_NAME")</value>
							</ItemName>
							<SingularItemName classname='Str'>
								<value>""</value>
							</SingularItemName>
							<SeparatorBeforeCategory classname='Bool'>
								<value>false</value>
							</SeparatorBeforeCategory>
							<SeparatorBeforeItemName classname='Bool'>
								<value>false</value>
							</SeparatorBeforeItemName>
							<Group classname='Str'>
								<value>ExecSubsteps</value>
							</Group>
						</subprops>
					</Menu>
					<Substeps typename='StepTypeSubstepsArray' xsi:type='StepTypeSubstepsArray' classname='Objs'>
						<value lbound='[0]' ubound='[]'/>
					</Substeps>
					<CodeTemplates classname='Str' valueflags='4194328' structureflags='524288'>
						<value>DefaultLabVIEWNXG|DefaultLabVIEW|DefaultCVI|DefaultVB.NET|DefaultCSharp.NET|DefaultC++.NET|DefaultVC++_Template|DefaultHTB72_Template|DefaultHTB80_Template|Default_Template</value>
					</CodeTemplates>
					<AdditionalResultsHints classname='Objs' valueflags='4194328' structureflags='524288'>
						<value lbound='[0]' ubound='[]'>
							<elemproto>
								<_NAME_IN_ATTRIBUTE_ typename='NI_CustomResult' xsi:type='NI_CustomResult' name='' classname='CustomResult'>
									<subprops>
										<Name classname='ExprValue'>
											<value/>
										</Name>
										<ValueToLog classname='ExprValue'>
											<value/>
										</ValueToLog>
										<Condition classname='ExprValue'>
											<value/>
										</Condition>
										<Flags classname='Num'>
											<value>8192</value>
										</Flags>
										<CheckedState classname='Num'>
											<value>2</value>
										</CheckedState>
										<Type classname='PropertyObjectType'>
											<subprops>
												<ValueType classname='Num'>
													<value>3</value>
												</ValueType>
												<IsObject classname='Bool'>
													<value>true</value>
												</IsObject>
												<TypeName classname='Str'>
													<value/>
												</TypeName>
												<ElementType classname='Objs'>
													<value lbound='[0]' ubound='[]'/>
												</ElementType>
												<ArrayDimensions classname='ArrayDimensions'>
													<subprops>
														<LowerBounds classname='Nums'>
															<value lbound='[0]' ubound='[]'/>
														</LowerBounds>
														<UpperBounds classname='Nums'>
															<value lbound='[0]' ubound='[]'/>
														</UpperBounds>
													</subprops>
												</ArrayDimensions>
												<Representation classname='Num'>
													<value>1</value>
												</Representation>
												<ClassName classname='Str'>
													<value/>
												</ClassName>
											</subprops>
										</Type>
										<Elements classname='Objs'>
											<value lbound='[0]' ubound='[]'/>
										</Elements>
										<IsAnyType classname='Bool'>
											<value>true</value>
										</IsAnyType>
									</subprops>
								</_NAME_IN_ATTRIBUTE_>
							</elemproto>
						</value>
					</AdditionalResultsHints>
					<TS typename='TEInf' xsi:type='TEInf' classname='Obj' flagsforinstances='4456472'>
						<subprops>
							<Id classname='Str'>
								<value/>
							</Id>
							<Icon classname='Str'>
								<value/>
							</Icon>
							<SData classname='Obj' flagsforinstances='2097152' instanceoverrideflags='7274521' structureflags='2097152'/>
							<PreCond classname='ExprValue'>
								<value/>
							</PreCond>
							<LoadOpt classname='Str'>
								<value>PreloadWhenExecuted</value>
							</LoadOpt>
							<UnloadOpt classname='Str'>
								<value>UnloadWithFile</value>
							</UnloadOpt>
							<Mode classname='Str'>
								<value>Normal</value>
							</Mode>
							<WindowActivation classname='Str'>
								<value>None</value>
							</WindowActivation>
							<ResultOption classname='Num'>
								<value>1</value>
							</ResultOption>
							<StepFCSeqF classname='Bool'>
								<value>true</value>
							</StepFCSeqF>
							<IgnoreRTE classname='Bool'>
								<value>false</value>
							</IgnoreRTE>
							<UseMutex classname='Bool'>
								<value>false</value>
							</UseMutex>
							<MutexNameOrRef classname='ExprValue'>
								<value/>
							</MutexNameOrRef>
							<BatchSyncOpt classname='Num'>
								<value>0</value>
							</BatchSyncOpt>
							<SwitchEnabled classname='Bool'>
								<value>false</value>
							</SwitchEnabled>
							<VirtualDeviceName classname='ExprValue'>
								<value/>
							</VirtualDeviceName>
							<SwitchOperation classname='Num'>
								<value>1</value>
							</SwitchOperation>
							<RouteGroupConnect classname='ExprValue'>
								<value/>
							</RouteGroupConnect>
							<RouteGroupDisconnect classname='ExprValue'>
								<value/>
							</RouteGroupDisconnect>
							<MulticonnectMode classname='Num'>
								<value>1</value>
							</MulticonnectMode>
							<OperationOrder classname='Num'>
								<value>2</value>
							</OperationOrder>
							<ConnectionLifetime classname='Num'>
								<value>4</value>
							</ConnectionLifetime>
							<WaitForDebounce classname='Bool'>
								<value>true</value>
							</WaitForDebounce>
							<PassAct classname='Str'>
								<value>Next</value>
							</PassAct>
							<FailAct classname='Str'>
								<value>Next</value>
							</FailAct>
							<PassActTarget classname='ExprValue'>
								<value/>
							</PassActTarget>
							<FailActTarget classname='ExprValue'>
								<value/>
							</FailActTarget>
							<CustExpr classname='ExprValue'>
								<value/>
							</CustExpr>
							<CustTrueAct classname='Str'>
								<value>Next</value>
							</CustTrueAct>
							<CustFalseAct classname='Str'>
								<value>Next</value>
							</CustFalseAct>
							<CustTrueActTarget classname='ExprValue'>
								<value/>
							</CustTrueActTarget>
							<CustFalseActTarget classname='ExprValue'>
								<value/>
							</CustFalseActTarget>
							<LoopType classname='Str'>
								<value>NoLooping</value>
							</LoopType>
							<LoopWhile classname='ExprValue'>
								<value/>
							</LoopWhile>
							<LoopStatus classname='ExprValue'>
								<value/>
							</LoopStatus>
							<LoopIncrement classname='ExprValue'>
								<value>RunState.LoopIndex += 1</value>
							</LoopIncrement>
							<LoopInitialize classname='ExprValue'>
								<value>RunState.LoopIndex = 0</value>
							</LoopInitialize>
							<LoopOpt classname='Num'>
								<value>0</value>
							</LoopOpt>
							<PreExpr classname='ExprValue'>
								<value/>
							</PreExpr>
							<PostExpr classname='ExprValue'>
								<value/>
							</PostExpr>
							<StatusExpr classname='ExprValue'>
								<value/>
							</StatusExpr>
							<CanSpecifyModule classname='Bool'>
								<value>true</value>
							</CanSpecifyModule>
							<CanEditCode classname='Bool'>
								<value>true</value>
							</CanEditCode>
							<CanEditModulePrototype classname='Bool'>
								<value>true</value>
							</CanEditModulePrototype>
							<CanEditParameterAdditionalResults classname='Bool'>
								<value>true</value>
							</CanEditParameterAdditionalResults>
							<PrecondIntExe classname='Num'>
								<value>0</value>
							</PrecondIntExe>
							<Requirements classname='Obj' flagsforinstances='1' valueflags='1' structureflags='2097152'>
								<subprops>
									<Links classname='Strs' flagsforinstances='71303168' instanceoverrideflags='72286233' valueflags='71303168'>
										<value lbound='[0]' ubound='[]'/>
									</Links>
								</subprops>
							</Requirements>
							<CustomResults classname='Objs'>
								<value lbound='[0]' ubound='[]'>
									<elemproto>
										<_NAME_IN_ATTRIBUTE_ name='' classname='CustomResult'>
											<subprops>
												<Name classname='ExprValue'>
													<value/>
												</Name>
												<ValueToLog classname='ExprValue'>
													<value/>
												</ValueToLog>
												<Condition classname='ExprValue'>
													<value/>
												</Condition>
												<Flags classname='Num'>
													<value>8192</value>
												</Flags>
												<CheckedState classname='Num'>
													<value>2</value>
												</CheckedState>
												<Type classname='PropertyObjectType'>
													<subprops>
														<ValueType classname='Num'>
															<value>3</value>
														</ValueType>
														<IsObject classname='Bool'>
															<value>true</value>
														</IsObject>
														<TypeName classname='Str'>
															<value/>
														</TypeName>
														<ElementType classname='Objs'>
															<value lbound='[0]' ubound='[]'/>
														</ElementType>
														<ArrayDimensions classname='ArrayDimensions'>
															<subprops>
																<LowerBounds classname='Nums'>
																	<value lbound='[0]' ubound='[]'/>
																</LowerBounds>
																<UpperBounds classname='Nums'>
																	<value lbound='[0]' ubound='[]'/>
																</UpperBounds>
															</subprops>
														</ArrayDimensions>
														<Representation classname='Num'>
															<value>1</value>
														</Representation>
														<ClassName classname='Str'>
															<value/>
														</ClassName>
													</subprops>
												</Type>
												<Elements classname='Objs'>
													<value lbound='[0]' ubound='[]'/>
												</Elements>
												<IsAnyType classname='Bool'>
													<value>true</value>
												</IsAnyType>
											</subprops>
										</_NAME_IN_ATTRIBUTE_>
									</elemproto>
								</value>
							</CustomResults>
							<AdditionalResultsHints classname='Objs'>
								<value lbound='[0]' ubound='[]'>
									<elemproto>
										<_NAME_IN_ATTRIBUTE_ name='' classname='CustomResult'>
											<subprops>
												<Name classname='ExprValue'>
													<value/>
												</Name>
												<ValueToLog classname='ExprValue'>
													<value/>
												</ValueToLog>
												<Condition classname='ExprValue'>
													<value/>
												</Condition>
												<Flags classname='Num'>
													<value>8192</value>
												</Flags>
												<CheckedState classname='Num'>
													<value>2</value>
												</CheckedState>
												<Type classname='PropertyObjectType'>
													<subprops>
														<ValueType classname='Num'>
															<value>3</value>
														</ValueType>
														<IsObject classname='Bool'>
															<value>true</value>
														</IsObject>
														<TypeName classname='Str'>
															<value/>
														</TypeName>
														<ElementType classname='Objs'>
															<value lbound='[0]' ubound='[]'/>
														</ElementType>
														<ArrayDimensions classname='ArrayDimensions'>
															<subprops>
																<LowerBounds classname='Nums'>
																	<value lbound='[0]' ubound='[]'/>
																</LowerBounds>
																<UpperBounds classname='Nums'>
																	<value lbound='[0]' ubound='[]'/>
																</UpperBounds>
															</subprops>
														</ArrayDimensions>
														<Representation classname='Num'>
															<value>1</value>
														</Representation>
														<ClassName classname='Str'>
															<value/>
														</ClassName>
													</subprops>
												</Type>
												<Elements classname='Objs'>
													<value lbound='[0]' ubound='[]'/>
												</Elements>
												<IsAnyType classname='Bool'>
													<value>true</value>
												</IsAnyType>
											</subprops>
										</_NAME_IN_ATTRIBUTE_>
									</elemproto>
								</value>
							</AdditionalResultsHints>
						</subprops>
					</TS>
					<NI_Data typename='StepTypeNIData' xsi:type='StepTypeNIData' classname='Obj'>
						<subprops>
							<EditPanels classname='Strs'>
								<value lbound='[0]' ubound='[]'/>
							</EditPanels>
						</subprops>
					</NI_Data>
					<Result classname='Obj' flagsforinstances='4194304' valueflags='4194304'>
						<subprops>
							<Error typename='Error' xsi:type='Error' classname='Obj' flagsforinstances='4194304' valueflags='4194304'>
								<subprops>
									<Code classname='Num'>
										<value>0</value>
									</Code>
									<Msg classname='Str'>
										<value/>
									</Msg>
									<Occurred classname='Bool'>
										<value>false</value>
									</Occurred>
								</subprops>
							</Error>
							<Status classname='Str' flagsforinstances='4194304' valueflags='4194304'>
								<value/>
							</Status>
							<ReportText classname='Str' flagsforinstances='4194304' valueflags='4194304'>
								<value/>
							</ReportText>
							<Common typename='CommonResults' xsi:type='CommonResults' classname='Obj'/>
						</subprops>
					</Result>
					<CanEncapsulate classname='Bool' valueflags='4194328' structureflags='524288'>
						<value>false</value>
					</CanEncapsulate>
				</subprops>
			</PostSubstep>
		</typedef>
		<typedef alwayssavetype='false' additionaltypeflags='0' typelistordernum='18'>
			<NoneStepAdditions classname='NoneModule' isroottypedef='true' typecategory='3' timestamp='1695827487' typeversion='23.0.0.49152' typelastmodversion='23.0.0.49152' typeminprodversion='23.0.0.0' typeflags='33554436' valueflags='24'/>
		</typedef>
		<protected>E@=3HJL4100hYLEDF=_K@0@mKCYo_1KN2&lt;dfASB`]CF^aUXa]Y\4WmD]203VfR;kS;KgdGgF285WU]RaSJgcjNlM7MFC4LiX=a48\7dW:L403mZ4BUAT82I&gt;KQH8\T8QFE`DA2\LAVbMD5YRMT13fTiE^i&lt;boIle7[=C_LeZbKM2QXhVTH;?4hTX]A[17:2T;Dh\^Co3kY9PA5QK23^C]l262h09La1?5^k3J0BQZ@@EeDRZTO=\cKd?XKjmGb1N\X&lt;J[IS9OXJj22Qc=R\WEEn\IKCaHCAUNi97;EVjaJCX4&gt;UU36B3oib::mkjjIJFOY^^C_gK;?Ngamc6b1^HOM^Rl@oHoiaG802US0o36;lHiif[]oe&lt;FRliGlo^CMk69OeFDNDnIQUXNS=iA3JmW&lt;KbcFOCL6bWF;DdY7d2\SSH4mB7[^9gAb5EgM5G;l^DR5mXURj&lt;_=4b_aTDS965fd7ACLdkeA7kamDL&gt;;lWi[PA07_B@&gt;cR[mGK`_XMGdK4NmjkVR8?micjQcMS=oX^9@cW^5\93S[[2ZkFbBiZ=Q@AM0FkKdo:gUd&lt;lVVcfi&gt;bV3&gt;kl[1UR_FW&gt;JkW]_EREPX34oO2LYb;J&gt;k9nWLWBEg6Tk&gt;koggGTQ&gt;kL6kJL@dKQ2_E0Z</protected>
		<protected>E@=3@J_4110h]L]Mg[cK3fBoj\Kifo1C[KY_3VgFm3_6n&gt;DfdTDgjaSF_LdVUJaY::FII@T:GB9LaYOo80OP^053LBBVb1G?:50k_;g^GRo0d66oFiLP9Yj_&lt;in7bWa&gt;^Mg8QTL]aNknQ&lt;fKg&gt;dZ4UNH1hn9^ngMFIldmII\VAOn1GWQ5d5AX`LOL]fj_K?ojng=[==no5Xf3Lia5b2c0DT]gGgR7h`V\HXhH1;9fnbcmU5A0HVikcS=6TJR[&lt;X[4TXFI6?7VKMLmP=ASLhc&gt;5necOmHoOYfefjI\igXY:aLUH_gZ[ce_kE=bCacATN&gt;n[IM[]M3m^^NGFR^:5;89_AG;Z_Roff^o^&gt;&gt;ef&gt;NXW=nanT1J^2Vh?7o7L]oi`O9_WKY&gt;lLl7L?&gt;Y^^n]Mlj?ocMVSWnm[&lt;j^ckk&gt;g^_TcS7gMmW?W?@KgcTjI_ck3k3k33_OoZPe_nigfRokZTOW^XVO&lt;RU5M&gt;Ko4i_\=n0g5^T4]8?[L5AeL9B;Ic65LnL@4XVMeH\Jm&lt;mi_cnVSCYSFW9R_LOUdbJl3k`cb2LZd1;E`]gO`S^Geak4DYQK^M8RKF]NAVo2WT:o4^Qg&gt;f_HPcEmSNc?CLMMi6^I_WgF`@d9L^5ojEcB[D?^CXON?&gt;7n7SKo[Qie`Rb8kN&lt;T_^WhomJ=nigX[Fa9H&gt;?U_7G_CAUo5]5oai`k9oji]&lt;&lt;aAd]V^]XIFkgUFnbW1[n[]eJHIF93fIC7`UFR9Ojn_691CUTOn6eB9K]ID5fk5OQLBWn:&lt;VOWLg1TS&lt;nAN\l&gt;?5C0`G]7W:;B`B6enZmZH^UDLW0\\;2aWXHBB3gAHk91bmdn[YDiLGgA_Y9hHU58WMj`19J?__RQL2GjYZ\R\VT2^\Y;jG;e0oL2SW&gt;IL=KVfm`Y38Wn`T9W@jf8iEfN:@LC&lt;Ha_j0CGE&lt;HOJjXBRll_NLReo_^K7CQWihN&lt;B1::YXdSaG&lt;XFnCP94dQXb;^6V07F&gt;TcPmn&gt;4QE;?9JkF`g80:`G?AULFSY^XW;4XL^_D=GZV9VVODc_[=]dL]b=O;OfiP=&gt;5cib8j&gt;=RWA:daI&lt;2eI:Nc;N=;o;;G1gdXcHoMgYK]UkaSkY6Z@TOYS1\OVN0;FYa\9CCTUX\3;id1lJ5gCHXEQXYCaQh^91nScC_ZY8EjZ\S1oVnokokQamSCgoMm[?G1[gIPfkCnogRh0:=8lEk6CX&gt;IK76j\`Jlebl]K0hNhT93eaZP&lt;5^@2lJ\hIGZSZj15hIDhMIni7hMj]8OiKjM3mm^^P?GHMXJd_Ydm1HN&gt;I&lt;Meg6Ee?9bAVLXgQQPcXSO^GchaRkmNI&lt;^72WgCdQ]nP\4e7VRbme]\ZbM@Je4&lt;3ag\Z[L:=EGQ6Iof[ObDDLXAG99;mW=?9ZZHSg5BBOhI0if:H8C@33[NZR\]WGN`B^[OPJojm1D7TAh6QD]F`:1D7h7c2kDa_kf5Hb^@Gd71XgR;]D0jNRRiYb5Of0El&lt;9DiJW4UgE]@1_V]@Na1G:LQ6M[^0ciY8A0IcJA&gt;l@\kcYd=S:H=eED\YDP8Og2Vj]QD:3NjCIf3[NK4WDP\J&lt;VbLTCibSSOdCIIY3a3lG]JlQF:IJYJ0YMnKiK1PSW[C`L=2`]UbF:853fFb:kS\]Pnn`R5a_ln@:QZ:FbB46[Gm5liH7WGnPe[mRM`I0\iXUW4BF=M1cbU;KdHXN&gt;05YaIU9Al]i8Z[^kfbCbX9g0LZ&gt;:=S\HIlW9X6;SY1929N3lJ=j2@I\T;d;bng``W4C7EgK1Pg^0943\AN_Pe:iE^e6FFgblY?WN@nWln]b=[MeaX\^Be]YdU@SKMOo3^T_b99eFn6bh3b5bAH\&lt;I@WYWEMNTId61CFUc3EfmKNi:[VUJ1UKEN9S5[SBRgi1gZ`WN9ZI0PZeT7]ej]0LgFX:d;mSUZOBYP[[@g=;AZgL[20XFQ&gt;Ti]I;UFR7K7M]BZbJS1]K:aB5@S7DFm:H5IFR=S[YfnK&lt;8T6]8LICYk&lt;a&lt;aJ2bbI:93mDbZIVLKR=WUFRBLY&lt;Vf3YT4ooD;CWI^&lt;AL5ZJcC4enlh1\Mfd8`9DSPH&lt;B\Q7:[Z7eJF9JejCi\[T3kZ[cKFE^Nk[XXb&gt;ZI3o4U&lt;nK]R05EhW9o@7Tm?gE8mOlJha1=dFkCE8aYImG0CDW@hi;TVKSeLIhDh^MJO=fo6VSdYCjXadJi^KbERY;ISmHiF;Uo:;j9EnZ[o2eORIA168TVmH2^2F;:U\KeeRmTIN\3XSC1E51MY7a]&lt;VgnnSESCl@e=9nJ33XQ`h6YE11iiH&gt;Cm?okMJj0n\&lt;b=EF49KnCQ`CZc7P7AMa[ZX16LO6]^3&gt;?Wa0@BI_&gt;EO27VO4n07gNfgNj&lt;c7X=Y\7jN3LhAaKI8ISDAT[cbd:1jGhi&lt;4B\UCO7K?]B;n8K4YD2SZaa=31NESB?:lgb:l7T=m1S:VFBo8QfO4N]63@n?SJo7\3bBo]4n6TUCADX_bceoXLIj:Jo3aVO1G^[L_n@0Om@0@LGk?l&lt;m6]=4@bh9Jci7T]ZMZbn0EmJHDH[D[V=ZMeA&lt;UlDFHaU:S5SmAG?MD`AFEk:R&lt;GNOAJ&gt;gSWPFI\ofX]0]XiYWJJfc432i\l&lt;E_&lt;n_Jl=34S=G8le^m1dmi5TSSB]JQQ@jOa^V65_3WN::]Q=e5_C?=c`nS`8egW846H7=Ll4]ZIjk&gt;@^iiU`^n^`FjOUThilcUjPBQ[iZmM6CQ^c1aT=7fJ13aTYGA&gt;ieJiZ]h&lt;@f\&gt;W2VRCa5QEe=00MVlRS?BNoPLPhA\i;43bojh]L`TKnCdh6L^cb__mTQn&lt;c1hY1WF71En=1m_]\6d2:UG@g0fj?7;=GhbJ;ViQ7SoL?_=ikK`:X0&gt;[2BAT;Tf[UVIM[f=4i&gt;B0FcR:FKG9\a\cCamj]&lt;Xi0YOSH9EjM@ISc6RcP&lt;m@eT]X;6Ub:RZeTPj6=j;HMSm1ja4]L:MRLH9S9TUnOR=MWn]eIJ]W5VROh9ak`n5&lt;LV5N9641POlfKd4]^DMl``aV``d^ldGM;KbEXbZi_l4XIjbn0mggL&gt;a0f_J3&gt;LVhjG1;DY]i?Dhc9Qg7=M=@gY3:87f[`0dZnZmcJaeTPnaHXfnG;b]R8?52\ggVi\nRKTEAIjJ\1bSi_96E3JbL0]6L[d5eZ\OfN@&gt;hkUKg?8V]3Jbl0@E[Zf2`Di?m6aXBc`1JPRi`kZ[796NZ&lt;@hTd=o&lt;PHnEMO=_0H7LbDUDBRlC?Ld?O?X3LBJ@39?C=@V:3nB6:Xc8jheD8adS^I8W\INS&gt;RRPRR?n13AUmMD2AC0ajS_K3j3hET5TeJM7_`eTTECKG31jmNB_?i6kbT3jWia0;VX`jN3^4nk^D?b[7\Ij_FZQB&lt;S8naC1\SaEITDd4LK61;BOcWORblBjITj^A]\&lt;4Di[??W?JPEFES;TF2C;l7dgngFZ&lt;A4H7]J@O[2cB9Ra6U0aWS5`DGIOWb3RL]B`M;FP15Wgg8f@IMFn57BKRL&lt;PcK4mVNW8e\aT\=?1?QeD;&gt;1Im\45f59i0ClQ:9QC`AMLPUj8DQ&lt;&lt;`__M&lt;BhS=EJ51I&lt;8V3FFMWRS0?5iMM9ALc6eRR2=XLY;?bdhCUh59BDKL:]\@5LD@B[:LGLB?oBgh^m`h;lLm`j&lt;PO;BLPVMbf4^FEE5Qn\C3&lt;3YoY;a61;I6N;16Tod2leX2^SJEeACLJO`7oOh107VMbX8W1[fcBG;U5cLEAEAI7?JS5SfE1AhUI\P0X`&gt;4g84&lt;Yi_C8]?XCf:0n9QT3JjlV72RdecSZTfiKO340=HjnTKR57D9_`?C71:`I`=3PHO6OE@d2PTe02fd51=@]T]T79FjI2\nW@8DkSXEE;1;eb^0:AMSbCW_^Lc=@9iZRI:hWQMf@PZIV3FL1FbX[0ZnC?Jh5?LD4CXfYghbbT95Ko571_SZFDGF2eE:7jFiLW\8UQ@dFSo]@G[h5986jl:LF[UV6dVbJjU?NI&gt;OHOm&gt;ZFcFOU[mXieiJ_nEWQ\nWbei[e?ImO^MjULHUP[G3?43M8g^Wh`XkW3[@T7ADM6b_IU;ITOeC8g5@?9l3&lt;hilXNYWQ&lt;T\=_VE^^nUb[^S@8SdQUDK5ATI&lt;@Tk;O&lt;HF;KMM=U?Vd&lt;^R9GOOSQ5:Y&lt;B&gt;9jXDihZ\8OX9Y`I]WQlENO&lt;m9HYI[&gt;R0N_X;\J5T1E9`lS&lt;J\g`2?&gt;@cCK1RS3eiTZTW]Mn`Dg7n&gt;7mnOONGeO_YOlH\lniElk`Lf`Q9ie_&lt;&gt;Hg47ZE7A:dOeMRL6mV`SY;=R6OlIG7&gt;H&gt;ObTngY6]_V_g[Zg7mnN=nM3@4W8_^:Vge^\nDiXZ1DTOT;X;I0G9fe\M^oYGf1^gkPkFX[@m;j=&gt;f6_jdkIkLe\M^EJ3FOonH^kLbLLkRc1GUo;j6cNV8b_O`S^[[SjbdNDHG89\oX[Ioi;n&lt;d`5j_c\;&gt;4FKLUm;iFo@6[[mMIBBIfdIA_FEf4jcR\g;OWoeKkc\`;4PW__UAU2C9gOmZSPDiMnALPOXj@]8JmSPVAWQ]19^aOXXKZ[ImKY[]Em[eO&gt;_bOX`^S0nKA`N1g:TKQQfS92kK41NR2WiliAnFAPO9XPh`IW:`\C5hf92ek41;3FfS92kF41n\IIW&lt;:\C05&lt;Gfk41ImR0L0NnFAPO?X@XM9k4H1]?`\C5jf92U=lN`HW:3dMn6B_o]mBFaSH1o_l2ENY[Z_dUliJ[@]cBef:KIkU]HEZIM8FNAY[Om[dF[joP[EffX92=_[?Ykbcj_LEWQ\nWieijXU]nNWei?lGZJcJ=HUOXV@omHQOXiH`??DD7e&gt;Wn[R0iY=;Wb?&gt;D&lt;dBA?j1coC7Z&gt;RGj_]d[jlNN_M^Qg&gt;f_[0o0JWgg`CkhXXJ\0OG3Od_P9jldf^N=X6__GnnaB7mUghijGZDlmkZTd[Rh3Yc66?&gt;dXXUlGm:oIl5ocOF28G9oG&gt;&gt;fKkRDR3&gt;GAJV`e]D[QFbIiCFL\UId6\&gt;QRYYd;a[;Q&gt;^6Sge[[Bj\\8;bVa&lt;1AWZdG]AAQdBHYO6VXWHZFPXJIIHRfBRKNB7HFDHA?RcAf0^D8I&lt;BO;AL@44gF@]SD@^=f2VP^nmW@aJ9GHlJRVNdC;06YMAEIWX?n:\h@E&lt;hY9bSHVbIm[7b?S=@7j[0FMR?D9dIQi5VFXjYl3?Uj6FnRE56K@9]4ZHEJW7NQ^9UbDk0iAT]3]YF&lt;50n&lt;2DaTY5T8b5he=3^hl@7YPZM@mbL?5gdHNNW5`:W&lt;[Eho^38?;R459L4CNiJg[egNX]3[_&gt;la=X^\@DOV2Bm:1Eg5jeIc1_DfoKN?Kb?A]a_G3a?@2AD&lt;8hXRDPCTN]hTgh@M:DJiiK@P]R]Jl?Rh8KF]jLnE_oW^gG5:OCRdK9GAkTXAQ&gt;aPT1f&lt;b0I19P6LJXR6mPA6@CTS2C9TA4\\8842oT3=&gt;9@J3j06Q`aU6P2PJ8QdIjUc65YJ12ThVl@:8T561B@hUAoXVPOb1d1RPnj3XO@1Q3QMkdQ;m:V&lt;00l4=`lV2VATPg&lt;R0kBCa=2@eJPCe4bL;`ih=Pi@BNRH0&gt;97F7B@&gt;`2A7Ol=3Jf?`T64&lt;]372]T0HKCIh=l1Y311eJh3JIHJ10RcA0@a8YbQ`I3i4&lt;XS_GS@T&lt;Q3b2210`60OCS\P9SAQd1=`bV5E2ODdA_LZBlhFU1a&lt;5X3=0LcB4G62`0`@\j@0FUT654AOa0Q^84=FPEH&lt;PZ705FVa_8B=a4ZU084DC`P:I&gt;:56PIXP?&lt;T:&lt;S7iAZ6K8A]CV?5@6ZG8XHaXB6C09X0P8I6R6]@DLoiM]F^Woa7KiKijfa66SG&lt;dQ7U:j:lXT91N4R;;84RI=K0R5@K7fXR=H\A&lt;C20W2?]1OTFNTDdY9aM8MAVlY0mn]kdhff9E?e\iM6\TjoOM^A\CO&gt;?\lcXM\jefgn[2E]OA\Q=lcDhmQM2BE3Ah=Q8eLReRcGAZQA_&lt;28e1X`=e4HX2W=PjQ[I@KEEdbDPfP&lt;6C6&lt;&gt;5fP&lt;3_H1Oa6@^Y6GYY8&lt;bDd7GJW5F:RSZU91E=@RYU37XJV7UUg@P`QT\^aBTTBBS6@8BX@Y@S:97YZ0AAV61A9=&gt;lJTQ@U[51F:_]9e=mA\@ZYV:h1d&gt;fB\T3=d4AFjKM;Z`A9hVA&gt;E&gt;XT&lt;Td]o=I?dR0g@59;ASXT4GkKFaYPabWU6n`]RF1Pl`T1AlY@D4RT:S@:1W0709B504RREB[VDHU^49gI:9EI:\BHREBY[D\0HXU0:h4h?O6L1d_I6g&lt;PH&lt;97A8GS_A9UPST`HL8`hP:?F:lCa1bJi_DW^J46l8KWGe8^\b8@_l_URlghV?6j?TTZR?2Ckn\L8DUFEUUjM@gHmIPj6R8ULfYeDhWA7@:S&gt;CUim@2KFZNG&gt;oCXMLWT\=8MPO@DSOTP`GNhaR4Rk8F3_&gt;RYR9^AA0KX4HFVa[CH1b0:PFE`JNjiYPBKPH;RJi;`@`58@VJUAI2[nFA;SC980QcYRYF&gt;7&lt;TBW?1a[\`9RS]lc7j\V0FkAh8P&gt;TZT&gt;Uj]e&lt;XT5UZIVgR3[Gd39CWBCNIclIFB[=?H2e&lt;noBf4Lc7kJeW:X&gt;M6IW^PH4iACTDHFc9JIAmClL=lB=YYe:FUcX[_THLQ1GUaAj=P5_9R`i&lt;_YOh6&gt;[1WYOZfAjVBb[ZMY27RKgS?PI3Rc9lil]TZPbOH=ANPLBjDXH5AE=6;3AXlYAb09C`Uh0OHLAj^U?\deF;WEdMVWFA8lA]YEZQI\anYK\5`Cdhldo^9Zj9</protected>
		<protected>E@=3NJgN100h]L]MGk_S3fBo3k7LCg8f\0V&gt;Ik8S9WK7cG9Z?T&gt;FS7lLoHI]kQj83ZbSXXEUIGBg4g5oilAj@HDik37\m^eJIQ15D&lt;BcE3b8c&gt;&lt;W5W]\KdCW:iI@g7=7loTlk7acZA`BiS]7k7?9hFVcVIh92G6&gt;h?:ODmWJ7O_]F\]bHOnG4WQd6QA`QHM_Be&gt;fO&gt;njZG==_=^emPn^4naB&gt;bd26[WnmYj&gt;3L7&gt;T&lt;BM4UTnYV?^E]ja9D69m&gt;mh8[9F;TSZbB7WMQdl^lEV&gt;5N&lt;h49c]KCO?7]3Y3mfJWoC]ek8XRH:B6IgWggXTof^PDCWTc`RlF^MWeO]AW]VBN`?aTFi\Wb^n^^nJjegZgkGfgYSA;O9Z8K@g99o_KSML_negNY_c\lMKM&gt;6?G3Q^7a7k7Y_;NofGMWJPInnTlgoD&lt;k&gt;Oih:F?NC[_V9c[?CZS7S^S3_^oKQo?m`oj=1k`dK7ZYVO&lt;R523]Ko7i_\=^i_9M8XKcIRh8SZICT5bVSlIolW?8&lt;jj`eciif_n&gt;VS=_U86NEUoel=f8Y3?O3c8;X`86^[QmMVSSkkOVSJCD5DddRF_B&lt;k6bn1SSA:Df?dffkV7KK8aMl5gI4N55[g&gt;NWh``H&gt;iJ;jdYCBKB?_BX_&gt;_^6iWmaBohh\nZ=g_7d__ka[o7m?GoL^\FLeg7W[g3QEh`cGmoM^kZofh7gPEAZ86WUP=&gt;gK^?&gt;f2?^OYOoN\SFhFP33V&lt;;_bZD&gt;?MOH69C5U\il6Ee;K]DW1F9MOPBlUN?8Voik_27Xbhg\OkN]97Q5^J&gt;[DGQ3d&lt;mdEV`fM;Ue90H1_KLWAP1VY]aIebRFNa[kULL0g?oJbB8@K;]6jc2ACbJ&lt;l4i;5YCEUKEE?HOE4BE2^g1iol6B&gt;Bi;:g\bd@EG8V`aR586mkL0[KTLT6F8&lt;l[g8dGVfLI1l5cW^\T&gt;5C5f_4@@LFm?E9`?L8LQ9LjXdOB\jMADX8]2W=Q^8c48jgJJ?POI_R`&lt;aG&gt;HO;WQJnB:^ZFFdPgaHbLmn:e2d6FGaAES;RW7IJ?K23Zk2&gt;57mVC@o8Gm1Th`[okh_gf&lt;GL?E&gt;lQY&lt;XlPD1WbK`&lt;XCL]6_AUWh\92?Ed[o`Bca8MRAD?TaEgDA&lt;&lt;kOK1niOn]nYl?Jlbo];Qn1CK^?_nk[mmhnk;^WGCBdRO]Q14NRV6R1IkVF&lt;=0n[F^&gt;&gt;Mo4Q6ael&lt;W^92:6kG\KCa9onP1eW&gt;DFoE@&gt;Fn^A?Lo&gt;&gt;AM1kE@7FH=IJd_Cdm&lt;HGX^Q?8KZeO53?\Id9?NV&lt;^;=1:V=^jlCM?]^_koSa]mPd^kLo?3e:X1aCCo^_&gt;PFh9fI4X6H;JNOFDX\T9n;h;jcDEeV230TESPO?oi[XVb[6TTofbD7\@R`QIRAP9Zg_8&gt;CCQ@Qo^^mPWO]N_@R:U&lt;Edo7Cg1nX0[BSiJB;IA56GTdf0Rba\oLN&lt;d_MHCc`]Y2R]XieHh]^ZL;0h2FW4EEc6HgIMk8i[k`lUo^T5@TN]cSCe&lt;E9SbC68?5YGcmF4ZI9WRYC44\V[j2O?]&lt;Lh:h?Z5mfBJ`W4C1GlGWUJe3IOeoB?JHHXAiOgKD27[gH&lt;]K&gt;UjfTS6G[?FQPG=2Y]]JI;8U3&gt;Fb:kS]]Qnm^5cgOin8]5XIIXJEJ\S&gt;LcC9MCIj0gbUBg=^5h2372G9IMJKM`UDLSddg=4J89[CJ&lt;RTKif9ZV724_3knL8cUXIXXJaIC1Y@PH[1MI&lt;0JFC2eA6KSSLBfFcHc?Z96;aR9C4RNLL?l8acaNOWgCY5Z\E8]_FOnReemDgB=?foE5SSiZgT[UPSLjhcdIae\E;DX`\&lt;`U=iV;4EaXVZLELD&lt;iab]&lt;3W\;fWk_jTlf7F&gt;KeUF\d8]]gV&gt;B:_C3fFA7oBDb1Edk8oJZ\X9hoPA9c::]&gt;66&gt;VYfY03l_=dL:197TIWZ9Z2fg;^TAfN6KDB]=e4]CUaU6XI2:JL\RVZ[`dbeDk6]1SMao24edJCG]ci4@JUa3`V@3miBd;_\fJ`B\Z]3ET[i&lt;&lt;iG?VmQDK9a6;f5X=mXd?DFVhHFTTDCX`@CB`kX5eQS9hdmN2ENZUlk35[lbQiFa^g2KEgaX2LKTT0Vo_L8PBLjVTgTcbYo?`ZM&lt;O]lH2SJVVCE8aU5SN@SBW@dc;&lt;VK35jID9mgko31ff8NOOn;`_FA0kmY2OK6B&gt;da]9VnUj;[9&gt;hlQ1S&gt;=Kl[A6f4P8Vn57d\RGKPO_JhFeoWl;;[8D\5PhS]Gg7Tf`Po?^MT97O&gt;f6KCRl2SHPD&gt;64Gmjccmjoof4egaQJh^hO&lt;Dc:93YRIo4GYd9Z[T6Hcl&lt;EM7LI&gt;`RjYLGUB_1EC^R?AmkXR1oNE&lt;?5jJIJ2n1GSSRb&gt;`G0ZSXGGUUmWTA4E?2`HZFTFa&lt;;VGm1n8CM@847AA6SR]FAAFlGGF4O@Z6C&gt;d&lt;XDaBbSH9mN57ASRFQa@EBWDa=;c3h&lt;TSiHiU8KK`Q;2XCRAF1a8C^^ZHI3=H@3=WANOKX`?YaDB36C3X1Gk@VKm[a5:d5VUMU;B]O@Z]A9kcnBHJBDKCUe\97cCBk4BD8HBZEOn5;OnAU2:WMoOJ_0kHf:7=DlZ545f=YJKOLbM]XI59&gt;I=9a[mjGTbje&lt;dS@]FQE8M^BgGCn;@IU`f[OS=ATD[c\PAXNb]M&lt;U8a[Y@3Rh=S?OG92]W7lf=?nFJgY&lt;LLHoa8JLVJ][jf2lMa=JE]\ZI&lt;R6VF1&gt;Sf0SfalKa`e@K&gt;A4\W6j5=7e3T3NURcC7N8mAPa?J0iL?^0[W\\FO5SnE7\\mk6_ije`lTOi@5DA@EM[X\J[Wad`PIRjN99&lt;TZ2SEnic29ihY7nWiShTK[1I5XF74BIR3\^o&lt;\N[M9PPn9eHVF`BB[QIgn@afR5oOX1g`]cVkKQ_;ZMREP8J4ASiMgL=IXEf9ZSFDD:T];a9EEmF?[dQB@VCd=;EbeEn3]_L7EFF[EUFHmcZT^lCXiI`5e\T@2c4o\UfhJQBFlebXU4o`NAlbIm;HE:X:eH_mXCIhn?iiXZiB3B]o62BihAkgc2BI5gFd[@9PW&gt;]M@d&gt;Y:K6WkF`0ZCaZkgN9TG`nD7YfGj;bT0X_2gZgVOeRVEKW@E5jR]3U`jO`g1JIbI3\bMZAF[X9Egi0CgZ;_[A`g3LIbB3@d\YKQK@D&gt;=H7;?^2XRL`7lOE7A&lt;&lt;fJS1TET]@36mGfdlnM6cdaHeDD:9\To`l@om&lt;Eb:8=?6&gt;0dU[VZl5&gt;DBANe`Y[@Bd@^AWQRKSj?RP42AOECeIi?D`aDP6=G\`BHOWZ2LRN?[H:M9LWZ[[FRHU?WK]]QdJ;NU=c9N`Q2Y^Y^7c&gt;PNMgbigG4=_bEjd3T3ABWa8H5ljX3&lt;&gt;d4Q@XhADL`Ea9iiM54Yh@TkS;aQfoS;SN=dXRZ`2\U`Bn?amHO\63CBSBhCejWZ&lt;3PaFCPdVAT07Meem0ZWRcA&gt;GPa9FEDTo[7Y&gt;mZd;&lt;jBFaQ4IlLXiV;0\`STG@Y2l`kC_3iC\S`EH&lt;ET@D&gt;5X7W&lt;2O4c&gt;6`;V62U4cob8[\lNDHADRL9`;NXY0jI4MDW&lt;E]5df=E8A17@:h3_MbTK&gt;U==]BHL89j`G5K`7B21G[UTHOjLgG4l=EQn;L2@B=9&gt;dY9iBMG[QBRHLOWbM39?Ii=QIa7QJf1QZhm`Yoj@UkV5bodG?FBe&lt;oM`VX;G=lCUN0m\bdef5`g=dVDf]AF8UbM=^RNB=\BP6@W2GK29Vd_QK8_XMC:8SmULF3imQV3YMdc[EZahO[37o@ljI^;SQ5d9lOM70W:8NEeC3S_3@?TjMUBJS0NZB2:HYefTR7fj^K?oTT8L4k\Dne9&lt;mEY0\JMBifBP&gt;jW6eYcLi7d0a@Z]TTEm2T]Zg1Z@Q[^g7CCl@R=JcRg[M&lt;lbna1R==RNi`\khA\XV1^WMSkL@&gt;Fb2iD3dE]1If=\&lt;HQ`G@EHFRYYZ9eBN5i]@WbWS=mGfHc=5mGi[`aW&gt;Ze=?mGHHc=mmGHcR=mgD^k&gt;&gt;fIZc=@1nXd=PZ5b?R?Rom[m0X:SjecZh=\[[69[j2;0`h`]Zn:Wbj5SN8K;JUC[NkSjP;XbE8=IY:]9Pb\8j:C?NV\URS^Fa:gJ&gt;f_W^7_alXVDN69HBlfl3l5b8gFDj4ZcB`f[I^V&lt;FgJ6AJ\S&gt;91VAINHAIP&gt;^3de]ERc&lt;:;BUVISQjnmBZ^^heKc=WiGBf^MZ7g3knk[o_Ol@J]YJnNm1MDoSnmM^n^?RGES2WWJEG:N]nToZnUoc_;Q];2_h7W7;MXdD`7ZAMF8dSDIVFUaRQ_ih:`IJhLPS[9j_HUkX?^7cgE_WBkoUADUhSIR8Ol`fe5QAU5hYOF^4W&lt;ECad]6l&lt;H=d\CRJhC0J_B@bO]fl6Ek3X`=D]ML4d04ef:lENPb^6Jdko6ZgA8g7W\fZQW?4RLEIie^FfTi:?Ki51C1Hkf:^KeIm\fbB\mScJL&gt;EnHi2FAFkPFX^GngmLQI\IkDIX:=E\GjQVhVXjV;^DEa\P&gt;ZCag\TIG&lt;@o8&gt;a7D3NAT?:9Od3Cj=o\CNBUY&lt;n^?W27n&lt;\?;84SCejVSKWoCnNW]??P;Nh:_E?9:NBmT]D^[OB;GL:LGI_XSAiPQ`d3cDX7TI9lP&lt;Jo@LhigJD_L6i;eoKfL&lt;@jnOLU[NCB7PWHj?4m\7D@9U_2JEKlb3:J5il[ChHG_0?j7Hk_jM]lcOElhVIRBZ0AGT@860PT;`lA01mb28MI1V&gt;0\QA&gt;VTT6H\9PR6KLA6:BTB2CI929@B_O30?IRW7Dk8H&lt;G8b3:=YMl1@PTS4=BX@EAI1fP6PPI@P@PNCd?MRZPh&lt;?idL7c3L88RW6n07HF;5Z7&gt;2@30JW:4H?=04?PRo2gBC?b\ST151e\2`j:Na2A&gt;iVP?LDWh3Qh@fXL:D0So6NHg0^D@KI:Sfa0iIX02@0ja60HXSVXd1Y\SAd@CI?SBW\Q1c0Q14`SX&gt;E1LX:85I3`U&lt;jHF18&lt;1YJ6G?J6n0D0RoPSY10NmZPM0@&gt;Hl:54kPR5Vf0`1F;40;PbV0SaX1`P&gt;D50QoUVb5B^Q2RED\1ZLfhD9LJRU0:A0HcB&lt;F5HS62k&lt;V2&gt;HP&lt;kY1X9@XCKQP90:@2GAHQ;hD7EP&gt;WaY5BXlY;0SBJH0AS^5XRT:e`84A_CX88a6j4Q`k8VU4jg2o_l18&lt;OZ1Q1LfeJ@8A3nPU25RYMifV7da^^86INUdggEfIL17?8Cd&gt;g:kkkNEQF]?a\Y]R`Md?PM2bM112Tl&lt;3]D7Ahjl&lt;`1fFYUI86bVJB?aAK&lt;&gt;cDC&lt;\4&lt;:MBeHMnjQdA8;`=a[T;2dn&lt;VTFJEUEZ3CZQFL:[5d:e86UbIib&gt;kNTR_b4hDR\Y8dJX^Y:AVd9?&lt;d8GABT5MJT3`RYYBXFTAU2T\=[MOEJSBZI?g:GDlJVidF8[dCUg@JWfiFB1^I&gt;XBleM;^9A5joAZGjXf=JdHoIcUTaX[JRR2jAjc=e&gt;I;\kR5\9JQN8GXdY8&gt;VOZRg:YJT3&lt;hO@Lad1dD8=e08SQDd6F9SD&gt;8e=LABH9U=A`BHUV=AbFQQDHXP?4boNn`@m&lt;NL;SY_\cJoMRo6\]2?k4A[`R@3D;HD5cS2Rd;AYICc8ahN]mNFQ][:Sna^l^9fc:co^`U[YDYW6j1SLAL4=MBImoU4TXca\X0AX@@H_c=IO`I3Bf9YQEjVBd0:imoY_OnJcX2e9X1LTNjT;&lt;2dRfSMdA@GPH3C0;^6H2F=\654dm01&gt;&gt;172E0HF7Jk\8n3[d11^L[V&lt;DQQ:6H&lt;YUAI1[nkaQJYD\P0IIXYEcQbYG]4P5jcJ?XHOfYd_64[1bdRkPTXi&gt;^;c1MVmd;ji&lt;2\WoOa\7g_4e;_Q:G6k`KZYgWUR[`Tk;?o?_U5M&lt;FSiJ9COan;L6k\_</protected>
		<typedef alwayssavetype='false' additionaltypeflags='0' typelistordernum='21'>
			<Action classname='StepType' isroottypedef='true' typecategory='1' timestamp='1666107258' typeversion='23.0.0.1' typelastmodversion='23.0.0.0' typeminprodversion='23.0.0.0' typeflags='33554446'>
				<subprops>
					<Substeps typename='StepTypeSubstepsArray' xsi:type='StepTypeSubstepsArray' classname='Objs' flagsforinstances='524312' instanceoverrideflags='655384'>
						<value lbound='[0]' ubound='[]'/>
					</Substeps>
					<DescriptionFormat typename='Expression' xsi:type='Expression' classname='ExprValue' flagsforinstances='4718616' instanceoverrideflags='4718616' valueflags='4194328' structureflags='524288'>
						<value>ResStr("NI_STEPTYPES", "ACTION_DESCRIPTION_NAME") + (("%ModuleDescription" == "") ? "" : ",  %ModuleDescription")</value>
					</DescriptionFormat>
					<DefaultNameFormat typename='Expression' xsi:type='Expression' classname='ExprValue' flagsforinstances='4718616' instanceoverrideflags='4718616' valueflags='4194328' structureflags='524288'>
						<value>ResStr("NI_STEPTYPES", "ACTION_DEF_STEP_NAME")</value>
					</DefaultNameFormat>
					<Menu typename='StepTypeMenu' xsi:type='StepTypeMenu' classname='Obj' flagsforinstances='524312' instanceoverrideflags='524312'>
						<subprops>
							<CanBeSubstepType classname='Bool'>
								<value>false</value>
							</CanBeSubstepType>
							<CanOnlyBeSubstepType classname='Bool'>
								<value>false</value>
							</CanOnlyBeSubstepType>
							<Category classname='Str'>
								<value>""</value>
							</Category>
							<ItemName classname='ExprValue'>
								<value>ResStr("NI_STEPTYPES", "ACTION_MENU_ITEM_NAME")</value>
							</ItemName>
							<SingularItemName classname='Str'>
								<value>""</value>
							</SingularItemName>
							<SeparatorBeforeCategory classname='Bool'>
								<value>false</value>
							</SeparatorBeforeCategory>
							<SeparatorBeforeItemName classname='Bool'>
								<value>false</value>
							</SeparatorBeforeItemName>
							<Group classname='Str'>
								<value>Action</value>
							</Group>
						</subprops>
					</Menu>
					<AdditionalResultsHints classname='Objs' valueflags='4194328' structureflags='524288'>
						<value lbound='[0]' ubound='[]'>
							<elemproto>
								<_NAME_IN_ATTRIBUTE_ typename='NI_CustomResult' xsi:type='NI_CustomResult' name='' classname='CustomResult'>
									<subprops>
										<Name classname='ExprValue'>
											<value/>
										</Name>
										<ValueToLog classname='ExprValue'>
											<value/>
										</ValueToLog>
										<Condition classname='ExprValue'>
											<value/>
										</Condition>
										<Flags classname='Num'>
											<value>8192</value>
										</Flags>
										<CheckedState classname='Num'>
											<value>2</value>
										</CheckedState>
										<Type classname='PropertyObjectType'>
											<subprops>
												<ValueType classname='Num'>
													<value>3</value>
												</ValueType>
												<IsObject classname='Bool'>
													<value>true</value>
												</IsObject>
												<TypeName classname='Str'>
													<value/>
												</TypeName>
												<ElementType classname='Objs'>
													<value lbound='[0]' ubound='[]'/>
												</ElementType>
												<ArrayDimensions classname='ArrayDimensions'>
													<subprops>
														<LowerBounds classname='Nums'>
															<value lbound='[0]' ubound='[]'/>
														</LowerBounds>
														<UpperBounds classname='Nums'>
															<value lbound='[0]' ubound='[]'/>
														</UpperBounds>
													</subprops>
												</ArrayDimensions>
												<Representation classname='Num'>
													<value>1</value>
												</Representation>
												<ClassName classname='Str'>
													<value/>
												</ClassName>
											</subprops>
										</Type>
										<Elements classname='Objs'>
											<value lbound='[0]' ubound='[]'/>
										</Elements>
										<IsAnyType classname='Bool'>
											<value>true</value>
										</IsAnyType>
									</subprops>
								</_NAME_IN_ATTRIBUTE_>
							</elemproto>
						</value>
					</AdditionalResultsHints>
					<TS typename='TEInf' xsi:type='TEInf' classname='Obj' flagsforinstances='262168' instanceoverrideflags='4456472'>
						<subprops>
							<Id classname='Str'>
								<value/>
							</Id>
							<Icon classname='Str'>
								<value/>
							</Icon>
							<SData classname='Obj' flagsforinstances='2097152' instanceoverrideflags='7143448' structureflags='2097152'/>
							<PreCond classname='ExprValue'>
								<value/>
							</PreCond>
							<LoadOpt classname='Str'>
								<value>PreloadWhenExecuted</value>
							</LoadOpt>
							<UnloadOpt classname='Str'>
								<value>UnloadWithFile</value>
							</UnloadOpt>
							<Mode classname='Str'>
								<value>Normal</value>
							</Mode>
							<WindowActivation classname='Str'>
								<value>None</value>
							</WindowActivation>
							<ResultOption classname='Num'>
								<value>1</value>
							</ResultOption>
							<StepFCSeqF classname='Bool'>
								<value>true</value>
							</StepFCSeqF>
							<IgnoreRTE classname='Bool'>
								<value>false</value>
							</IgnoreRTE>
							<UseMutex classname='Bool'>
								<value>false</value>
							</UseMutex>
							<MutexNameOrRef classname='ExprValue'>
								<value/>
							</MutexNameOrRef>
							<BatchSyncOpt classname='Num'>
								<value>0</value>
							</BatchSyncOpt>
							<SwitchEnabled classname='Bool'>
								<value>false</value>
							</SwitchEnabled>
							<VirtualDeviceName classname='ExprValue'>
								<value/>
							</VirtualDeviceName>
							<SwitchOperation classname='Num'>
								<value>1</value>
							</SwitchOperation>
							<RouteGroupConnect classname='ExprValue'>
								<value/>
							</RouteGroupConnect>
							<RouteGroupDisconnect classname='ExprValue'>
								<value/>
							</RouteGroupDisconnect>
							<MulticonnectMode classname='Num'>
								<value>1</value>
							</MulticonnectMode>
							<OperationOrder classname='Num'>
								<value>2</value>
							</OperationOrder>
							<ConnectionLifetime classname='Num'>
								<value>0</value>
							</ConnectionLifetime>
							<WaitForDebounce classname='Bool'>
								<value>true</value>
							</WaitForDebounce>
							<PassAct classname='Str' flagsforinstances='1' instanceoverrideflags='5046297'>
								<value>Next</value>
							</PassAct>
							<FailAct classname='Str' flagsforinstances='1' instanceoverrideflags='5046297'>
								<value>Next</value>
							</FailAct>
							<PassActTarget classname='ExprValue' flagsforinstances='1' instanceoverrideflags='5046297'>
								<value/>
							</PassActTarget>
							<FailActTarget classname='ExprValue' flagsforinstances='1' instanceoverrideflags='5046297'>
								<value/>
							</FailActTarget>
							<CustExpr classname='ExprValue'>
								<value/>
							</CustExpr>
							<CustTrueAct classname='Str'>
								<value>Next</value>
							</CustTrueAct>
							<CustFalseAct classname='Str'>
								<value>Next</value>
							</CustFalseAct>
							<CustTrueActTarget classname='ExprValue'>
								<value/>
							</CustTrueActTarget>
							<CustFalseActTarget classname='ExprValue'>
								<value/>
							</CustFalseActTarget>
							<LoopType classname='Str'>
								<value>NoLooping</value>
							</LoopType>
							<LoopWhile classname='ExprValue'>
								<value/>
							</LoopWhile>
							<LoopStatus classname='ExprValue'>
								<value/>
							</LoopStatus>
							<LoopIncrement classname='ExprValue'>
								<value>RunState.LoopIndex += 1</value>
							</LoopIncrement>
							<LoopInitialize classname='ExprValue'>
								<value>RunState.LoopIndex = 0</value>
							</LoopInitialize>
							<LoopOpt classname='Num'>
								<value>0</value>
							</LoopOpt>
							<PreExpr classname='ExprValue'>
								<value/>
							</PreExpr>
							<PostExpr classname='ExprValue'>
								<value/>
							</PostExpr>
							<StatusExpr classname='ExprValue'>
								<value/>
							</StatusExpr>
							<CanSpecifyModule classname='Bool'>
								<value>true</value>
							</CanSpecifyModule>
							<CanEditCode classname='Bool'>
								<value>true</value>
							</CanEditCode>
							<CanEditModulePrototype classname='Bool'>
								<value>true</value>
							</CanEditModulePrototype>
							<CanEditParameterAdditionalResults classname='Bool'>
								<value>true</value>
							</CanEditParameterAdditionalResults>
							<PrecondIntExe classname='Num'>
								<value>0</value>
							</PrecondIntExe>
							<Requirements classname='Obj' flagsforinstances='1' valueflags='1' structureflags='2097152'>
								<subprops>
									<Links classname='Strs' flagsforinstances='71303168' instanceoverrideflags='72286233' valueflags='71303168'>
										<value lbound='[0]' ubound='[]'/>
									</Links>
								</subprops>
							</Requirements>
							<CustomResults classname='Objs'>
								<value lbound='[0]' ubound='[]'>
									<elemproto>
										<_NAME_IN_ATTRIBUTE_ name='' classname='CustomResult'>
											<subprops>
												<Name classname='ExprValue'>
													<value/>
												</Name>
												<ValueToLog classname='ExprValue'>
													<value/>
												</ValueToLog>
												<Condition classname='ExprValue'>
													<value/>
												</Condition>
												<Flags classname='Num'>
													<value>8192</value>
												</Flags>
												<CheckedState classname='Num'>
													<value>2</value>
												</CheckedState>
												<Type classname='PropertyObjectType'>
													<subprops>
														<ValueType classname='Num'>
															<value>3</value>
														</ValueType>
														<IsObject classname='Bool'>
															<value>true</value>
														</IsObject>
														<TypeName classname='Str'>
															<value/>
														</TypeName>
														<ElementType classname='Objs'>
															<value lbound='[0]' ubound='[]'/>
														</ElementType>
														<ArrayDimensions classname='ArrayDimensions'>
															<subprops>
																<LowerBounds classname='Nums'>
																	<value lbound='[0]' ubound='[]'/>
																</LowerBounds>
																<UpperBounds classname='Nums'>
																	<value lbound='[0]' ubound='[]'/>
																</UpperBounds>
															</subprops>
														</ArrayDimensions>
														<Representation classname='Num'>
															<value>1</value>
														</Representation>
														<ClassName classname='Str'>
															<value/>
														</ClassName>
													</subprops>
												</Type>
												<Elements classname='Objs'>
													<value lbound='[0]' ubound='[]'/>
												</Elements>
												<IsAnyType classname='Bool'>
													<value>true</value>
												</IsAnyType>
											</subprops>
										</_NAME_IN_ATTRIBUTE_>
									</elemproto>
								</value>
							</CustomResults>
							<AdditionalResultsHints classname='Objs'>
								<value lbound='[0]' ubound='[]'>
									<elemproto>
										<_NAME_IN_ATTRIBUTE_ name='' classname='CustomResult'>
											<subprops>
												<Name classname='ExprValue'>
													<value/>
												</Name>
												<ValueToLog classname='ExprValue'>
													<value/>
												</ValueToLog>
												<Condition classname='ExprValue'>
													<value/>
												</Condition>
												<Flags classname='Num'>
													<value>8192</value>
												</Flags>
												<CheckedState classname='Num'>
													<value>2</value>
												</CheckedState>
												<Type classname='PropertyObjectType'>
													<subprops>
														<ValueType classname='Num'>
															<value>3</value>
														</ValueType>
														<IsObject classname='Bool'>
															<value>true</value>
														</IsObject>
														<TypeName classname='Str'>
															<value/>
														</TypeName>
														<ElementType classname='Objs'>
															<value lbound='[0]' ubound='[]'/>
														</ElementType>
														<ArrayDimensions classname='ArrayDimensions'>
															<subprops>
																<LowerBounds classname='Nums'>
																	<value lbound='[0]' ubound='[]'/>
																</LowerBounds>
																<UpperBounds classname='Nums'>
																	<value lbound='[0]' ubound='[]'/>
																</UpperBounds>
															</subprops>
														</ArrayDimensions>
														<Representation classname='Num'>
															<value>1</value>
														</Representation>
														<ClassName classname='Str'>
															<value/>
														</ClassName>
													</subprops>
												</Type>
												<Elements classname='Objs'>
													<value lbound='[0]' ubound='[]'/>
												</Elements>
												<IsAnyType classname='Bool'>
													<value>true</value>
												</IsAnyType>
											</subprops>
										</_NAME_IN_ATTRIBUTE_>
									</elemproto>
								</value>
							</AdditionalResultsHints>
						</subprops>
					</TS>
					<NI_Data typename='StepTypeNIData' xsi:type='StepTypeNIData' classname='Obj'>
						<subprops>
							<EditPanels classname='Strs'>
								<value lbound='[0]' ubound='[]'/>
							</EditPanels>
						</subprops>
					</NI_Data>
					<Result classname='Obj' flagsforinstances='4194304' valueflags='4194304'>
						<subprops>
							<Error typename='Error' xsi:type='Error' classname='Obj' flagsforinstances='4194304' instanceoverrideflags='4194304' valueflags='4194304'>
								<subprops>
									<Code classname='Num'>
										<value>0</value>
									</Code>
									<Msg classname='Str'>
										<value/>
									</Msg>
									<Occurred classname='Bool'>
										<value>false</value>
									</Occurred>
								</subprops>
							</Error>
							<Status classname='Str' flagsforinstances='4194304' valueflags='4194304'>
								<value/>
							</Status>
							<ReportText classname='Str' flagsforinstances='4194304' valueflags='4194304'>
								<value/>
							</ReportText>
							<Common typename='CommonResults' xsi:type='CommonResults' classname='Obj' instanceoverrideflags='4194304'/>
						</subprops>
					</Result>
					<CodeTemplates classname='Str' valueflags='4194328' structureflags='524288'>
						<value>DefaultLabVIEW|DefaultLabVIEWNXG|DefaultCVI|DefaultVB.NET|DefaultCSharp.NET|DefaultC++.NET|DefaultVC++_Template|DefaultHTB72_Template|DefaultHTB80_Template|Default_Template</value>
					</CodeTemplates>
					<BlockStartTypes classname='Str' valueflags='4194328' structureflags='524288'>
						<value/>
					</BlockStartTypes>
					<BlockEndTypes classname='Str' valueflags='4194328' structureflags='524288'>
						<value/>
					</BlockEndTypes>
					<AppliesToBlockStructure classname='Bool' valueflags='4194328' structureflags='524288'>
						<value>false</value>
					</AppliesToBlockStructure>
					<CanEncapsulate classname='Bool' valueflags='4194328' structureflags='524288'>
						<value>false</value>
					</CanEncapsulate>
					<Category classname='Str' valueflags='24' structureflags='524288'>
						<value>Action</value>
					</Category>
				</subprops>
			</Action>
		</typedef>
		<typedef alwayssavetype='false' additionaltypeflags='0' typelistordernum='22'>
			<NI_LabVIEWParameterResult classname='LabVIEWParameterResult' isroottypedef='true' typecategory='3' timestamp='1695826215' typeversion='23.0.0.49152' typelastmodversion='23.0.0.49152' typeminprodversion='23.0.0.0' typeflags='33554436' valueflags='24'>
				<subprops>
					<Condition typename='Expression' xsi:type='Expression' classname='ExprValue'>
						<value/>
					</Condition>
					<Flags classname='Num'>
						<value>8192</value>
						<numericfmt>%#x</numericfmt>
					</Flags>
					<CheckedState classname='Num'>
						<value>1</value>
					</CheckedState>
				</subprops>
			</NI_LabVIEWParameterResult>
		</typedef>
		<typedef alwayssavetype='false' additionaltypeflags='0' typelistordernum='23'>
			<VIParameter classname='VIParameter' isroottypedef='true' typecategory='3' timestamp='1695826683' typeversion='23.0.0.49152' typelastmodversion='23.0.0.49152' typeminprodversion='23.0.0.0' typeflags='33554436' valueflags='24'>
				<subprops>
					<Label classname='Str'>
						<value>_notNamed</value>
					</Label>
					<Caption classname='Str'>
						<value/>
					</Caption>
					<ArgVal typename='Expression' xsi:type='Expression' classname='ExprValue'>
						<value/>
					</ArgVal>
					<ArgDisplayVal typename='Expression' xsi:type='Expression' classname='ExprValue'>
						<value/>
					</ArgDisplayVal>
					<Type classname='Num'>
						<value>8</value>
					</Type>
					<WireRequirement classname='Num'>
						<value>2</value>
					</WireRequirement>
					<ArrayType classname='Num'>
						<value>50</value>
					</ArrayType>
					<DefaultArraySize classname='Str'>
						<value>[]</value>
					</DefaultArraySize>
					<ClusterType classname='Num'>
						<value>20</value>
					</ClusterType>
					<NumType classname='Num'>
						<value>7</value>
					</NumType>
					<ReferenceType classname='Num'>
						<value>0</value>
					</ReferenceType>
					<StrPass classname='Num'>
						<value>0</value>
					</StrPass>
					<DisplayType classname='Str'>
						<value/>
					</DisplayType>
					<UseDefaultValues classname='Bool'>
						<value>false</value>
					</UseDefaultValues>
					<PartiallySpecified classname='Bool'>
						<value>false</value>
					</PartiallySpecified>
					<ComplexParts classname='Obj' flagsforinstances='2097152' structureflags='2097152'/>
					<ArrayClusterProto classname='Obj' flagsforinstances='2097152' structureflags='2097152'/>
					<ArrayClusterEls classname='Objs'>
						<value lbound='[0]' ubound='[]'/>
					</ArrayClusterEls>
					<UserData classname='Obj' flagsforinstances='2097152' structureflags='2097152'/>
					<AdditionalResult typename='NI_LabVIEWParameterResult' xsi:type='NI_LabVIEWParameterResult' classname='LabVIEWParameterResult'>
						<subprops>
							<Condition classname='ExprValue'>
								<value/>
							</Condition>
							<Flags classname='Num'>
								<value>8192</value>
							</Flags>
							<CheckedState classname='Num'>
								<value>1</value>
							</CheckedState>
						</subprops>
					</AdditionalResult>
					<Direction classname='Num'>
						<value>0</value>
					</Direction>
					<ConnectorNumber classname='Num'>
						<value>-1</value>
					</ConnectorNumber>
					<LegacyClusterType classname='Num'>
						<value>0</value>
					</LegacyClusterType>
				</subprops>
			</VIParameter>
		</typedef>
		<typedef alwayssavetype='false' additionaltypeflags='0' typelistordernum='24'>
			<NI_NodeProperty classname='LVNodeProperty' isroottypedef='true' typecategory='3' timestamp='1695826683' typeversion='23.0.0.49152' typelastmodversion='23.0.0.49152' typeminprodversion='23.0.0.0' typeflags='33554436' valueflags='24'>
				<subprops>
					<LongName classname='Str'>
						<value/>
					</LongName>
					<DataName classname='Str'>
						<value/>
					</DataName>
					<Direction classname='Num'>
						<value>0</value>
					</Direction>
					<ConnectorNumber classname='Num'>
						<value>0</value>
					</ConnectorNumber>
					<UniqueID classname='Str'>
						<value/>
					</UniqueID>
				</subprops>
			</NI_NodeProperty>
		</typedef>
		<typedef alwayssavetype='false' additionaltypeflags='0' typelistordernum='25'>
			<FlexGStepAdditions classname='FGModule' isroottypedef='true' typecategory='3' timestamp='1695826683' typeversion='23.0.0.49152' typelastmodversion='23.0.0.49152' typeminprodversion='23.0.0.0' typeflags='33554436' valueflags='24'>
				<subprops>
					<ViCall classname='VICall'>
						<subprops>
							<CallType classname='Num'>
								<value>0</value>
							</CallType>
							<ClassPath typename='Path' xsi:type='Path' classname='PathValue'>
								<value/>
							</ClassPath>
							<ProjectPath typename='Path' xsi:type='Path' classname='PathValue'>
								<value/>
							</ProjectPath>
							<RemoteProjectPath typename='Path' xsi:type='Path' classname='PathValue'>
								<value/>
							</RemoteProjectPath>
							<VIPath typename='Path' xsi:type='Path' classname='PathValue'>
								<value/>
							</VIPath>
							<Namespace classname='Str'>
								<value/>
							</Namespace>
							<RemoteVIPath typename='Path' xsi:type='Path' classname='PathValue'>
								<value/>
							</RemoteVIPath>
							<CallName classname='Str'>
								<value/>
							</CallName>
							<VIType classname='Num'>
								<value>0</value>
							</VIType>
							<ShowFrnPnl classname='Bool'>
								<value>false</value>
							</ShowFrnPnl>
							<VIDescription classname='Str'>
								<value/>
							</VIDescription>
							<TDChecksum classname='Num'>
								<value>-1</value>
							</TDChecksum>
							<NodeLibraryName classname='Str'>
								<value/>
							</NodeLibraryName>
							<NodeLibraryGenericTypeName classname='Str'>
								<value/>
							</NodeLibraryGenericTypeName>
							<NodeClassDataName classname='Str'>
								<value/>
							</NodeClassDataName>
							<NodeUsesDataValueReference classname='Bool'>
								<value>false</value>
							</NodeUsesDataValueReference>
							<NodeIgnoresInternalErrors classname='Bool'>
								<value>false</value>
							</NodeIgnoresInternalErrors>
							<NodeOperationMode classname='Num'>
								<value>0</value>
							</NodeOperationMode>
							<AutoDetectLVRT classname='Bool'>
								<value>false</value>
							</AutoDetectLVRT>
							<RemoteHost typename='Expression' xsi:type='Expression' classname='ExprValue'>
								<value/>
							</RemoteHost>
							<RemoteHostByExpr classname='Bool'>
								<value>false</value>
							</RemoteHostByExpr>
							<PrototypeFlags classname='Num'>
								<value>0</value>
							</PrototypeFlags>
							<VI classname='Str'>
								<value/>
							</VI>
							<OverrideBinaryClassPath typename='Path' xsi:type='Path' classname='PathValue'>
								<value/>
							</OverrideBinaryClassPath>
							<OverrideBinaryVIPath typename='Path' xsi:type='Path' classname='PathValue'>
								<value/>
							</OverrideBinaryVIPath>
							<OverrideBinaryProjectPath typename='Path' xsi:type='Path' classname='PathValue'>
								<value/>
							</OverrideBinaryProjectPath>
							<OverrideBinaryNamespace classname='Str'>
								<value/>
							</OverrideBinaryNamespace>
							<OverrideModuleOptions classname='Num'>
								<value>0</value>
							</OverrideModuleOptions>
							<BuildSpecificationName classname='Str'>
								<value/>
							</BuildSpecificationName>
							<OverrideBinaryVIChecksum classname='Num'>
								<value>-1</value>
							</OverrideBinaryVIChecksum>
							<ArrayParametersMatchLVArrayDimenions classname='Bool'>
								<value>false</value>
							</ArrayParametersMatchLVArrayDimenions>
							<Parms classname='Objs'>
								<value lbound='[0]' ubound='[]'>
									<elemproto>
										<_NAME_IN_ATTRIBUTE_ typename='VIParameter' xsi:type='VIParameter' name='' classname='VIParameter' structureflags='131072'>
											<subprops>
												<Label classname='Str'>
													<value>_notNamed</value>
												</Label>
												<Caption classname='Str'>
													<value/>
												</Caption>
												<ArgVal classname='ExprValue'>
													<value/>
												</ArgVal>
												<ArgDisplayVal classname='ExprValue'>
													<value/>
												</ArgDisplayVal>
												<Type classname='Num'>
													<value>8</value>
												</Type>
												<WireRequirement classname='Num'>
													<value>2</value>
												</WireRequirement>
												<ArrayType classname='Num'>
													<value>50</value>
												</ArrayType>
												<DefaultArraySize classname='Str'>
													<value>[]</value>
												</DefaultArraySize>
												<ClusterType classname='Num'>
													<value>20</value>
												</ClusterType>
												<NumType classname='Num'>
													<value>7</value>
												</NumType>
												<ReferenceType classname='Num'>
													<value>0</value>
												</ReferenceType>
												<StrPass classname='Num'>
													<value>0</value>
												</StrPass>
												<DisplayType classname='Str'>
													<value/>
												</DisplayType>
												<UseDefaultValues classname='Bool'>
													<value>false</value>
												</UseDefaultValues>
												<PartiallySpecified classname='Bool'>
													<value>false</value>
												</PartiallySpecified>
												<ArrayClusterEls classname='Objs'>
													<value lbound='[0]' ubound='[]'/>
												</ArrayClusterEls>
												<AdditionalResult classname='LabVIEWParameterResult'>
													<subprops>
														<Condition classname='ExprValue'>
															<value/>
														</Condition>
														<Flags classname='Num'>
															<value>8192</value>
														</Flags>
														<CheckedState classname='Num'>
															<value>1</value>
														</CheckedState>
													</subprops>
												</AdditionalResult>
												<Direction classname='Num'>
													<value>0</value>
												</Direction>
												<ConnectorNumber classname='Num'>
													<value>-1</value>
												</ConnectorNumber>
												<LegacyClusterType classname='Num'>
													<value>0</value>
												</LegacyClusterType>
											</subprops>
										</_NAME_IN_ATTRIBUTE_>
									</elemproto>
								</value>
							</Parms>
							<NodeProperties classname='Objs'>
								<value lbound='[0]' ubound='[]'>
									<elemproto>
										<_NAME_IN_ATTRIBUTE_ typename='NI_NodeProperty' xsi:type='NI_NodeProperty' name='' classname='LVNodeProperty' structureflags='131072'>
											<subprops>
												<LongName classname='Str'>
													<value/>
												</LongName>
												<DataName classname='Str'>
													<value/>
												</DataName>
												<Direction classname='Num'>
													<value>0</value>
												</Direction>
												<ConnectorNumber classname='Num'>
													<value>0</value>
												</ConnectorNumber>
												<UniqueID classname='Str'>
													<value/>
												</UniqueID>
											</subprops>
										</_NAME_IN_ATTRIBUTE_>
									</elemproto>
								</value>
							</NodeProperties>
						</subprops>
					</ViCall>
				</subprops>
			</FlexGStepAdditions>
		</typedef>
		<typedef alwayssavetype='false' additionaltypeflags='0' typelistordernum='26'>
			<VIParameterElement classname='VIParameterElement' isroottypedef='true' typecategory='3' timestamp='1695826683' typeversion='23.0.0.49152' typelastmodversion='23.0.0.49152' typeminprodversion='23.0.0.0' typeflags='33554436' valueflags='24'>
				<subprops>
					<Label classname='Str'>
						<value>_notNamed</value>
					</Label>
					<Caption classname='Str'>
						<value/>
					</Caption>
					<ArgVal typename='Expression' xsi:type='Expression' classname='ExprValue'>
						<value/>
					</ArgVal>
					<ArgDisplayVal typename='Expression' xsi:type='Expression' classname='ExprValue'>
						<value/>
					</ArgDisplayVal>
					<Type classname='Num'>
						<value>8</value>
					</Type>
					<WireRequirement classname='Num'>
						<value>2</value>
					</WireRequirement>
					<ArrayType classname='Num'>
						<value>50</value>
					</ArrayType>
					<DefaultArraySize classname='Str'>
						<value>[]</value>
					</DefaultArraySize>
					<ClusterType classname='Num'>
						<value>20</value>
					</ClusterType>
					<NumType classname='Num'>
						<value>7</value>
					</NumType>
					<ReferenceType classname='Num'>
						<value>0</value>
					</ReferenceType>
					<StrPass classname='Num'>
						<value>0</value>
					</StrPass>
					<DisplayType classname='Str'>
						<value/>
					</DisplayType>
					<UseDefaultValues classname='Bool'>
						<value>false</value>
					</UseDefaultValues>
					<PartiallySpecified classname='Bool'>
						<value>false</value>
					</PartiallySpecified>
					<ComplexParts classname='Obj' flagsforinstances='2097152' structureflags='2097152'/>
					<ArrayClusterProto classname='Obj' flagsforinstances='2097152' structureflags='2097152'/>
					<ArrayClusterEls classname='Objs'>
						<value lbound='[0]' ubound='[]'/>
					</ArrayClusterEls>
					<UserData classname='Obj' flagsforinstances='2097152' structureflags='2097152'/>
					<AdditionalResult typename='NI_LabVIEWParameterResult' xsi:type='NI_LabVIEWParameterResult' classname='LabVIEWParameterResult'>
						<subprops>
							<Condition classname='ExprValue'>
								<value/>
							</Condition>
							<Flags classname='Num'>
								<value>8192</value>
							</Flags>
							<CheckedState classname='Num'>
								<value>1</value>
							</CheckedState>
						</subprops>
					</AdditionalResult>
				</subprops>
			</VIParameterElement>
		</typedef>
	</typelist>
	<Data classname='SequenceFileData' valueflags='4194304'>
		<subprops>
			<Seq classname='Objs' valueflags='4194304'>
				<value lbound='[0]' ubound='[0]'>
					<value>
						<Sequence name='MainSequence'>
							<subprops>
								<Parameters classname='Obj' valueflags='4456448'/>
								<Locals classname='Obj' valueflags='4194304'>
									<subprops>
										<ResultList classname='Objs' valueflags='4194304'>
											<value lbound='[0]' ubound='[]'>
												<elemproto>
													<_NAME_IN_ATTRIBUTE_ name='' classname='TEResult'/>
												</elemproto>
											</value>
										</ResultList>
									</subprops>
								</Locals>
								<Main classname='Objs' valueflags='4194304'>
									<value lbound='[0]' ubound='[0]'>
										<value>
											<Step typename='NI_Measurement' xsi:type='NI_Measurement' name='Source DC voltage and measure voltage/current'>
												<subprops>
													<TS classname='Obj'>
														<subprops>
															<Id classname='Str'>
																<value>ID#:FbWwC+iY7RGsKgANOl6cKB</value>
															</Id>
															<Icon classname='Str'>
																<value>Measurement\Measurement.ico</value>
															</Icon>
															<PreCond classname='ExprValue'>
																<value/>
															</PreCond>
															<LoadOpt classname='Str'>
																<value>PreloadWhenExecuted</value>
															</LoadOpt>
															<UnloadOpt classname='Str'>
																<value>UnloadWithFile</value>
															</UnloadOpt>
															<Mode classname='Str'>
																<value>Normal</value>
															</Mode>
															<WindowActivation classname='Str'>
																<value>None</value>
															</WindowActivation>
															<ResultOption classname='Num'>
																<value>1</value>
															</ResultOption>
															<StepFCSeqF classname='Bool'>
																<value>true</value>
															</StepFCSeqF>
															<IgnoreRTE classname='Bool'>
																<value>false</value>
															</IgnoreRTE>
															<UseMutex classname='Bool'>
																<value>false</value>
															</UseMutex>
															<MutexNameOrRef classname='ExprValue'>
																<value/>
															</MutexNameOrRef>
															<BatchSyncOpt classname='Num'>
																<value>0</value>
															</BatchSyncOpt>
															<SwitchEnabled classname='Bool'>
																<value>false</value>
															</SwitchEnabled>
															<VirtualDeviceName classname='ExprValue'>
																<value/>
															</VirtualDeviceName>
															<SwitchOperation classname='Num'>
																<value>1</value>
															</SwitchOperation>
															<RouteGroupConnect classname='ExprValue'>
																<value/>
															</RouteGroupConnect>
															<RouteGroupDisconnect classname='ExprValue'>
																<value/>
															</RouteGroupDisconnect>
															<MulticonnectMode classname='Num'>
																<value>1</value>
															</MulticonnectMode>
															<OperationOrder classname='Num'>
																<value>2</value>
															</OperationOrder>
															<ConnectionLifetime classname='Num'>
																<value>4</value>
															</ConnectionLifetime>
															<WaitForDebounce classname='Bool'>
																<value>true</value>
															</WaitForDebounce>
															<PassAct classname='Str'>
																<value>Next</value>
															</PassAct>
															<FailAct classname='Str'>
																<value>Next</value>
															</FailAct>
															<PassActTarget classname='ExprValue'>
																<value/>
															</PassActTarget>
															<FailActTarget classname='ExprValue'>
																<value/>
															</FailActTarget>
															<CustExpr classname='ExprValue'>
																<value/>
															</CustExpr>
															<CustTrueAct classname='Str'>
																<value>Next</value>
															</CustTrueAct>
															<CustFalseAct classname='Str'>
																<value>Next</value>
															</CustFalseAct>
															<CustTrueActTarget classname='ExprValue'>
																<value/>
															</CustTrueActTarget>
															<CustFalseActTarget classname='ExprValue'>
																<value/>
															</CustFalseActTarget>
															<LoopType classname='Str'>
																<value>NoLooping</value>
															</LoopType>
															<LoopWhile classname='ExprValue'>
																<value/>
															</LoopWhile>
															<LoopStatus classname='ExprValue'>
																<value/>
															</LoopStatus>
															<LoopIncrement classname='ExprValue'>
																<value>RunState.LoopIndex += 1</value>
															</LoopIncrement>
															<LoopInitialize classname='ExprValue'>
																<value>RunState.LoopIndex = 0</value>
															</LoopInitialize>
															<LoopOpt classname='Num'>
																<value>0</value>
															</LoopOpt>
															<PreExpr classname='ExprValue'>
																<value/>
															</PreExpr>
															<PostExpr classname='ExprValue'>
																<value/>
															</PostExpr>
															<StatusExpr classname='ExprValue'>
																<value/>
															</StatusExpr>
															<CanEditCode classname='Bool'>
																<value>true</value>
															</CanEditCode>
															<CanEditModulePrototype classname='Bool'>
																<value>true</value>
															</CanEditModulePrototype>
															<CanEditParameterAdditionalResults classname='Bool'>
																<value>true</value>
															</CanEditParameterAdditionalResults>
															<PrecondIntExe classname='Num'>
																<value>0</value>
															</PrecondIntExe>
															<CustomResults classname='Objs'>
																<value lbound='[0]' ubound='[]'>
																	<elemproto>
																		<_NAME_IN_ATTRIBUTE_ name='' classname='CustomResult'>
																			<subprops>
																				<Name classname='ExprValue'>
																					<value/>
																				</Name>
																				<ValueToLog classname='ExprValue'>
																					<value/>
																				</ValueToLog>
																				<Condition classname='ExprValue'>
																					<value/>
																				</Condition>
																				<Flags classname='Num'>
																					<value>8192</value>
																				</Flags>
																				<CheckedState classname='Num'>
																					<value>2</value>
																				</CheckedState>
																				<Type classname='PropertyObjectType'>
																					<subprops>
																						<ValueType classname='Num'>
																							<value>3</value>
																						</ValueType>
																						<IsObject classname='Bool'>
																							<value>true</value>
																						</IsObject>
																						<TypeName classname='Str'>
																							<value/>
																						</TypeName>
																						<ElementType classname='Objs'>
																							<value lbound='[0]' ubound='[]'/>
																						</ElementType>
																						<ArrayDimensions classname='ArrayDimensions'>
																							<subprops>
																								<LowerBounds classname='Nums'>
																									<value lbound='[0]' ubound='[]'/>
																								</LowerBounds>
																								<UpperBounds classname='Nums'>
																									<value lbound='[0]' ubound='[]'/>
																								</UpperBounds>
																							</subprops>
																						</ArrayDimensions>
																						<Representation classname='Num'>
																							<value>1</value>
																						</Representation>
																						<ClassName classname='Str'>
																							<value/>
																						</ClassName>
																					</subprops>
																				</Type>
																				<Elements classname='Objs'>
																					<value lbound='[0]' ubound='[]'/>
																				</Elements>
																				<IsAnyType classname='Bool'>
																					<value>true</value>
																				</IsAnyType>
																			</subprops>
																		</_NAME_IN_ATTRIBUTE_>
																	</elemproto>
																</value>
															</CustomResults>
															<AdditionalResultsHints classname='Objs'>
																<value lbound='[0]' ubound='[]'>
																	<elemproto>
																		<_NAME_IN_ATTRIBUTE_ name='' classname='CustomResult'>
																			<subprops>
																				<Name classname='ExprValue'>
																					<value/>
																				</Name>
																				<ValueToLog classname='ExprValue'>
																					<value/>
																				</ValueToLog>
																				<Condition classname='ExprValue'>
																					<value/>
																				</Condition>
																				<Flags classname='Num'>
																					<value>8192</value>
																				</Flags>
																				<CheckedState classname='Num'>
																					<value>2</value>
																				</CheckedState>
																				<Type classname='PropertyObjectType'>
																					<subprops>
																						<ValueType classname='Num'>
																							<value>3</value>
																						</ValueType>
																						<IsObject classname='Bool'>
																							<value>true</value>
																						</IsObject>
																						<TypeName classname='Str'>
																							<value/>
																						</TypeName>
																						<ElementType classname='Objs'>
																							<value lbound='[0]' ubound='[]'/>
																						</ElementType>
																						<ArrayDimensions classname='ArrayDimensions'>
																							<subprops>
																								<LowerBounds classname='Nums'>
																									<value lbound='[0]' ubound='[]'/>
																								</LowerBounds>
																								<UpperBounds classname='Nums'>
																									<value lbound='[0]' ubound='[]'/>
																								</UpperBounds>
																							</subprops>
																						</ArrayDimensions>
																						<Representation classname='Num'>
																							<value>1</value>
																						</Representation>
																						<ClassName classname='Str'>
																							<value/>
																						</ClassName>
																					</subprops>
																				</Type>
																				<Elements classname='Objs'>
																					<value lbound='[0]' ubound='[]'/>
																				</Elements>
																				<IsAnyType classname='Bool'>
																					<value>true</value>
																				</IsAnyType>
																			</subprops>
																		</_NAME_IN_ATTRIBUTE_>
																	</elemproto>
																</value>
															</AdditionalResultsHints>
														</subprops>
													</TS>
													<Result classname='Obj'>
														<subprops>
															<Error classname='Obj'>
																<subprops>
																	<Code classname='Num'>
																		<value>0</value>
																	</Code>
																	<Msg classname='Str'>
																		<value/>
																	</Msg>
																	<Occurred classname='Bool'>
																		<value>false</value>
																	</Occurred>
																</subprops>
															</Error>
															<Status classname='Str'>
																<value/>
															</Status>
															<ReportText classname='Str'>
																<value/>
															</ReportText>
															<Common classname='Obj'/>
														</subprops>
													</Result>
													<Measurement classname='Obj'>
														<subprops>
															<Name classname='Str'>
																<value>ni.examples.NIDCPowerSourceDCVoltage_LabVIEW</value>
															</Name>
															<Parameters classname='Objs'>
																<value lbound='[0]' ubound='[10]'>
																	<elemproto>
																		<_NAME_IN_ATTRIBUTE_ name='' classname='Obj'>
																			<subprops>
																				<MessageType classname='Str'>
																					<value/>
																				</MessageType>
																				<Name classname='Str'>
																					<value/>
																				</Name>
																				<ArgumentValue classname='ExprValue'>
																					<value/>
																				</ArgumentValue>
																				<Direction classname='Str'>
																					<value/>
																				</Direction>
																				<Log classname='Bool'>
																					<value>false</value>
																				</Log>
																				<Dimension classname='Num'>
																					<value representation='UInt64'>0</value>
																				</Dimension>
																				<Type classname='Str'>
																					<value/>
																				</Type>
																				<ID classname='Num'>
																					<value representation='Int64'>0</value>
																				</ID>
																				<TypeSpecialization classname='Str'>
																					<value/>
																				</TypeSpecialization>
																			</subprops>
																		</_NAME_IN_ATTRIBUTE_>
																	</elemproto>
																	<value>
																		<Obj typename='NI_MeasurementParameter' name=''>
																			<subprops>
																				<MessageType classname='Str'>
																					<value/>
																				</MessageType>
																				<Name classname='Str'>
																					<value>pin_names</value>
																				</Name>
																				<ArgumentValue classname='ExprValue'>
																					<value>{"Pin1"}</value>
																				</ArgumentValue>
																				<Direction classname='Str'>
																					<value>In</value>
																				</Direction>
																				<Log classname='Bool'>
																					<value>true</value>
																				</Log>
																				<Dimension classname='Num'>
																					<value representation='UInt64'>1</value>
																				</Dimension>
																				<Type classname='Str'>
																					<value>TypeString</value>
																				</Type>
																				<ID classname='Num'>
																					<value representation='Int64'>1</value>
																				</ID>
																				<TypeSpecialization classname='Str'>
																					<value>IOResource</value>
																				</TypeSpecialization>
																				<EnumDefinition classname='Objs'>
																					<value lbound='[0]' ubound='[]'/>
																				</EnumDefinition>
																			</subprops>
																		</Obj>
																	</value>
																	<value>
																		<Obj typename='NI_MeasurementParameter' name=''>
																			<subprops>
																				<MessageType classname='Str'>
																					<value/>
																				</MessageType>
																				<Name classname='Str'>
																					<value>voltage_level</value>
																				</Name>
																				<ArgumentValue classname='ExprValue'>
																					<value>6</value>
																				</ArgumentValue>
																				<Direction classname='Str'>
																					<value>In</value>
																				</Direction>
																				<Log classname='Bool'>
																					<value>true</value>
																				</Log>
																				<Dimension classname='Num'>
																					<value representation='UInt64'>0</value>
																				</Dimension>
																				<Type classname='Str'>
																					<value>TypeDouble</value>
																				</Type>
																				<ID classname='Num'>
																					<value representation='Int64'>2</value>
																				</ID>
																				<TypeSpecialization classname='Str'>
																					<value>None</value>
																				</TypeSpecialization>
																				<EnumDefinition classname='Objs'>
																					<value lbound='[0]' ubound='[]'/>
																				</EnumDefinition>
																			</subprops>
																		</Obj>
																	</value>
																	<value>
																		<Obj typename='NI_MeasurementParameter' name=''>
																			<subprops>
																				<MessageType classname='Str'>
																					<value/>
																				</MessageType>
																				<Name classname='Str'>
																					<value>voltage_level_range</value>
																				</Name>
																				<ArgumentValue classname='ExprValue'>
																					<value>6</value>
																				</ArgumentValue>
																				<Direction classname='Str'>
																					<value>In</value>
																				</Direction>
																				<Log classname='Bool'>
																					<value>true</value>
																				</Log>
																				<Dimension classname='Num'>
																					<value representation='UInt64'>0</value>
																				</Dimension>
																				<Type classname='Str'>
																					<value>TypeDouble</value>
																				</Type>
																				<ID classname='Num'>
																					<value representation='Int64'>3</value>
																				</ID>
																				<TypeSpecialization classname='Str'>
																					<value>None</value>
																				</TypeSpecialization>
																				<EnumDefinition classname='Objs'>
																					<value lbound='[0]' ubound='[]'/>
																				</EnumDefinition>
																			</subprops>
																		</Obj>
																	</value>
																	<value>
																		<Obj typename='NI_MeasurementParameter' name=''>
																			<subprops>
																				<MessageType classname='Str'>
																					<value/>
																				</MessageType>
																				<Name classname='Str'>
																					<value>current_limit</value>
																				</Name>
																				<ArgumentValue classname='ExprValue'>
																					<value>0.01</value>
																				</ArgumentValue>
																				<Direction classname='Str'>
																					<value>In</value>
																				</Direction>
																				<Log classname='Bool'>
																					<value>true</value>
																				</Log>
																				<Dimension classname='Num'>
																					<value representation='UInt64'>0</value>
																				</Dimension>
																				<Type classname='Str'>
																					<value>TypeDouble</value>
																				</Type>
																				<ID classname='Num'>
																					<value representation='Int64'>4</value>
																				</ID>
																				<TypeSpecialization classname='Str'>
																					<value>None</value>
																				</TypeSpecialization>
																				<EnumDefinition classname='Objs'>
																					<value lbound='[0]' ubound='[]'/>
																				</EnumDefinition>
																			</subprops>
																		</Obj>
																	</value>
																	<value>
																		<Obj typename='NI_MeasurementParameter' name=''>
																			<subprops>
																				<MessageType classname='Str'>
																					<value/>
																				</MessageType>
																				<Name classname='Str'>
																					<value>current_limit_range</value>
																				</Name>
																				<ArgumentValue classname='ExprValue'>
																					<value>0.01</value>
																				</ArgumentValue>
																				<Direction classname='Str'>
																					<value>In</value>
																				</Direction>
																				<Log classname='Bool'>
																					<value>true</value>
																				</Log>
																				<Dimension classname='Num'>
																					<value representation='UInt64'>0</value>
																				</Dimension>
																				<Type classname='Str'>
																					<value>TypeDouble</value>
																				</Type>
																				<ID classname='Num'>
																					<value representation='Int64'>5</value>
																				</ID>
																				<TypeSpecialization classname='Str'>
																					<value>None</value>
																				</TypeSpecialization>
																				<EnumDefinition classname='Objs'>
																					<value lbound='[0]' ubound='[]'/>
																				</EnumDefinition>
																			</subprops>
																		</Obj>
																	</value>
																	<value>
																		<Obj typename='NI_MeasurementParameter' name=''>
																			<subprops>
																				<MessageType classname='Str'>
																					<value/>
																				</MessageType>
																				<Name classname='Str'>
																					<value>source_delay</value>
																				</Name>
																				<ArgumentValue classname='ExprValue'>
																					<value>1</value>
																				</ArgumentValue>
																				<Direction classname='Str'>
																					<value>In</value>
																				</Direction>
																				<Log classname='Bool'>
																					<value>true</value>
																				</Log>
																				<Dimension classname='Num'>
																					<value representation='UInt64'>0</value>
																				</Dimension>
																				<Type classname='Str'>
																					<value>TypeDouble</value>
																				</Type>
																				<ID classname='Num'>
																					<value representation='Int64'>6</value>
																				</ID>
																				<TypeSpecialization classname='Str'>
																					<value>None</value>
																				</TypeSpecialization>
																				<EnumDefinition classname='Objs'>
																					<value lbound='[0]' ubound='[]'/>
																				</EnumDefinition>
																			</subprops>
																		</Obj>
																	</value>
																	<value>
																		<Obj typename='NI_MeasurementParameter' name=''>
																			<subprops>
																				<MessageType classname='Str'>
																					<value/>
																				</MessageType>
																				<Name classname='Str'>
																					<value>measurement_sites</value>
																				</Name>
																				<ArgumentValue classname='ExprValue'>
																					<value/>
																				</ArgumentValue>
																				<Direction classname='Str'>
																					<value>Out</value>
																				</Direction>
																				<Log classname='Bool'>
																					<value>true</value>
																				</Log>
																				<Dimension classname='Num'>
																					<value representation='UInt64'>1</value>
																				</Dimension>
																				<Type classname='Str'>
																					<value>TypeInt32</value>
																				</Type>
																				<ID classname='Num'>
																					<value representation='Int64'>1</value>
																				</ID>
																				<TypeSpecialization classname='Str'>
																					<value>None</value>
																				</TypeSpecialization>
																				<EnumDefinition classname='Objs'>
																					<value lbound='[0]' ubound='[]'/>
																				</EnumDefinition>
																			</subprops>
																		</Obj>
																	</value>
																	<value>
																		<Obj typename='NI_MeasurementParameter' name=''>
																			<subprops>
																				<MessageType classname='Str'>
																					<value/>
																				</MessageType>
																				<Name classname='Str'>
																					<value>measurement_pin_name</value>
																				</Name>
																				<ArgumentValue classname='ExprValue'>
																					<value/>
																				</ArgumentValue>
																				<Direction classname='Str'>
																					<value>Out</value>
																				</Direction>
																				<Log classname='Bool'>
																					<value>true</value>
																				</Log>
																				<Dimension classname='Num'>
																					<value representation='UInt64'>1</value>
																				</Dimension>
																				<Type classname='Str'>
																					<value>TypeString</value>
																				</Type>
																				<ID classname='Num'>
																					<value representation='Int64'>2</value>
																				</ID>
																				<TypeSpecialization classname='Str'>
																					<value>None</value>
																				</TypeSpecialization>
																				<EnumDefinition classname='Objs'>
																					<value lbound='[0]' ubound='[]'/>
																				</EnumDefinition>
																			</subprops>
																		</Obj>
																	</value>
																	<value>
																		<Obj typename='NI_MeasurementParameter' name=''>
																			<subprops>
																				<MessageType classname='Str'>
																					<value/>
																				</MessageType>
																				<Name classname='Str'>
																					<value>voltage_measurements</value>
																				</Name>
																				<ArgumentValue classname='ExprValue'>
																					<value/>
																				</ArgumentValue>
																				<Direction classname='Str'>
																					<value>Out</value>
																				</Direction>
																				<Log classname='Bool'>
																					<value>true</value>
																				</Log>
																				<Dimension classname='Num'>
																					<value representation='UInt64'>1</value>
																				</Dimension>
																				<Type classname='Str'>
																					<value>TypeDouble</value>
																				</Type>
																				<ID classname='Num'>
																					<value representation='Int64'>3</value>
																				</ID>
																				<TypeSpecialization classname='Str'>
																					<value>None</value>
																				</TypeSpecialization>
																				<EnumDefinition classname='Objs'>
																					<value lbound='[0]' ubound='[]'/>
																				</EnumDefinition>
																			</subprops>
																		</Obj>
																	</value>
																	<value>
																		<Obj typename='NI_MeasurementParameter' name=''>
																			<subprops>
																				<MessageType classname='Str'>
																					<value/>
																				</MessageType>
																				<Name classname='Str'>
																					<value>current_measurements</value>
																				</Name>
																				<ArgumentValue classname='ExprValue'>
																					<value/>
																				</ArgumentValue>
																				<Direction classname='Str'>
																					<value>Out</value>
																				</Direction>
																				<Log classname='Bool'>
																					<value>true</value>
																				</Log>
																				<Dimension classname='Num'>
																					<value representation='UInt64'>1</value>
																				</Dimension>
																				<Type classname='Str'>
																					<value>TypeDouble</value>
																				</Type>
																				<ID classname='Num'>
																					<value representation='Int64'>4</value>
																				</ID>
																				<TypeSpecialization classname='Str'>
																					<value>None</value>
																				</TypeSpecialization>
																				<EnumDefinition classname='Objs'>
																					<value lbound='[0]' ubound='[]'/>
																				</EnumDefinition>
																			</subprops>
																		</Obj>
																	</value>
																	<value>
																		<Obj typename='NI_MeasurementParameter' name=''>
																			<subprops>
																				<MessageType classname='Str'>
																					<value/>
																				</MessageType>
																				<Name classname='Str'>
																					<value>in_compliance</value>
																				</Name>
																				<ArgumentValue classname='ExprValue'>
																					<value/>
																				</ArgumentValue>
																				<Direction classname='Str'>
																					<value>Out</value>
																				</Direction>
																				<Log classname='Bool'>
																					<value>true</value>
																				</Log>
																				<Dimension classname='Num'>
																					<value representation='UInt64'>1</value>
																				</Dimension>
																				<Type classname='Str'>
																					<value>TypeBool</value>
																				</Type>
																				<ID classname='Num'>
																					<value representation='Int64'>5</value>
																				</ID>
																				<TypeSpecialization classname='Str'>
																					<value>None</value>
																				</TypeSpecialization>
																				<EnumDefinition classname='Objs'>
																					<value lbound='[0]' ubound='[]'/>
																				</EnumDefinition>
																			</subprops>
																		</Obj>
																	</value>
																</value>
															</Parameters>
														</subprops>
													</Measurement>
												</subprops>
											</Step>
										</value>
									</value>
								</Main>
								<Setup classname='Objs' valueflags='4194304'>
									<value lbound='[0]' ubound='[1]'>
										<value>
											<Step typename='NI_UpdatePinMap' xsi:type='NI_UpdatePinMap' name='Update pin map'>
												<subprops>
													<TS classname='Obj'>
														<subprops>
															<Id classname='Str'>
																<value>ID#:vcxIwASW7hGxGVAoSqomQC</value>
															</Id>
															<Icon classname='Str'>
																<value>NI_SequenceEditor\StepSettings\ni_UpdateMapping.ico</value>
															</Icon>
															<PreCond classname='ExprValue'>
																<value/>
															</PreCond>
															<LoadOpt classname='Str'>
																<value>PreloadWhenExecuted</value>
															</LoadOpt>
															<UnloadOpt classname='Str'>
																<value>UnloadWithFile</value>
															</UnloadOpt>
															<Mode classname='Str'>
																<value>Normal</value>
															</Mode>
															<WindowActivation classname='Str'>
																<value>None</value>
															</WindowActivation>
															<ResultOption classname='Num'>
																<value>0</value>
															</ResultOption>
															<StepFCSeqF classname='Bool'>
																<value>true</value>
															</StepFCSeqF>
															<IgnoreRTE classname='Bool'>
																<value>false</value>
															</IgnoreRTE>
															<UseMutex classname='Bool'>
																<value>false</value>
															</UseMutex>
															<MutexNameOrRef classname='ExprValue'>
																<value/>
															</MutexNameOrRef>
															<BatchSyncOpt classname='Num'>
																<value>0</value>
															</BatchSyncOpt>
															<SwitchEnabled classname='Bool'>
																<value>false</value>
															</SwitchEnabled>
															<VirtualDeviceName classname='ExprValue'>
																<value/>
															</VirtualDeviceName>
															<SwitchOperation classname='Num'>
																<value>1</value>
															</SwitchOperation>
															<RouteGroupConnect classname='ExprValue'>
																<value/>
															</RouteGroupConnect>
															<RouteGroupDisconnect classname='ExprValue'>
																<value/>
															</RouteGroupDisconnect>
															<MulticonnectMode classname='Num'>
																<value>1</value>
															</MulticonnectMode>
															<OperationOrder classname='Num'>
																<value>2</value>
															</OperationOrder>
															<ConnectionLifetime classname='Num'>
																<value>4</value>
															</ConnectionLifetime>
															<WaitForDebounce classname='Bool'>
																<value>true</value>
															</WaitForDebounce>
															<PassAct classname='Str'>
																<value>Next</value>
															</PassAct>
															<FailAct classname='Str'>
																<value>Next</value>
															</FailAct>
															<PassActTarget classname='ExprValue'>
																<value/>
															</PassActTarget>
															<FailActTarget classname='ExprValue'>
																<value/>
															</FailActTarget>
															<CustExpr classname='ExprValue'>
																<value/>
															</CustExpr>
															<CustTrueAct classname='Str'>
																<value>Next</value>
															</CustTrueAct>
															<CustFalseAct classname='Str'>
																<value>Next</value>
															</CustFalseAct>
															<CustTrueActTarget classname='ExprValue'>
																<value/>
															</CustTrueActTarget>
															<CustFalseActTarget classname='ExprValue'>
																<value/>
															</CustFalseActTarget>
															<LoopType classname='Str'>
																<value>NoLooping</value>
															</LoopType>
															<LoopWhile classname='ExprValue'>
																<value/>
															</LoopWhile>
															<LoopStatus classname='ExprValue'>
																<value/>
															</LoopStatus>
															<LoopIncrement classname='ExprValue'>
																<value>RunState.LoopIndex += 1</value>
															</LoopIncrement>
															<LoopInitialize classname='ExprValue'>
																<value>RunState.LoopIndex = 0</value>
															</LoopInitialize>
															<LoopOpt classname='Num'>
																<value>0</value>
															</LoopOpt>
															<PreExpr classname='ExprValue'>
																<value/>
															</PreExpr>
															<PostExpr classname='ExprValue'>
																<value/>
															</PostExpr>
															<StatusExpr classname='ExprValue'>
																<value/>
															</StatusExpr>
															<CanSpecifyModule classname='Bool'>
																<value>true</value>
															</CanSpecifyModule>
															<CanEditCode classname='Bool'>
																<value>true</value>
															</CanEditCode>
															<CanEditModulePrototype classname='Bool'>
																<value>true</value>
															</CanEditModulePrototype>
															<CanEditParameterAdditionalResults classname='Bool'>
																<value>true</value>
															</CanEditParameterAdditionalResults>
															<PrecondIntExe classname='Num'>
																<value>0</value>
															</PrecondIntExe>
															<CustomResults classname='Objs'>
																<value lbound='[0]' ubound='[]'>
																	<elemproto>
																		<_NAME_IN_ATTRIBUTE_ name='' classname='CustomResult'>
																			<subprops>
																				<Name classname='ExprValue'>
																					<value/>
																				</Name>
																				<ValueToLog classname='ExprValue'>
																					<value/>
																				</ValueToLog>
																				<Condition classname='ExprValue'>
																					<value/>
																				</Condition>
																				<Flags classname='Num'>
																					<value>8192</value>
																				</Flags>
																				<CheckedState classname='Num'>
																					<value>2</value>
																				</CheckedState>
																				<Type classname='PropertyObjectType'>
																					<subprops>
																						<ValueType classname='Num'>
																							<value>3</value>
																						</ValueType>
																						<IsObject classname='Bool'>
																							<value>true</value>
																						</IsObject>
																						<TypeName classname='Str'>
																							<value/>
																						</TypeName>
																						<ElementType classname='Objs'>
																							<value lbound='[0]' ubound='[]'/>
																						</ElementType>
																						<ArrayDimensions classname='ArrayDimensions'>
																							<subprops>
																								<LowerBounds classname='Nums'>
																									<value lbound='[0]' ubound='[]'/>
																								</LowerBounds>
																								<UpperBounds classname='Nums'>
																									<value lbound='[0]' ubound='[]'/>
																								</UpperBounds>
																							</subprops>
																						</ArrayDimensions>
																						<Representation classname='Num'>
																							<value>1</value>
																						</Representation>
																						<ClassName classname='Str'>
																							<value/>
																						</ClassName>
																					</subprops>
																				</Type>
																				<Elements classname='Objs'>
																					<value lbound='[0]' ubound='[]'/>
																				</Elements>
																				<IsAnyType classname='Bool'>
																					<value>true</value>
																				</IsAnyType>
																			</subprops>
																		</_NAME_IN_ATTRIBUTE_>
																	</elemproto>
																</value>
															</CustomResults>
															<AdditionalResultsHints classname='Objs'>
																<value lbound='[0]' ubound='[]'>
																	<elemproto>
																		<_NAME_IN_ATTRIBUTE_ name='' classname='CustomResult'>
																			<subprops>
																				<Name classname='ExprValue'>
																					<value/>
																				</Name>
																				<ValueToLog classname='ExprValue'>
																					<value/>
																				</ValueToLog>
																				<Condition classname='ExprValue'>
																					<value/>
																				</Condition>
																				<Flags classname='Num'>
																					<value>8192</value>
																				</Flags>
																				<CheckedState classname='Num'>
																					<value>2</value>
																				</CheckedState>
																				<Type classname='PropertyObjectType'>
																					<subprops>
																						<ValueType classname='Num'>
																							<value>3</value>
																						</ValueType>
																						<IsObject classname='Bool'>
																							<value>true</value>
																						</IsObject>
																						<TypeName classname='Str'>
																							<value/>
																						</TypeName>
																						<ElementType classname='Objs'>
																							<value lbound='[0]' ubound='[]'/>
																						</ElementType>
																						<ArrayDimensions classname='ArrayDimensions'>
																							<subprops>
																								<LowerBounds classname='Nums'>
																									<value lbound='[0]' ubound='[]'/>
																								</LowerBounds>
																								<UpperBounds classname='Nums'>
																									<value lbound='[0]' ubound='[]'/>
																								</UpperBounds>
																							</subprops>
																						</ArrayDimensions>
																						<Representation classname='Num'>
																							<value>1</value>
																						</Representation>
																						<ClassName classname='Str'>
																							<value/>
																						</ClassName>
																					</subprops>
																				</Type>
																				<Elements classname='Objs'>
																					<value lbound='[0]' ubound='[]'/>
																				</Elements>
																				<IsAnyType classname='Bool'>
																					<value>true</value>
																				</IsAnyType>
																			</subprops>
																		</_NAME_IN_ATTRIBUTE_>
																	</elemproto>
																</value>
															</AdditionalResultsHints>
														</subprops>
													</TS>
													<Result classname='Obj'>
														<subprops>
															<Error classname='Obj'>
																<subprops>
																	<Code classname='Num'>
																		<value>0</value>
																	</Code>
																	<Msg classname='Str'>
																		<value/>
																	</Msg>
																	<Occurred classname='Bool'>
																		<value>false</value>
																	</Occurred>
																</subprops>
															</Error>
															<Status classname='Str'>
																<value/>
															</Status>
															<ReportText classname='Str'>
																<value/>
															</ReportText>
															<Common classname='Obj'/>
														</subprops>
													</Result>
													<PinMapPath classname='PathValue'>
														<value>"NIDCPowerSourceDCVoltage.pinmap"</value>
													</PinMapPath>
												</subprops>
											</Step>
										</value>
										<value>
											<Step typename='Action' xsi:type='Action' name='Initialize and register NI-DCPower Sessions'>
												<subprops>
													<TS classname='Obj'>
														<subprops>
															<Id classname='Str'>
																<value>ID#:2d1ji6jd7RGiN0xEW1WgXC</value>
															</Id>
															<Icon classname='Str'>
																<value/>
															</Icon>
															<SData typename='FlexGStepAdditions' xsi:type='FlexGStepAdditions' classname='FGModule'>
																<subprops>
																	<ViCall classname='VICall'>
																		<subprops>
																			<CallType classname='Num'>
																				<value>0</value>
																			</CallType>
																			<ClassPath classname='PathValue'>
																				<value/>
																			</ClassPath>
																			<ProjectPath classname='PathValue'>
																				<value>NIDCPowerSourceDCVoltage.lvproj</value>
																			</ProjectPath>
																			<RemoteProjectPath classname='PathValue'>
																				<value/>
																			</RemoteProjectPath>
																			<VIPath classname='PathValue'>
																				<value>My Computer\NIDCPowerSourceDCVoltage.lvlib\TestStand Code Modules\Initialize and Register Sessions.vi</value>
																			</VIPath>
																			<Namespace classname='Str'>
																				<value>NIDCPowerSourceDCVoltage.lvlib</value>
																			</Namespace>
																			<RemoteVIPath classname='PathValue'>
																				<value/>
																			</RemoteVIPath>
																			<CallName classname='Str'>
																				<value/>
																			</CallName>
																			<VIType classname='Num'>
																				<value>0</value>
																			</VIType>
																			<ShowFrnPnl classname='Bool'>
																				<value>false</value>
																			</ShowFrnPnl>
																			<VIDescription classname='Str'>
																				<value/>
																			</VIDescription>
																			<TDChecksum classname='Num'>
																				<value>1647506694</value>
																			</TDChecksum>
																			<NodeLibraryName classname='Str'>
																				<value/>
																			</NodeLibraryName>
																			<NodeLibraryGenericTypeName classname='Str'>
																				<value/>
																			</NodeLibraryGenericTypeName>
																			<NodeClassDataName classname='Str'>
																				<value/>
																			</NodeClassDataName>
																			<NodeUsesDataValueReference classname='Bool'>
																				<value>false</value>
																			</NodeUsesDataValueReference>
																			<NodeIgnoresInternalErrors classname='Bool'>
																				<value>false</value>
																			</NodeIgnoresInternalErrors>
																			<NodeOperationMode classname='Num'>
																				<value>0</value>
																			</NodeOperationMode>
																			<AutoDetectLVRT classname='Bool'>
																				<value>false</value>
																			</AutoDetectLVRT>
																			<RemoteHost classname='ExprValue'>
																				<value/>
																			</RemoteHost>
																			<RemoteHostByExpr classname='Bool'>
																				<value>false</value>
																			</RemoteHostByExpr>
																			<PrototypeFlags classname='Num'>
																				<value>0</value>
																			</PrototypeFlags>
																			<VI classname='Str'>
																				<value/>
																			</VI>
																			<OverrideBinaryClassPath classname='PathValue'>
																				<value/>
																			</OverrideBinaryClassPath>
																			<OverrideBinaryVIPath classname='PathValue'>
																				<value/>
																			</OverrideBinaryVIPath>
																			<OverrideBinaryProjectPath classname='PathValue'>
																				<value/>
																			</OverrideBinaryProjectPath>
																			<OverrideBinaryNamespace classname='Str'>
																				<value/>
																			</OverrideBinaryNamespace>
																			<OverrideModuleOptions classname='Num'>
																				<value>0</value>
																			</OverrideModuleOptions>
																			<BuildSpecificationName classname='Str'>
																				<value/>
																			</BuildSpecificationName>
																			<OverrideBinaryVIChecksum classname='Num'>
																				<value>-1</value>
																			</OverrideBinaryVIChecksum>
																			<ArrayParametersMatchLVArrayDimenions classname='Bool'>
																				<value>false</value>
																			</ArrayParametersMatchLVArrayDimenions>
																			<Parms classname='Objs'>
																				<value lbound='[0]' ubound='[2]'>
																					<elemproto>
																						<_NAME_IN_ATTRIBUTE_ name='' classname='VIParameter' structureflags='0'/>
																					</elemproto>
																					<value>
																						<VIParameter typename='VIParameter' xsi:type='VIParameter' name='sequence context'>
																							<subprops>
																								<Label classname='Str'>
																									<value>sequence context</value>
																								</Label>
																								<Caption classname='Str'>
																									<value/>
																								</Caption>
																								<ArgVal classname='ExprValue'>
																									<value>ThisContext</value>
																								</ArgVal>
																								<ArgDisplayVal classname='ExprValue'>
																									<value/>
																								</ArgDisplayVal>
																								<Type classname='Num'>
																									<value>4</value>
																								</Type>
																								<WireRequirement classname='Num'>
																									<value>0</value>
																								</WireRequirement>
																								<ArrayType classname='Num'>
																									<value>50</value>
																								</ArrayType>
																								<DefaultArraySize classname='Str'>
																									<value>[]</value>
																								</DefaultArraySize>
																								<ClusterType classname='Num'>
																									<value>20</value>
																								</ClusterType>
																								<NumType classname='Num'>
																									<value>7</value>
																								</NumType>
																								<ReferenceType classname='Num'>
																									<value>0</value>
																								</ReferenceType>
																								<StrPass classname='Num'>
																									<value>0</value>
																								</StrPass>
																								<DisplayType classname='Str'>
																									<value>Object Reference</value>
																								</DisplayType>
																								<UseDefaultValues classname='Bool'>
																									<value>false</value>
																								</UseDefaultValues>
																								<PartiallySpecified classname='Bool'>
																									<value>false</value>
																								</PartiallySpecified>
																								<ArrayClusterEls classname='Objs'>
																									<value lbound='[0]' ubound='[]'/>
																								</ArrayClusterEls>
																								<AdditionalResult classname='LabVIEWParameterResult'>
																									<subprops>
																										<Condition classname='ExprValue'>
																											<value/>
																										</Condition>
																										<Flags classname='Num'>
																											<value>8192</value>
																										</Flags>
																										<CheckedState classname='Num'>
																											<value>1</value>
																										</CheckedState>
																									</subprops>
																								</AdditionalResult>
																								<Direction classname='Num'>
																									<value>0</value>
																								</Direction>
																								<ConnectorNumber classname='Num'>
																									<value>11</value>
																								</ConnectorNumber>
																								<LegacyClusterType classname='Num'>
																									<value>0</value>
																								</LegacyClusterType>
																							</subprops>
																						</VIParameter>
																					</value>
																					<value>
																						<VIParameter typename='VIParameter' xsi:type='VIParameter' name='error in'>
																							<subprops>
																								<Label classname='Str'>
																									<value>error in</value>
																								</Label>
																								<Caption classname='Str'>
																									<value/>
																								</Caption>
																								<ArgVal classname='ExprValue'>
																									<value/>
																								</ArgVal>
																								<ArgDisplayVal classname='ExprValue'>
																									<value/>
																								</ArgDisplayVal>
																								<Type classname='Num'>
																									<value>3</value>
																								</Type>
																								<WireRequirement classname='Num'>
																									<value>1</value>
																								</WireRequirement>
																								<ArrayType classname='Num'>
																									<value>50</value>
																								</ArrayType>
																								<DefaultArraySize classname='Str'>
																									<value>[]</value>
																								</DefaultArraySize>
																								<ClusterType classname='Num'>
																									<value>20</value>
																								</ClusterType>
																								<NumType classname='Num'>
																									<value>7</value>
																								</NumType>
																								<ReferenceType classname='Num'>
																									<value>0</value>
																								</ReferenceType>
																								<StrPass classname='Num'>
																									<value>0</value>
																								</StrPass>
																								<DisplayType classname='Str'>
																									<value>Container</value>
																								</DisplayType>
																								<UseDefaultValues classname='Bool'>
																									<value>true</value>
																								</UseDefaultValues>
																								<PartiallySpecified classname='Bool'>
																									<value>false</value>
																								</PartiallySpecified>
																								<ArrayClusterEls classname='Objs'>
																									<value lbound='[0]' ubound='[2]'>
																										<value>
																											<VIParameterElement typename='VIParameterElement' xsi:type='VIParameterElement' name='status'>
																												<subprops>
																													<Label classname='Str'>
																														<value>status</value>
																													</Label>
																													<Caption classname='Str'>
																														<value/>
																													</Caption>
																													<ArgVal classname='ExprValue'>
																														<value>False</value>
																													</ArgVal>
																													<ArgDisplayVal classname='ExprValue'>
																														<value/>
																													</ArgDisplayVal>
																													<Type classname='Num'>
																														<value>2</value>
																													</Type>
																													<WireRequirement classname='Num'>
																														<value>1</value>
																													</WireRequirement>
																													<ArrayType classname='Num'>
																														<value>50</value>
																													</ArrayType>
																													<DefaultArraySize classname='Str'>
																														<value>[]</value>
																													</DefaultArraySize>
																													<ClusterType classname='Num'>
																														<value>20</value>
																													</ClusterType>
																													<NumType classname='Num'>
																														<value>7</value>
																													</NumType>
																													<ReferenceType classname='Num'>
																														<value>0</value>
																													</ReferenceType>
																													<StrPass classname='Num'>
																														<value>0</value>
																													</StrPass>
																													<DisplayType classname='Str'>
																														<value>Boolean</value>
																													</DisplayType>
																													<UseDefaultValues classname='Bool'>
																														<value>true</value>
																													</UseDefaultValues>
																													<PartiallySpecified classname='Bool'>
																														<value>false</value>
																													</PartiallySpecified>
																													<ArrayClusterEls classname='Objs'>
																														<value lbound='[0]' ubound='[]'/>
																													</ArrayClusterEls>
																													<AdditionalResult classname='LabVIEWParameterResult'>
																														<subprops>
																															<Condition classname='ExprValue'>
																																<value/>
																															</Condition>
																															<Flags classname='Num'>
																																<value>8192</value>
																															</Flags>
																															<CheckedState classname='Num'>
																																<value>1</value>
																															</CheckedState>
																														</subprops>
																													</AdditionalResult>
																												</subprops>
																											</VIParameterElement>
																										</value>
																										<value>
																											<VIParameterElement typename='VIParameterElement' xsi:type='VIParameterElement' name='code'>
																												<subprops>
																													<Label classname='Str'>
																														<value>code</value>
																													</Label>
																													<Caption classname='Str'>
																														<value/>
																													</Caption>
																													<ArgVal classname='ExprValue'>
																														<value>0</value>
																													</ArgVal>
																													<ArgDisplayVal classname='ExprValue'>
																														<value/>
																													</ArgDisplayVal>
																													<Type classname='Num'>
																														<value>0</value>
																													</Type>
																													<WireRequirement classname='Num'>
																														<value>1</value>
																													</WireRequirement>
																													<ArrayType classname='Num'>
																														<value>50</value>
																													</ArrayType>
																													<DefaultArraySize classname='Str'>
																														<value>[]</value>
																													</DefaultArraySize>
																													<ClusterType classname='Num'>
																														<value>20</value>
																													</ClusterType>
																													<NumType classname='Num'>
																														<value>4</value>
																													</NumType>
																													<ReferenceType classname='Num'>
																														<value>0</value>
																													</ReferenceType>
																													<StrPass classname='Num'>
																														<value>0</value>
																													</StrPass>
																													<DisplayType classname='Str'>
																														<value>Number (I32)</value>
																													</DisplayType>
																													<UseDefaultValues classname='Bool'>
																														<value>true</value>
																													</UseDefaultValues>
																													<PartiallySpecified classname='Bool'>
																														<value>false</value>
																													</PartiallySpecified>
																													<ArrayClusterEls classname='Objs'>
																														<value lbound='[0]' ubound='[]'/>
																													</ArrayClusterEls>
																													<AdditionalResult classname='LabVIEWParameterResult'>
																														<subprops>
																															<Condition classname='ExprValue'>
																																<value/>
																															</Condition>
																															<Flags classname='Num'>
																																<value>8192</value>
																															</Flags>
																															<CheckedState classname='Num'>
																																<value>1</value>
																															</CheckedState>
																														</subprops>
																													</AdditionalResult>
																												</subprops>
																											</VIParameterElement>
																										</value>
																										<value>
																											<VIParameterElement typename='VIParameterElement' xsi:type='VIParameterElement' name='source'>
																												<subprops>
																													<Label classname='Str'>
																														<value>source</value>
																													</Label>
																													<Caption classname='Str'>
																														<value/>
																													</Caption>
																													<ArgVal classname='ExprValue'>
																														<value>""</value>
																													</ArgVal>
																													<ArgDisplayVal classname='ExprValue'>
																														<value/>
																													</ArgDisplayVal>
																													<Type classname='Num'>
																														<value>1</value>
																													</Type>
																													<WireRequirement classname='Num'>
																														<value>1</value>
																													</WireRequirement>
																													<ArrayType classname='Num'>
																														<value>50</value>
																													</ArrayType>
																													<DefaultArraySize classname='Str'>
																														<value>[]</value>
																													</DefaultArraySize>
																													<ClusterType classname='Num'>
																														<value>20</value>
																													</ClusterType>
																													<NumType classname='Num'>
																														<value>7</value>
																													</NumType>
																													<ReferenceType classname='Num'>
																														<value>0</value>
																													</ReferenceType>
																													<StrPass classname='Num'>
																														<value>0</value>
																													</StrPass>
																													<DisplayType classname='Str'>
																														<value>ASCII String</value>
																													</DisplayType>
																													<UseDefaultValues classname='Bool'>
																														<value>true</value>
																													</UseDefaultValues>
																													<PartiallySpecified classname='Bool'>
																														<value>false</value>
																													</PartiallySpecified>
																													<ArrayClusterEls classname='Objs'>
																														<value lbound='[0]' ubound='[]'/>
																													</ArrayClusterEls>
																													<AdditionalResult classname='LabVIEWParameterResult'>
																														<subprops>
																															<Condition classname='ExprValue'>
																																<value/>
																															</Condition>
																															<Flags classname='Num'>
																																<value>8192</value>
																															</Flags>
																															<CheckedState classname='Num'>
																																<value>1</value>
																															</CheckedState>
																														</subprops>
																													</AdditionalResult>
																												</subprops>
																											</VIParameterElement>
																										</value>
																									</value>
																								</ArrayClusterEls>
																								<AdditionalResult classname='LabVIEWParameterResult'>
																									<subprops>
																										<Condition classname='ExprValue'>
																											<value/>
																										</Condition>
																										<Flags classname='Num'>
																											<value>8192</value>
																										</Flags>
																										<CheckedState classname='Num'>
																											<value>1</value>
																										</CheckedState>
																									</subprops>
																								</AdditionalResult>
																								<Direction classname='Num'>
																									<value>0</value>
																								</Direction>
																								<ConnectorNumber classname='Num'>
																									<value>8</value>
																								</ConnectorNumber>
																								<LegacyClusterType classname='Num'>
																									<value>0</value>
																								</LegacyClusterType>
																							</subprops>
																						</VIParameter>
																					</value>
																					<value>
																						<VIParameter typename='VIParameter' xsi:type='VIParameter' name='error out'>
																							<subprops>
																								<Label classname='Str'>
																									<value>error out</value>
																								</Label>
																								<Caption classname='Str'>
																									<value/>
																								</Caption>
																								<ArgVal classname='ExprValue'>
																									<value>Step.Result.Error</value>
																								</ArgVal>
																								<ArgDisplayVal classname='ExprValue'>
																									<value/>
																								</ArgDisplayVal>
																								<Type classname='Num'>
																									<value>3</value>
																								</Type>
																								<WireRequirement classname='Num'>
																									<value>1</value>
																								</WireRequirement>
																								<ArrayType classname='Num'>
																									<value>50</value>
																								</ArrayType>
																								<DefaultArraySize classname='Str'>
																									<value>[]</value>
																								</DefaultArraySize>
																								<ClusterType classname='Num'>
																									<value>20</value>
																								</ClusterType>
																								<NumType classname='Num'>
																									<value>7</value>
																								</NumType>
																								<ReferenceType classname='Num'>
																									<value>0</value>
																								</ReferenceType>
																								<StrPass classname='Num'>
																									<value>0</value>
																								</StrPass>
																								<DisplayType classname='Str'>
																									<value>Container</value>
																								</DisplayType>
																								<UseDefaultValues classname='Bool'>
																									<value>false</value>
																								</UseDefaultValues>
																								<PartiallySpecified classname='Bool'>
																									<value>false</value>
																								</PartiallySpecified>
																								<ArrayClusterEls classname='Objs'>
																									<value lbound='[0]' ubound='[2]'>
																										<value>
																											<VIParameterElement typename='VIParameterElement' xsi:type='VIParameterElement' name='status'>
																												<subprops>
																													<Label classname='Str'>
																														<value>status</value>
																													</Label>
																													<Caption classname='Str'>
																														<value/>
																													</Caption>
																													<ArgVal classname='ExprValue'>
																														<value>Step.Result.Error.Occurred</value>
																													</ArgVal>
																													<ArgDisplayVal classname='ExprValue'>
																														<value/>
																													</ArgDisplayVal>
																													<Type classname='Num'>
																														<value>2</value>
																													</Type>
																													<WireRequirement classname='Num'>
																														<value>1</value>
																													</WireRequirement>
																													<ArrayType classname='Num'>
																														<value>50</value>
																													</ArrayType>
																													<DefaultArraySize classname='Str'>
																														<value>[]</value>
																													</DefaultArraySize>
																													<ClusterType classname='Num'>
																														<value>20</value>
																													</ClusterType>
																													<NumType classname='Num'>
																														<value>7</value>
																													</NumType>
																													<ReferenceType classname='Num'>
																														<value>0</value>
																													</ReferenceType>
																													<StrPass classname='Num'>
																														<value>0</value>
																													</StrPass>
																													<DisplayType classname='Str'>
																														<value>Boolean</value>
																													</DisplayType>
																													<UseDefaultValues classname='Bool'>
																														<value>false</value>
																													</UseDefaultValues>
																													<PartiallySpecified classname='Bool'>
																														<value>false</value>
																													</PartiallySpecified>
																													<ArrayClusterEls classname='Objs'>
																														<value lbound='[0]' ubound='[]'/>
																													</ArrayClusterEls>
																													<AdditionalResult classname='LabVIEWParameterResult'>
																														<subprops>
																															<Condition classname='ExprValue'>
																																<value/>
																															</Condition>
																															<Flags classname='Num'>
																																<value>8192</value>
																															</Flags>
																															<CheckedState classname='Num'>
																																<value>1</value>
																															</CheckedState>
																														</subprops>
																													</AdditionalResult>
																												</subprops>
																											</VIParameterElement>
																										</value>
																										<value>
																											<VIParameterElement typename='VIParameterElement' xsi:type='VIParameterElement' name='code'>
																												<subprops>
																													<Label classname='Str'>
																														<value>code</value>
																													</Label>
																													<Caption classname='Str'>
																														<value/>
																													</Caption>
																													<ArgVal classname='ExprValue'>
																														<value>Step.Result.Error.Code</value>
																													</ArgVal>
																													<ArgDisplayVal classname='ExprValue'>
																														<value/>
																													</ArgDisplayVal>
																													<Type classname='Num'>
																														<value>0</value>
																													</Type>
																													<WireRequirement classname='Num'>
																														<value>1</value>
																													</WireRequirement>
																													<ArrayType classname='Num'>
																														<value>50</value>
																													</ArrayType>
																													<DefaultArraySize classname='Str'>
																														<value>[]</value>
																													</DefaultArraySize>
																													<ClusterType classname='Num'>
																														<value>20</value>
																													</ClusterType>
																													<NumType classname='Num'>
																														<value>4</value>
																													</NumType>
																													<ReferenceType classname='Num'>
																														<value>0</value>
																													</ReferenceType>
																													<StrPass classname='Num'>
																														<value>0</value>
																													</StrPass>
																													<DisplayType classname='Str'>
																														<value>Number (I32)</value>
																													</DisplayType>
																													<UseDefaultValues classname='Bool'>
																														<value>false</value>
																													</UseDefaultValues>
																													<PartiallySpecified classname='Bool'>
																														<value>false</value>
																													</PartiallySpecified>
																													<ArrayClusterEls classname='Objs'>
																														<value lbound='[0]' ubound='[]'/>
																													</ArrayClusterEls>
																													<AdditionalResult classname='LabVIEWParameterResult'>
																														<subprops>
																															<Condition classname='ExprValue'>
																																<value/>
																															</Condition>
																															<Flags classname='Num'>
																																<value>8192</value>
																															</Flags>
																															<CheckedState classname='Num'>
																																<value>1</value>
																															</CheckedState>
																														</subprops>
																													</AdditionalResult>
																												</subprops>
																											</VIParameterElement>
																										</value>
																										<value>
																											<VIParameterElement typename='VIParameterElement' xsi:type='VIParameterElement' name='source'>
																												<subprops>
																													<Label classname='Str'>
																														<value>source</value>
																													</Label>
																													<Caption classname='Str'>
																														<value/>
																													</Caption>
																													<ArgVal classname='ExprValue'>
																														<value>Step.Result.Error.Msg</value>
																													</ArgVal>
																													<ArgDisplayVal classname='ExprValue'>
																														<value/>
																													</ArgDisplayVal>
																													<Type classname='Num'>
																														<value>1</value>
																													</Type>
																													<WireRequirement classname='Num'>
																														<value>1</value>
																													</WireRequirement>
																													<ArrayType classname='Num'>
																														<value>50</value>
																													</ArrayType>
																													<DefaultArraySize classname='Str'>
																														<value>[]</value>
																													</DefaultArraySize>
																													<ClusterType classname='Num'>
																														<value>20</value>
																													</ClusterType>
																													<NumType classname='Num'>
																														<value>7</value>
																													</NumType>
																													<ReferenceType classname='Num'>
																														<value>0</value>
																													</ReferenceType>
																													<StrPass classname='Num'>
																														<value>0</value>
																													</StrPass>
																													<DisplayType classname='Str'>
																														<value>ASCII String</value>
																													</DisplayType>
																													<UseDefaultValues classname='Bool'>
																														<value>false</value>
																													</UseDefaultValues>
																													<PartiallySpecified classname='Bool'>
																														<value>false</value>
																													</PartiallySpecified>
																													<ArrayClusterEls classname='Objs'>
																														<value lbound='[0]' ubound='[]'/>
																													</ArrayClusterEls>
																													<AdditionalResult classname='LabVIEWParameterResult'>
																														<subprops>
																															<Condition classname='ExprValue'>
																																<value/>
																															</Condition>
																															<Flags classname='Num'>
																																<value>8192</value>
																															</Flags>
																															<CheckedState classname='Num'>
																																<value>1</value>
																															</CheckedState>
																														</subprops>
																													</AdditionalResult>
																												</subprops>
																											</VIParameterElement>
																										</value>
																									</value>
																								</ArrayClusterEls>
																								<AdditionalResult classname='LabVIEWParameterResult'>
																									<subprops>
																										<Condition classname='ExprValue'>
																											<value/>
																										</Condition>
																										<Flags classname='Num'>
																											<value>8192</value>
																										</Flags>
																										<CheckedState classname='Num'>
																											<value>1</value>
																										</CheckedState>
																									</subprops>
																								</AdditionalResult>
																								<Direction classname='Num'>
																									<value>1</value>
																								</Direction>
																								<ConnectorNumber classname='Num'>
																									<value>0</value>
																								</ConnectorNumber>
																								<LegacyClusterType classname='Num'>
																									<value>2</value>
																								</LegacyClusterType>
																							</subprops>
																						</VIParameter>
																					</value>
																				</value>
																			</Parms>
																			<NodeProperties classname='Objs'>
																				<value lbound='[0]' ubound='[]'>
																					<elemproto>
																						<_NAME_IN_ATTRIBUTE_ name='' classname='LVNodeProperty' structureflags='0'/>
																					</elemproto>
																				</value>
																			</NodeProperties>
																		</subprops>
																	</ViCall>
																</subprops>
															</SData>
															<PreCond classname='ExprValue'>
																<value/>
															</PreCond>
															<LoadOpt classname='Str'>
																<value>PreloadWhenExecuted</value>
															</LoadOpt>
															<UnloadOpt classname='Str'>
																<value>UnloadWithFile</value>
															</UnloadOpt>
															<Mode classname='Str'>
																<value>Normal</value>
															</Mode>
															<WindowActivation classname='Str'>
																<value>None</value>
															</WindowActivation>
															<ResultOption classname='Num'>
																<value>0</value>
															</ResultOption>
															<StepFCSeqF classname='Bool'>
																<value>true</value>
															</StepFCSeqF>
															<IgnoreRTE classname='Bool'>
																<value>false</value>
															</IgnoreRTE>
															<UseMutex classname='Bool'>
																<value>false</value>
															</UseMutex>
															<MutexNameOrRef classname='ExprValue'>
																<value/>
															</MutexNameOrRef>
															<BatchSyncOpt classname='Num'>
																<value>0</value>
															</BatchSyncOpt>
															<SwitchEnabled classname='Bool'>
																<value>false</value>
															</SwitchEnabled>
															<VirtualDeviceName classname='ExprValue'>
																<value/>
															</VirtualDeviceName>
															<SwitchOperation classname='Num'>
																<value>1</value>
															</SwitchOperation>
															<RouteGroupConnect classname='ExprValue'>
																<value/>
															</RouteGroupConnect>
															<RouteGroupDisconnect classname='ExprValue'>
																<value/>
															</RouteGroupDisconnect>
															<MulticonnectMode classname='Num'>
																<value>1</value>
															</MulticonnectMode>
															<OperationOrder classname='Num'>
																<value>2</value>
															</OperationOrder>
															<ConnectionLifetime classname='Num'>
																<value>0</value>
															</ConnectionLifetime>
															<WaitForDebounce classname='Bool'>
																<value>true</value>
															</WaitForDebounce>
															<PassAct classname='Str'>
																<value>Next</value>
															</PassAct>
															<FailAct classname='Str'>
																<value>Next</value>
															</FailAct>
															<PassActTarget classname='ExprValue'>
																<value/>
															</PassActTarget>
															<FailActTarget classname='ExprValue'>
																<value/>
															</FailActTarget>
															<CustExpr classname='ExprValue'>
																<value/>
															</CustExpr>
															<CustTrueAct classname='Str'>
																<value>Next</value>
															</CustTrueAct>
															<CustFalseAct classname='Str'>
																<value>Next</value>
															</CustFalseAct>
															<CustTrueActTarget classname='ExprValue'>
																<value/>
															</CustTrueActTarget>
															<CustFalseActTarget classname='ExprValue'>
																<value/>
															</CustFalseActTarget>
															<LoopType classname='Str'>
																<value>NoLooping</value>
															</LoopType>
															<LoopWhile classname='ExprValue'>
																<value/>
															</LoopWhile>
															<LoopStatus classname='ExprValue'>
																<value/>
															</LoopStatus>
															<LoopIncrement classname='ExprValue'>
																<value>RunState.LoopIndex += 1</value>
															</LoopIncrement>
															<LoopInitialize classname='ExprValue'>
																<value>RunState.LoopIndex = 0</value>
															</LoopInitialize>
															<LoopOpt classname='Num'>
																<value>0</value>
															</LoopOpt>
															<PreExpr classname='ExprValue'>
																<value/>
															</PreExpr>
															<PostExpr classname='ExprValue'>
																<value/>
															</PostExpr>
															<StatusExpr classname='ExprValue'>
																<value/>
															</StatusExpr>
															<CanSpecifyModule classname='Bool'>
																<value>true</value>
															</CanSpecifyModule>
															<CanEditCode classname='Bool'>
																<value>true</value>
															</CanEditCode>
															<CanEditModulePrototype classname='Bool'>
																<value>true</value>
															</CanEditModulePrototype>
															<CanEditParameterAdditionalResults classname='Bool'>
																<value>true</value>
															</CanEditParameterAdditionalResults>
															<PrecondIntExe classname='Num'>
																<value>0</value>
															</PrecondIntExe>
															<CustomResults classname='Objs'>
																<value lbound='[0]' ubound='[]'>
																	<elemproto>
																		<_NAME_IN_ATTRIBUTE_ name='' classname='CustomResult'>
																			<subprops>
																				<Name classname='ExprValue'>
																					<value/>
																				</Name>
																				<ValueToLog classname='ExprValue'>
																					<value/>
																				</ValueToLog>
																				<Condition classname='ExprValue'>
																					<value/>
																				</Condition>
																				<Flags classname='Num'>
																					<value>8192</value>
																				</Flags>
																				<CheckedState classname='Num'>
																					<value>2</value>
																				</CheckedState>
																				<Type classname='PropertyObjectType'>
																					<subprops>
																						<ValueType classname='Num'>
																							<value>3</value>
																						</ValueType>
																						<IsObject classname='Bool'>
																							<value>true</value>
																						</IsObject>
																						<TypeName classname='Str'>
																							<value/>
																						</TypeName>
																						<ElementType classname='Objs'>
																							<value lbound='[0]' ubound='[]'/>
																						</ElementType>
																						<ArrayDimensions classname='ArrayDimensions'>
																							<subprops>
																								<LowerBounds classname='Nums'>
																									<value lbound='[0]' ubound='[]'/>
																								</LowerBounds>
																								<UpperBounds classname='Nums'>
																									<value lbound='[0]' ubound='[]'/>
																								</UpperBounds>
																							</subprops>
																						</ArrayDimensions>
																						<Representation classname='Num'>
																							<value>1</value>
																						</Representation>
																						<ClassName classname='Str'>
																							<value/>
																						</ClassName>
																					</subprops>
																				</Type>
																				<Elements classname='Objs'>
																					<value lbound='[0]' ubound='[]'/>
																				</Elements>
																				<IsAnyType classname='Bool'>
																					<value>true</value>
																				</IsAnyType>
																			</subprops>
																		</_NAME_IN_ATTRIBUTE_>
																	</elemproto>
																</value>
															</CustomResults>
															<AdditionalResultsHints classname='Objs'>
																<value lbound='[0]' ubound='[]'>
																	<elemproto>
																		<_NAME_IN_ATTRIBUTE_ name='' classname='CustomResult'>
																			<subprops>
																				<Name classname='ExprValue'>
																					<value/>
																				</Name>
																				<ValueToLog classname='ExprValue'>
																					<value/>
																				</ValueToLog>
																				<Condition classname='ExprValue'>
																					<value/>
																				</Condition>
																				<Flags classname='Num'>
																					<value>8192</value>
																				</Flags>
																				<CheckedState classname='Num'>
																					<value>2</value>
																				</CheckedState>
																				<Type classname='PropertyObjectType'>
																					<subprops>
																						<ValueType classname='Num'>
																							<value>3</value>
																						</ValueType>
																						<IsObject classname='Bool'>
																							<value>true</value>
																						</IsObject>
																						<TypeName classname='Str'>
																							<value/>
																						</TypeName>
																						<ElementType classname='Objs'>
																							<value lbound='[0]' ubound='[]'/>
																						</ElementType>
																						<ArrayDimensions classname='ArrayDimensions'>
																							<subprops>
																								<LowerBounds classname='Nums'>
																									<value lbound='[0]' ubound='[]'/>
																								</LowerBounds>
																								<UpperBounds classname='Nums'>
																									<value lbound='[0]' ubound='[]'/>
																								</UpperBounds>
																							</subprops>
																						</ArrayDimensions>
																						<Representation classname='Num'>
																							<value>1</value>
																						</Representation>
																						<ClassName classname='Str'>
																							<value/>
																						</ClassName>
																					</subprops>
																				</Type>
																				<Elements classname='Objs'>
																					<value lbound='[0]' ubound='[]'/>
																				</Elements>
																				<IsAnyType classname='Bool'>
																					<value>true</value>
																				</IsAnyType>
																			</subprops>
																		</_NAME_IN_ATTRIBUTE_>
																	</elemproto>
																</value>
															</AdditionalResultsHints>
														</subprops>
													</TS>
													<Result classname='Obj'>
														<subprops>
															<Error classname='Obj'>
																<subprops>
																	<Code classname='Num'>
																		<value>0</value>
																	</Code>
																	<Msg classname='Str'>
																		<value/>
																	</Msg>
																	<Occurred classname='Bool'>
																		<value>false</value>
																	</Occurred>
																</subprops>
															</Error>
															<Status classname='Str'>
																<value/>
															</Status>
															<ReportText classname='Str'>
																<value/>
															</ReportText>
															<Common classname='Obj'/>
														</subprops>
													</Result>
												</subprops>
											</Step>
										</value>
									</value>
								</Setup>
								<Cleanup classname='Objs' valueflags='4194304'>
									<value lbound='[0]' ubound='[0]'>
										<value>
											<Step typename='Action' xsi:type='Action' name='Unregister and close NI-DCPower sessions'>
												<subprops>
													<TS classname='Obj'>
														<subprops>
															<Id classname='Str'>
																<value>ID#:mOwxmKjd7RGiN0xEW1WgXC</value>
															</Id>
															<Icon classname='Str'>
																<value/>
															</Icon>
															<SData typename='FlexGStepAdditions' xsi:type='FlexGStepAdditions' classname='FGModule'>
																<subprops>
																	<ViCall classname='VICall'>
																		<subprops>
																			<CallType classname='Num'>
																				<value>0</value>
																			</CallType>
																			<ClassPath classname='PathValue'>
																				<value/>
																			</ClassPath>
																			<ProjectPath classname='PathValue'>
																				<value>NIDCPowerSourceDCVoltage.lvproj</value>
																			</ProjectPath>
																			<RemoteProjectPath classname='PathValue'>
																				<value/>
																			</RemoteProjectPath>
																			<VIPath classname='PathValue'>
																				<value>My Computer\NIDCPowerSourceDCVoltage.lvlib\TestStand Code Modules\Unregister and Close Sessions.vi</value>
																			</VIPath>
																			<Namespace classname='Str'>
																				<value>NIDCPowerSourceDCVoltage.lvlib</value>
																			</Namespace>
																			<RemoteVIPath classname='PathValue'>
																				<value/>
																			</RemoteVIPath>
																			<CallName classname='Str'>
																				<value/>
																			</CallName>
																			<VIType classname='Num'>
																				<value>0</value>
																			</VIType>
																			<ShowFrnPnl classname='Bool'>
																				<value>false</value>
																			</ShowFrnPnl>
																			<VIDescription classname='Str'>
																				<value/>
																			</VIDescription>
																			<TDChecksum classname='Num'>
																				<value>1801503858</value>
																			</TDChecksum>
																			<NodeLibraryName classname='Str'>
																				<value/>
																			</NodeLibraryName>
																			<NodeLibraryGenericTypeName classname='Str'>
																				<value/>
																			</NodeLibraryGenericTypeName>
																			<NodeClassDataName classname='Str'>
																				<value/>
																			</NodeClassDataName>
																			<NodeUsesDataValueReference classname='Bool'>
																				<value>false</value>
																			</NodeUsesDataValueReference>
																			<NodeIgnoresInternalErrors classname='Bool'>
																				<value>false</value>
																			</NodeIgnoresInternalErrors>
																			<NodeOperationMode classname='Num'>
																				<value>0</value>
																			</NodeOperationMode>
																			<AutoDetectLVRT classname='Bool'>
																				<value>false</value>
																			</AutoDetectLVRT>
																			<RemoteHost classname='ExprValue'>
																				<value/>
																			</RemoteHost>
																			<RemoteHostByExpr classname='Bool'>
																				<value>false</value>
																			</RemoteHostByExpr>
																			<PrototypeFlags classname='Num'>
																				<value>0</value>
																			</PrototypeFlags>
																			<VI classname='Str'>
																				<value/>
																			</VI>
																			<OverrideBinaryClassPath classname='PathValue'>
																				<value/>
																			</OverrideBinaryClassPath>
																			<OverrideBinaryVIPath classname='PathValue'>
																				<value/>
																			</OverrideBinaryVIPath>
																			<OverrideBinaryProjectPath classname='PathValue'>
																				<value/>
																			</OverrideBinaryProjectPath>
																			<OverrideBinaryNamespace classname='Str'>
																				<value/>
																			</OverrideBinaryNamespace>
																			<OverrideModuleOptions classname='Num'>
																				<value>0</value>
																			</OverrideModuleOptions>
																			<BuildSpecificationName classname='Str'>
																				<value/>
																			</BuildSpecificationName>
																			<OverrideBinaryVIChecksum classname='Num'>
																				<value>-1</value>
																			</OverrideBinaryVIChecksum>
																			<ArrayParametersMatchLVArrayDimenions classname='Bool'>
																				<value>false</value>
																			</ArrayParametersMatchLVArrayDimenions>
																			<Parms classname='Objs'>
																				<value lbound='[0]' ubound='[1]'>
																					<elemproto>
																						<_NAME_IN_ATTRIBUTE_ name='' classname='VIParameter' structureflags='0'/>
																					</elemproto>
																					<value>
																						<VIParameter typename='VIParameter' xsi:type='VIParameter' name='error in'>
																							<subprops>
																								<Label classname='Str'>
																									<value>error in</value>
																								</Label>
																								<Caption classname='Str'>
																									<value/>
																								</Caption>
																								<ArgVal classname='ExprValue'>
																									<value/>
																								</ArgVal>
																								<ArgDisplayVal classname='ExprValue'>
																									<value/>
																								</ArgDisplayVal>
																								<Type classname='Num'>
																									<value>3</value>
																								</Type>
																								<WireRequirement classname='Num'>
																									<value>1</value>
																								</WireRequirement>
																								<ArrayType classname='Num'>
																									<value>50</value>
																								</ArrayType>
																								<DefaultArraySize classname='Str'>
																									<value>[]</value>
																								</DefaultArraySize>
																								<ClusterType classname='Num'>
																									<value>20</value>
																								</ClusterType>
																								<NumType classname='Num'>
																									<value>7</value>
																								</NumType>
																								<ReferenceType classname='Num'>
																									<value>0</value>
																								</ReferenceType>
																								<StrPass classname='Num'>
																									<value>0</value>
																								</StrPass>
																								<DisplayType classname='Str'>
																									<value>Container</value>
																								</DisplayType>
																								<UseDefaultValues classname='Bool'>
																									<value>true</value>
																								</UseDefaultValues>
																								<PartiallySpecified classname='Bool'>
																									<value>false</value>
																								</PartiallySpecified>
																								<ArrayClusterEls classname='Objs'>
																									<value lbound='[0]' ubound='[2]'>
																										<value>
																											<VIParameterElement typename='VIParameterElement' xsi:type='VIParameterElement' name='status'>
																												<subprops>
																													<Label classname='Str'>
																														<value>status</value>
																													</Label>
																													<Caption classname='Str'>
																														<value/>
																													</Caption>
																													<ArgVal classname='ExprValue'>
																														<value>False</value>
																													</ArgVal>
																													<ArgDisplayVal classname='ExprValue'>
																														<value/>
																													</ArgDisplayVal>
																													<Type classname='Num'>
																														<value>2</value>
																													</Type>
																													<WireRequirement classname='Num'>
																														<value>1</value>
																													</WireRequirement>
																													<ArrayType classname='Num'>
																														<value>50</value>
																													</ArrayType>
																													<DefaultArraySize classname='Str'>
																														<value>[]</value>
																													</DefaultArraySize>
																													<ClusterType classname='Num'>
																														<value>20</value>
																													</ClusterType>
																													<NumType classname='Num'>
																														<value>7</value>
																													</NumType>
																													<ReferenceType classname='Num'>
																														<value>0</value>
																													</ReferenceType>
																													<StrPass classname='Num'>
																														<value>0</value>
																													</StrPass>
																													<DisplayType classname='Str'>
																														<value>Boolean</value>
																													</DisplayType>
																													<UseDefaultValues classname='Bool'>
																														<value>true</value>
																													</UseDefaultValues>
																													<PartiallySpecified classname='Bool'>
																														<value>false</value>
																													</PartiallySpecified>
																													<ArrayClusterEls classname='Objs'>
																														<value lbound='[0]' ubound='[]'/>
																													</ArrayClusterEls>
																													<AdditionalResult classname='LabVIEWParameterResult'>
																														<subprops>
																															<Condition classname='ExprValue'>
																																<value/>
																															</Condition>
																															<Flags classname='Num'>
																																<value>8192</value>
																															</Flags>
																															<CheckedState classname='Num'>
																																<value>1</value>
																															</CheckedState>
																														</subprops>
																													</AdditionalResult>
																												</subprops>
																											</VIParameterElement>
																										</value>
																										<value>
																											<VIParameterElement typename='VIParameterElement' xsi:type='VIParameterElement' name='code'>
																												<subprops>
																													<Label classname='Str'>
																														<value>code</value>
																													</Label>
																													<Caption classname='Str'>
																														<value/>
																													</Caption>
																													<ArgVal classname='ExprValue'>
																														<value>0</value>
																													</ArgVal>
																													<ArgDisplayVal classname='ExprValue'>
																														<value/>
																													</ArgDisplayVal>
																													<Type classname='Num'>
																														<value>0</value>
																													</Type>
																													<WireRequirement classname='Num'>
																														<value>1</value>
																													</WireRequirement>
																													<ArrayType classname='Num'>
																														<value>50</value>
																													</ArrayType>
																													<DefaultArraySize classname='Str'>
																														<value>[]</value>
																													</DefaultArraySize>
																													<ClusterType classname='Num'>
																														<value>20</value>
																													</ClusterType>
																													<NumType classname='Num'>
																														<value>4</value>
																													</NumType>
																													<ReferenceType classname='Num'>
																														<value>0</value>
																													</ReferenceType>
																													<StrPass classname='Num'>
																														<value>0</value>
																													</StrPass>
																													<DisplayType classname='Str'>
																														<value>Number (I32)</value>
																													</DisplayType>
																													<UseDefaultValues classname='Bool'>
																														<value>true</value>
																													</UseDefaultValues>
																													<PartiallySpecified classname='Bool'>
																														<value>false</value>
																													</PartiallySpecified>
																													<ArrayClusterEls classname='Objs'>
																														<value lbound='[0]' ubound='[]'/>
																													</ArrayClusterEls>
																													<AdditionalResult classname='LabVIEWParameterResult'>
																														<subprops>
																															<Condition classname='ExprValue'>
																																<value/>
																															</Condition>
																															<Flags classname='Num'>
																																<value>8192</value>
																															</Flags>
																															<CheckedState classname='Num'>
																																<value>1</value>
																															</CheckedState>
																														</subprops>
																													</AdditionalResult>
																												</subprops>
																											</VIParameterElement>
																										</value>
																										<value>
																											<VIParameterElement typename='VIParameterElement' xsi:type='VIParameterElement' name='source'>
																												<subprops>
																													<Label classname='Str'>
																														<value>source</value>
																													</Label>
																													<Caption classname='Str'>
																														<value/>
																													</Caption>
																													<ArgVal classname='ExprValue'>
																														<value>""</value>
																													</ArgVal>
																													<ArgDisplayVal classname='ExprValue'>
																														<value/>
																													</ArgDisplayVal>
																													<Type classname='Num'>
																														<value>1</value>
																													</Type>
																													<WireRequirement classname='Num'>
																														<value>1</value>
																													</WireRequirement>
																													<ArrayType classname='Num'>
																														<value>50</value>
																													</ArrayType>
																													<DefaultArraySize classname='Str'>
																														<value>[]</value>
																													</DefaultArraySize>
																													<ClusterType classname='Num'>
																														<value>20</value>
																													</ClusterType>
																													<NumType classname='Num'>
																														<value>7</value>
																													</NumType>
																													<ReferenceType classname='Num'>
																														<value>0</value>
																													</ReferenceType>
																													<StrPass classname='Num'>
																														<value>0</value>
																													</StrPass>
																													<DisplayType classname='Str'>
																														<value>ASCII String</value>
																													</DisplayType>
																													<UseDefaultValues classname='Bool'>
																														<value>true</value>
																													</UseDefaultValues>
																													<PartiallySpecified classname='Bool'>
																														<value>false</value>
																													</PartiallySpecified>
																													<ArrayClusterEls classname='Objs'>
																														<value lbound='[0]' ubound='[]'/>
																													</ArrayClusterEls>
																													<AdditionalResult classname='LabVIEWParameterResult'>
																														<subprops>
																															<Condition classname='ExprValue'>
																																<value/>
																															</Condition>
																															<Flags classname='Num'>
																																<value>8192</value>
																															</Flags>
																															<CheckedState classname='Num'>
																																<value>1</value>
																															</CheckedState>
																														</subprops>
																													</AdditionalResult>
																												</subprops>
																											</VIParameterElement>
																										</value>
																									</value>
																								</ArrayClusterEls>
																								<AdditionalResult classname='LabVIEWParameterResult'>
																									<subprops>
																										<Condition classname='ExprValue'>
																											<value/>
																										</Condition>
																										<Flags classname='Num'>
																											<value>8192</value>
																										</Flags>
																										<CheckedState classname='Num'>
																											<value>1</value>
																										</CheckedState>
																									</subprops>
																								</AdditionalResult>
																								<Direction classname='Num'>
																									<value>0</value>
																								</Direction>
																								<ConnectorNumber classname='Num'>
																									<value>8</value>
																								</ConnectorNumber>
																								<LegacyClusterType classname='Num'>
																									<value>0</value>
																								</LegacyClusterType>
																							</subprops>
																						</VIParameter>
																					</value>
																					<value>
																						<VIParameter typename='VIParameter' xsi:type='VIParameter' name='error out'>
																							<subprops>
																								<Label classname='Str'>
																									<value>error out</value>
																								</Label>
																								<Caption classname='Str'>
																									<value/>
																								</Caption>
																								<ArgVal classname='ExprValue'>
																									<value>Step.Result.Error</value>
																								</ArgVal>
																								<ArgDisplayVal classname='ExprValue'>
																									<value/>
																								</ArgDisplayVal>
																								<Type classname='Num'>
																									<value>3</value>
																								</Type>
																								<WireRequirement classname='Num'>
																									<value>1</value>
																								</WireRequirement>
																								<ArrayType classname='Num'>
																									<value>50</value>
																								</ArrayType>
																								<DefaultArraySize classname='Str'>
																									<value>[]</value>
																								</DefaultArraySize>
																								<ClusterType classname='Num'>
																									<value>20</value>
																								</ClusterType>
																								<NumType classname='Num'>
																									<value>7</value>
																								</NumType>
																								<ReferenceType classname='Num'>
																									<value>0</value>
																								</ReferenceType>
																								<StrPass classname='Num'>
																									<value>0</value>
																								</StrPass>
																								<DisplayType classname='Str'>
																									<value>Container</value>
																								</DisplayType>
																								<UseDefaultValues classname='Bool'>
																									<value>false</value>
																								</UseDefaultValues>
																								<PartiallySpecified classname='Bool'>
																									<value>false</value>
																								</PartiallySpecified>
																								<ArrayClusterEls classname='Objs'>
																									<value lbound='[0]' ubound='[2]'>
																										<value>
																											<VIParameterElement typename='VIParameterElement' xsi:type='VIParameterElement' name='status'>
																												<subprops>
																													<Label classname='Str'>
																														<value>status</value>
																													</Label>
																													<Caption classname='Str'>
																														<value/>
																													</Caption>
																													<ArgVal classname='ExprValue'>
																														<value>Step.Result.Error.Occurred</value>
																													</ArgVal>
																													<ArgDisplayVal classname='ExprValue'>
																														<value/>
																													</ArgDisplayVal>
																													<Type classname='Num'>
																														<value>2</value>
																													</Type>
																													<WireRequirement classname='Num'>
																														<value>1</value>
																													</WireRequirement>
																													<ArrayType classname='Num'>
																														<value>50</value>
																													</ArrayType>
																													<DefaultArraySize classname='Str'>
																														<value>[]</value>
																													</DefaultArraySize>
																													<ClusterType classname='Num'>
																														<value>20</value>
																													</ClusterType>
																													<NumType classname='Num'>
																														<value>7</value>
																													</NumType>
																													<ReferenceType classname='Num'>
																														<value>0</value>
																													</ReferenceType>
																													<StrPass classname='Num'>
																														<value>0</value>
																													</StrPass>
																													<DisplayType classname='Str'>
																														<value>Boolean</value>
																													</DisplayType>
																													<UseDefaultValues classname='Bool'>
																														<value>false</value>
																													</UseDefaultValues>
																													<PartiallySpecified classname='Bool'>
																														<value>false</value>
																													</PartiallySpecified>
																													<ArrayClusterEls classname='Objs'>
																														<value lbound='[0]' ubound='[]'/>
																													</ArrayClusterEls>
																													<AdditionalResult classname='LabVIEWParameterResult'>
																														<subprops>
																															<Condition classname='ExprValue'>
																																<value/>
																															</Condition>
																															<Flags classname='Num'>
																																<value>8192</value>
																															</Flags>
																															<CheckedState classname='Num'>
																																<value>1</value>
																															</CheckedState>
																														</subprops>
																													</AdditionalResult>
																												</subprops>
																											</VIParameterElement>
																										</value>
																										<value>
																											<VIParameterElement typename='VIParameterElement' xsi:type='VIParameterElement' name='code'>
																												<subprops>
																													<Label classname='Str'>
																														<value>code</value>
																													</Label>
																													<Caption classname='Str'>
																														<value/>
																													</Caption>
																													<ArgVal classname='ExprValue'>
																														<value>Step.Result.Error.Code</value>
																													</ArgVal>
																													<ArgDisplayVal classname='ExprValue'>
																														<value/>
																													</ArgDisplayVal>
																													<Type classname='Num'>
																														<value>0</value>
																													</Type>
																													<WireRequirement classname='Num'>
																														<value>1</value>
																													</WireRequirement>
																													<ArrayType classname='Num'>
																														<value>50</value>
																													</ArrayType>
																													<DefaultArraySize classname='Str'>
																														<value>[]</value>
																													</DefaultArraySize>
																													<ClusterType classname='Num'>
																														<value>20</value>
																													</ClusterType>
																													<NumType classname='Num'>
																														<value>4</value>
																													</NumType>
																													<ReferenceType classname='Num'>
																														<value>0</value>
																													</ReferenceType>
																													<StrPass classname='Num'>
																														<value>0</value>
																													</StrPass>
																													<DisplayType classname='Str'>
																														<value>Number (I32)</value>
																													</DisplayType>
																													<UseDefaultValues classname='Bool'>
																														<value>false</value>
																													</UseDefaultValues>
																													<PartiallySpecified classname='Bool'>
																														<value>false</value>
																													</PartiallySpecified>
																													<ArrayClusterEls classname='Objs'>
																														<value lbound='[0]' ubound='[]'/>
																													</ArrayClusterEls>
																													<AdditionalResult classname='LabVIEWParameterResult'>
																														<subprops>
																															<Condition classname='ExprValue'>
																																<value/>
																															</Condition>
																															<Flags classname='Num'>
																																<value>8192</value>
																															</Flags>
																															<CheckedState classname='Num'>
																																<value>1</value>
																															</CheckedState>
																														</subprops>
																													</AdditionalResult>
																												</subprops>
																											</VIParameterElement>
																										</value>
																										<value>
																											<VIParameterElement typename='VIParameterElement' xsi:type='VIParameterElement' name='source'>
																												<subprops>
																													<Label classname='Str'>
																														<value>source</value>
																													</Label>
																													<Caption classname='Str'>
																														<value/>
																													</Caption>
																													<ArgVal classname='ExprValue'>
																														<value>Step.Result.Error.Msg</value>
																													</ArgVal>
																													<ArgDisplayVal classname='ExprValue'>
																														<value/>
																													</ArgDisplayVal>
																													<Type classname='Num'>
																														<value>1</value>
																													</Type>
																													<WireRequirement classname='Num'>
																														<value>1</value>
																													</WireRequirement>
																													<ArrayType classname='Num'>
																														<value>50</value>
																													</ArrayType>
																													<DefaultArraySize classname='Str'>
																														<value>[]</value>
																													</DefaultArraySize>
																													<ClusterType classname='Num'>
																														<value>20</value>
																													</ClusterType>
																													<NumType classname='Num'>
																														<value>7</value>
																													</NumType>
																													<ReferenceType classname='Num'>
																														<value>0</value>
																													</ReferenceType>
																													<StrPass classname='Num'>
																														<value>0</value>
																													</StrPass>
																													<DisplayType classname='Str'>
																														<value>ASCII String</value>
																													</DisplayType>
																													<UseDefaultValues classname='Bool'>
																														<value>false</value>
																													</UseDefaultValues>
																													<PartiallySpecified classname='Bool'>
																														<value>false</value>
																													</PartiallySpecified>
																													<ArrayClusterEls classname='Objs'>
																														<value lbound='[0]' ubound='[]'/>
																													</ArrayClusterEls>
																													<AdditionalResult classname='LabVIEWParameterResult'>
																														<subprops>
																															<Condition classname='ExprValue'>
																																<value/>
																															</Condition>
																															<Flags classname='Num'>
																																<value>8192</value>
																															</Flags>
																															<CheckedState classname='Num'>
																																<value>1</value>
																															</CheckedState>
																														</subprops>
																													</AdditionalResult>
																												</subprops>
																											</VIParameterElement>
																										</value>
																									</value>
																								</ArrayClusterEls>
																								<AdditionalResult classname='LabVIEWParameterResult'>
																									<subprops>
																										<Condition classname='ExprValue'>
																											<value/>
																										</Condition>
																										<Flags classname='Num'>
																											<value>8192</value>
																										</Flags>
																										<CheckedState classname='Num'>
																											<value>1</value>
																										</CheckedState>
																									</subprops>
																								</AdditionalResult>
																								<Direction classname='Num'>
																									<value>1</value>
																								</Direction>
																								<ConnectorNumber classname='Num'>
																									<value>0</value>
																								</ConnectorNumber>
																								<LegacyClusterType classname='Num'>
																									<value>2</value>
																								</LegacyClusterType>
																							</subprops>
																						</VIParameter>
																					</value>
																				</value>
																			</Parms>
																			<NodeProperties classname='Objs'>
																				<value lbound='[0]' ubound='[]'>
																					<elemproto>
																						<_NAME_IN_ATTRIBUTE_ name='' classname='LVNodeProperty' structureflags='0'/>
																					</elemproto>
																				</value>
																			</NodeProperties>
																		</subprops>
																	</ViCall>
																</subprops>
															</SData>
															<PreCond classname='ExprValue'>
																<value/>
															</PreCond>
															<LoadOpt classname='Str'>
																<value>PreloadWhenExecuted</value>
															</LoadOpt>
															<UnloadOpt classname='Str'>
																<value>UnloadWithFile</value>
															</UnloadOpt>
															<Mode classname='Str'>
																<value>Normal</value>
															</Mode>
															<WindowActivation classname='Str'>
																<value>None</value>
															</WindowActivation>
															<ResultOption classname='Num'>
																<value>0</value>
															</ResultOption>
															<StepFCSeqF classname='Bool'>
																<value>true</value>
															</StepFCSeqF>
															<IgnoreRTE classname='Bool'>
																<value>false</value>
															</IgnoreRTE>
															<UseMutex classname='Bool'>
																<value>false</value>
															</UseMutex>
															<MutexNameOrRef classname='ExprValue'>
																<value/>
															</MutexNameOrRef>
															<BatchSyncOpt classname='Num'>
																<value>0</value>
															</BatchSyncOpt>
															<SwitchEnabled classname='Bool'>
																<value>false</value>
															</SwitchEnabled>
															<VirtualDeviceName classname='ExprValue'>
																<value/>
															</VirtualDeviceName>
															<SwitchOperation classname='Num'>
																<value>1</value>
															</SwitchOperation>
															<RouteGroupConnect classname='ExprValue'>
																<value/>
															</RouteGroupConnect>
															<RouteGroupDisconnect classname='ExprValue'>
																<value/>
															</RouteGroupDisconnect>
															<MulticonnectMode classname='Num'>
																<value>1</value>
															</MulticonnectMode>
															<OperationOrder classname='Num'>
																<value>2</value>
															</OperationOrder>
															<ConnectionLifetime classname='Num'>
																<value>0</value>
															</ConnectionLifetime>
															<WaitForDebounce classname='Bool'>
																<value>true</value>
															</WaitForDebounce>
															<PassAct classname='Str'>
																<value>Next</value>
															</PassAct>
															<FailAct classname='Str'>
																<value>Next</value>
															</FailAct>
															<PassActTarget classname='ExprValue'>
																<value/>
															</PassActTarget>
															<FailActTarget classname='ExprValue'>
																<value/>
															</FailActTarget>
															<CustExpr classname='ExprValue'>
																<value/>
															</CustExpr>
															<CustTrueAct classname='Str'>
																<value>Next</value>
															</CustTrueAct>
															<CustFalseAct classname='Str'>
																<value>Next</value>
															</CustFalseAct>
															<CustTrueActTarget classname='ExprValue'>
																<value/>
															</CustTrueActTarget>
															<CustFalseActTarget classname='ExprValue'>
																<value/>
															</CustFalseActTarget>
															<LoopType classname='Str'>
																<value>NoLooping</value>
															</LoopType>
															<LoopWhile classname='ExprValue'>
																<value/>
															</LoopWhile>
															<LoopStatus classname='ExprValue'>
																<value/>
															</LoopStatus>
															<LoopIncrement classname='ExprValue'>
																<value>RunState.LoopIndex += 1</value>
															</LoopIncrement>
															<LoopInitialize classname='ExprValue'>
																<value>RunState.LoopIndex = 0</value>
															</LoopInitialize>
															<LoopOpt classname='Num'>
																<value>0</value>
															</LoopOpt>
															<PreExpr classname='ExprValue'>
																<value/>
															</PreExpr>
															<PostExpr classname='ExprValue'>
																<value/>
															</PostExpr>
															<StatusExpr classname='ExprValue'>
																<value/>
															</StatusExpr>
															<CanSpecifyModule classname='Bool'>
																<value>true</value>
															</CanSpecifyModule>
															<CanEditCode classname='Bool'>
																<value>true</value>
															</CanEditCode>
															<CanEditModulePrototype classname='Bool'>
																<value>true</value>
															</CanEditModulePrototype>
															<CanEditParameterAdditionalResults classname='Bool'>
																<value>true</value>
															</CanEditParameterAdditionalResults>
															<PrecondIntExe classname='Num'>
																<value>0</value>
															</PrecondIntExe>
															<CustomResults classname='Objs'>
																<value lbound='[0]' ubound='[]'>
																	<elemproto>
																		<_NAME_IN_ATTRIBUTE_ name='' classname='CustomResult'>
																			<subprops>
																				<Name classname='ExprValue'>
																					<value/>
																				</Name>
																				<ValueToLog classname='ExprValue'>
																					<value/>
																				</ValueToLog>
																				<Condition classname='ExprValue'>
																					<value/>
																				</Condition>
																				<Flags classname='Num'>
																					<value>8192</value>
																				</Flags>
																				<CheckedState classname='Num'>
																					<value>2</value>
																				</CheckedState>
																				<Type classname='PropertyObjectType'>
																					<subprops>
																						<ValueType classname='Num'>
																							<value>3</value>
																						</ValueType>
																						<IsObject classname='Bool'>
																							<value>true</value>
																						</IsObject>
																						<TypeName classname='Str'>
																							<value/>
																						</TypeName>
																						<ElementType classname='Objs'>
																							<value lbound='[0]' ubound='[]'/>
																						</ElementType>
																						<ArrayDimensions classname='ArrayDimensions'>
																							<subprops>
																								<LowerBounds classname='Nums'>
																									<value lbound='[0]' ubound='[]'/>
																								</LowerBounds>
																								<UpperBounds classname='Nums'>
																									<value lbound='[0]' ubound='[]'/>
																								</UpperBounds>
																							</subprops>
																						</ArrayDimensions>
																						<Representation classname='Num'>
																							<value>1</value>
																						</Representation>
																						<ClassName classname='Str'>
																							<value/>
																						</ClassName>
																					</subprops>
																				</Type>
																				<Elements classname='Objs'>
																					<value lbound='[0]' ubound='[]'/>
																				</Elements>
																				<IsAnyType classname='Bool'>
																					<value>true</value>
																				</IsAnyType>
																			</subprops>
																		</_NAME_IN_ATTRIBUTE_>
																	</elemproto>
																</value>
															</CustomResults>
															<AdditionalResultsHints classname='Objs'>
																<value lbound='[0]' ubound='[]'>
																	<elemproto>
																		<_NAME_IN_ATTRIBUTE_ name='' classname='CustomResult'>
																			<subprops>
																				<Name classname='ExprValue'>
																					<value/>
																				</Name>
																				<ValueToLog classname='ExprValue'>
																					<value/>
																				</ValueToLog>
																				<Condition classname='ExprValue'>
																					<value/>
																				</Condition>
																				<Flags classname='Num'>
																					<value>8192</value>
																				</Flags>
																				<CheckedState classname='Num'>
																					<value>2</value>
																				</CheckedState>
																				<Type classname='PropertyObjectType'>
																					<subprops>
																						<ValueType classname='Num'>
																							<value>3</value>
																						</ValueType>
																						<IsObject classname='Bool'>
																							<value>true</value>
																						</IsObject>
																						<TypeName classname='Str'>
																							<value/>
																						</TypeName>
																						<ElementType classname='Objs'>
																							<value lbound='[0]' ubound='[]'/>
																						</ElementType>
																						<ArrayDimensions classname='ArrayDimensions'>
																							<subprops>
																								<LowerBounds classname='Nums'>
																									<value lbound='[0]' ubound='[]'/>
																								</LowerBounds>
																								<UpperBounds classname='Nums'>
																									<value lbound='[0]' ubound='[]'/>
																								</UpperBounds>
																							</subprops>
																						</ArrayDimensions>
																						<Representation classname='Num'>
																							<value>1</value>
																						</Representation>
																						<ClassName classname='Str'>
																							<value/>
																						</ClassName>
																					</subprops>
																				</Type>
																				<Elements classname='Objs'>
																					<value lbound='[0]' ubound='[]'/>
																				</Elements>
																				<IsAnyType classname='Bool'>
																					<value>true</value>
																				</IsAnyType>
																			</subprops>
																		</_NAME_IN_ATTRIBUTE_>
																	</elemproto>
																</value>
															</AdditionalResultsHints>
														</subprops>
													</TS>
													<Result classname='Obj'>
														<subprops>
															<Error classname='Obj'>
																<subprops>
																	<Code classname='Num'>
																		<value>0</value>
																	</Code>
																	<Msg classname='Str'>
																		<value/>
																	</Msg>
																	<Occurred classname='Bool'>
																		<value>false</value>
																	</Occurred>
																</subprops>
															</Error>
															<Status classname='Str'>
																<value/>
															</Status>
															<ReportText classname='Str'>
																<value/>
															</ReportText>
															<Common classname='Obj'/>
														</subprops>
													</Result>
												</subprops>
											</Step>
										</value>
									</value>
								</Cleanup>
								<RecordResults classname='Bool' valueflags='4194312'>
									<value>true</value>
								</RecordResults>
								<RTS classname='Obj' valueflags='4456456'>
									<subprops>
										<Type classname='Num' valueflags='4194304'>
											<value>0</value>
										</Type>
										<OptimizeNonReentrantCalls classname='Bool' valueflags='4194304'>
											<value>true</value>
										</OptimizeNonReentrantCalls>
										<EPNameExpr classname='Str' valueflags='4194304'>
											<value>"Unnamed Entry Point"</value>
										</EPNameExpr>
										<EPEnabledExpr classname='Str' valueflags='4194304'>
											<value>True</value>
										</EPEnabledExpr>
										<EPMenuHint classname='Str' valueflags='4194304'>
											<value/>
										</EPMenuHint>
										<EPIgnoreClient classname='Bool' valueflags='4194304'>
											<value>false</value>
										</EPIgnoreClient>
										<EPInitiallyHidden classname='Bool' valueflags='4194304'>
											<value>false</value>
										</EPInitiallyHidden>
										<EPCheckToSaveTitledFile classname='Bool' valueflags='4194304'>
											<value>true</value>
										</EPCheckToSaveTitledFile>
										<ShowEPAlways classname='Bool' valueflags='4194304'>
											<value>false</value>
										</ShowEPAlways>
										<ShowEPForFileWin classname='Bool' valueflags='4194304'>
											<value>true</value>
										</ShowEPForFileWin>
										<ShowEPForExeWin classname='Bool' valueflags='4194304'>
											<value>false</value>
										</ShowEPForExeWin>
										<ShowEPForEditorOnly classname='Bool' valueflags='4194304'>
											<value>false</value>
										</ShowEPForEditorOnly>
										<AllowIntExeOfEP classname='Bool' valueflags='4194304'>
											<value>false</value>
										</AllowIntExeOfEP>
										<CopyStepsOnOverriding classname='Bool' valueflags='4194304'>
											<value>true</value>
										</CopyStepsOnOverriding>
										<Priority classname='Num' valueflags='4194304'>
											<value>2953567917</value>
										</Priority>
									</subprops>
								</RTS>
								<Requirements classname='Obj' valueflags='4456456'>
									<subprops>
										<Links classname='Strs' valueflags='71303168'>
											<value lbound='[0]' ubound='[]'/>
										</Links>
									</subprops>
								</Requirements>
								<FailureAction classname='Num' valueflags='4194312'>
									<value>2</value>
								</FailureAction>
							</subprops>
						</Sequence>
					</value>
				</value>
			</Seq>
			<FileGlobalDefaults classname='Obj' valueflags='4194304'>
				<subprops>
					<MeasurementLink classname='Obj'>
						<subprops>
							<EnableMonitoring classname='Bool'>
								<value>false</value>
							</EnableMonitoring>
						</subprops>
					</MeasurementLink>
				</subprops>
			</FileGlobalDefaults>
			<ModelFile typename='Path' xsi:type='Path' classname='PathValue' valueflags='4194312'>
				<value/>
			</ModelFile>
			<LoadOpt classname='Str' valueflags='4194312'>
				<value>UseStepLoadOpt</value>
			</LoadOpt>
			<UnloadOpt classname='Str' valueflags='4194312'>
				<value>UseStepUnloadOpt</value>
			</UnloadOpt>
			<Version classname='Str' valueflags='4194312'>
				<value>0.0.0.0</value>
			</Version>
			<BatchSync classname='Num' valueflags='4194312'>
				<value>1</value>
			</BatchSync>
			<SFGlobalsScope classname='Num' valueflags='4194312'>
				<value>0</value>
			</SFGlobalsScope>
			<Type classname='Num' valueflags='4194312'>
				<value>0</value>
			</Type>
			<ModelOption classname='Num' valueflags='4194312'>
				<value>0</value>
			</ModelOption>
			<Requirements classname='Obj' valueflags='4194305'>
				<subprops>
					<Links classname='Strs' valueflags='71303168'>
						<value lbound='[0]' ubound='[]'/>
					</Links>
				</subprops>
			</Requirements>
		</subprops>
	</Data>
</teststandfileheader>
